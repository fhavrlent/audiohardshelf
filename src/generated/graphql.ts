import { GraphQLResolveInfo, GraphQLScalarType, GraphQLScalarTypeConfig } from 'graphql';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = {
  [_ in K]?: never;
};
export type Incremental<T> =
  | T
  | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
export type RequireFields<T, K extends keyof T> = Omit<T, K> & { [P in K]-?: NonNullable<T[P]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string };
  String: { input: string; output: string };
  Boolean: { input: boolean; output: boolean };
  Int: { input: number; output: number };
  Float: { input: number; output: number };
  bigint: { input: any; output: any };
  citext: { input: any; output: any };
  date: { input: any; output: any };
  float8: { input: any; output: any };
  json: { input: any; output: any };
  jsonb: { input: any; output: any };
  numeric: { input: any; output: any };
  smallint: { input: any; output: any };
  timestamp: { input: any; output: any };
  timestamptz: { input: any; output: any };
};

export type AuthorIdType = {
  __typename?: 'AuthorIdType';
  author?: Maybe<Authors>;
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type AuthorInputType = {
  alias_id?: InputMaybe<Scalars['Int']['input']>;
  bio?: InputMaybe<Scalars['String']['input']>;
  born_date?: InputMaybe<Scalars['date']['input']>;
  born_year?: InputMaybe<Scalars['Int']['input']>;
  death_date?: InputMaybe<Scalars['date']['input']>;
  death_year?: InputMaybe<Scalars['Int']['input']>;
  gender_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_id?: InputMaybe<Scalars['Int']['input']>;
  is_bipoc?: InputMaybe<Scalars['Boolean']['input']>;
  is_lgbtq?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_personal?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

export type BasicTag = {
  category: Scalars['String']['input'];
  spoiler: Scalars['Boolean']['input'];
  tag: Scalars['String']['input'];
};

export type BasicTagType = {
  __typename?: 'BasicTagType';
  category: Scalars['String']['output'];
  categorySlug: Scalars['String']['output'];
  count?: Maybe<Scalars['Int']['output']>;
  spoiler: Scalars['Boolean']['output'];
  tag: Scalars['String']['output'];
  tagSlug: Scalars['String']['output'];
};

export type BookDtoInput = {
  asin?: InputMaybe<Scalars['String']['input']>;
  audio_seconds?: InputMaybe<Scalars['Int']['input']>;
  contributions?: InputMaybe<Array<InputMaybe<ContributionInputType>>>;
  country_id?: InputMaybe<Scalars['Int']['input']>;
  edition_format?: InputMaybe<Scalars['String']['input']>;
  edition_information?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['Int']['input']>;
  isbn_10?: InputMaybe<Scalars['String']['input']>;
  isbn_13?: InputMaybe<Scalars['String']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  page_count?: InputMaybe<Scalars['Int']['input']>;
  publisher_id?: InputMaybe<Scalars['Int']['input']>;
  reading_format_id?: InputMaybe<Scalars['Int']['input']>;
  release_date?: InputMaybe<Scalars['date']['input']>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type BookDtoType = {
  book_category_id?: InputMaybe<Scalars['Int']['input']>;
  characters?: InputMaybe<Array<InputMaybe<CharacterDtoInput>>>;
  collection_book_ids?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  compilation?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  headline?: InputMaybe<Scalars['String']['input']>;
  librarian_tags?: InputMaybe<Array<InputMaybe<TagsDtoInput>>>;
  literary_type_id?: InputMaybe<Scalars['Int']['input']>;
  series?: InputMaybe<Array<InputMaybe<BookSeriesDtoInput>>>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type BookIdType = {
  __typename?: 'BookIdType';
  book?: Maybe<Books>;
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type BookInput = {
  book_status_id?: InputMaybe<Scalars['Int']['input']>;
  canonical_id?: InputMaybe<Scalars['Int']['input']>;
  default_audio_edition_id?: InputMaybe<Scalars['Int']['input']>;
  default_cover_edition_id?: InputMaybe<Scalars['Int']['input']>;
  default_ebook_edition_id?: InputMaybe<Scalars['Int']['input']>;
  default_physical_edition_id?: InputMaybe<Scalars['Int']['input']>;
  dto?: InputMaybe<BookDtoType>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  user_added?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BookMappingIdType = {
  __typename?: 'BookMappingIdType';
  book_mapping?: Maybe<Book_Mappings>;
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type BookMappingInput = {
  edition_id: Scalars['Int']['input'];
  external_id: Scalars['String']['input'];
  platform_id: Scalars['Int']['input'];
};

export type BookSeriesDtoInput = {
  collection_book_ids?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  compilation?: InputMaybe<Scalars['Boolean']['input']>;
  details?: InputMaybe<Scalars['String']['input']>;
  featured?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['numeric']['input']>;
  series_id: Scalars['Int']['input'];
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']['input']>;
  _gt?: InputMaybe<Scalars['Boolean']['input']>;
  _gte?: InputMaybe<Scalars['Boolean']['input']>;
  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Boolean']['input']>;
  _lte?: InputMaybe<Scalars['Boolean']['input']>;
  _neq?: InputMaybe<Scalars['Boolean']['input']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

export type CharacterDtoInput = {
  character_id: Scalars['Int']['input'];
  position: Scalars['Int']['input'];
  spoiler: Scalars['Boolean']['input'];
};

export type CharacterIdType = {
  __typename?: 'CharacterIdType';
  character?: Maybe<Characters>;
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type CharacterInput = {
  biography?: InputMaybe<Scalars['String']['input']>;
  gender_id?: InputMaybe<Scalars['Int']['input']>;
  has_disability?: InputMaybe<Scalars['Boolean']['input']>;
  image_id?: InputMaybe<Scalars['Int']['input']>;
  is_lgbtq?: InputMaybe<Scalars['Boolean']['input']>;
  is_poc?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
};

export type CollectionImportIdType = {
  __typename?: 'CollectionImportIdType';
  collection_import?: Maybe<Collection_Imports>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type CollectionImportInput = {
  contents_key: Scalars['String']['input'];
  override_date_read: Scalars['Boolean']['input'];
  override_ratings: Scalars['Boolean']['input'];
  override_shelves: Scalars['Boolean']['input'];
  platform_id: Scalars['Int']['input'];
  tag_resolution: Scalars['Int']['input'];
  user_id: Scalars['Int']['input'];
};

export type CollectionImportResultIdType = {
  __typename?: 'CollectionImportResultIdType';
  collection_import_result?: Maybe<Collection_Import_Results>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type ContributionInputType = {
  author_id: Scalars['Int']['input'];
  contribution?: InputMaybe<Scalars['String']['input']>;
};

export type CreateBookFromPlatformInput = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  external_id: Scalars['String']['input'];
  platform_id: Scalars['Int']['input'];
};

export type CreatePromptInput = {
  description: Scalars['String']['input'];
  privacy_setting_id: Scalars['Int']['input'];
  question: Scalars['String']['input'];
};

export type DatesReadInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  finished_at?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  progress_pages?: InputMaybe<Scalars['Int']['input']>;
  progress_seconds?: InputMaybe<Scalars['Int']['input']>;
  reading_format_id?: InputMaybe<Scalars['Int']['input']>;
  started_at?: InputMaybe<Scalars['date']['input']>;
};

export type DeleteFollowedPromptType = {
  __typename?: 'DeleteFollowedPromptType';
  success: Scalars['Boolean']['output'];
};

export type DeleteListType = {
  __typename?: 'DeleteListType';
  success: Scalars['Boolean']['output'];
};

export type DeleteReadingJournalOutput = {
  __typename?: 'DeleteReadingJournalOutput';
  id: Scalars['Int']['output'];
};

export type DeleteReadingJournalsOutput = {
  __typename?: 'DeleteReadingJournalsOutput';
  ids?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
};

export type DtoTag = {
  spoiler: Scalars['Boolean']['input'];
  tag: Scalars['String']['input'];
  tagSlug: Scalars['String']['input'];
};

export type EditionIdType = {
  __typename?: 'EditionIdType';
  edition?: Maybe<Editions>;
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type EditionInput = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  dto?: InputMaybe<BookDtoInput>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FollowedListType = {
  __typename?: 'FollowedListType';
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  followed_list?: Maybe<Followed_Lists>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type FollowedPromptType = {
  __typename?: 'FollowedPromptType';
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  followed_prompt?: Maybe<Followed_Prompts>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type FollowedUserType = {
  __typename?: 'FollowedUserType';
  error?: Maybe<Scalars['String']['output']>;
  followed_user?: Maybe<Users>;
  followed_user_id?: Maybe<Scalars['Int']['output']>;
  followed_users?: Maybe<Followed_Users>;
  id?: Maybe<Scalars['Int']['output']>;
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

export type GoalConditionInput = {
  authorBipoc?: InputMaybe<Scalars['Int']['input']>;
  authorGenderIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  authorLgbtqia?: InputMaybe<Scalars['Int']['input']>;
  bookCategoryIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  readingFormatId?: InputMaybe<Scalars['Int']['input']>;
};

export type GoalIdType = {
  __typename?: 'GoalIdType';
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  goal?: Maybe<Goals>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type GoalInput = {
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  conditions: GoalConditionInput;
  description: Scalars['String']['input'];
  end_date: Scalars['date']['input'];
  goal: Scalars['Int']['input'];
  metric: Scalars['String']['input'];
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  start_date: Scalars['date']['input'];
};

export type ImageIdType = {
  __typename?: 'ImageIdType';
  id: Scalars['Int']['output'];
  image?: Maybe<Images>;
};

export type ImageInput = {
  imageable_id: Scalars['Int']['input'];
  imageable_type: Scalars['String']['input'];
  url: Scalars['String']['input'];
};

export type InsertBlockOutput = {
  __typename?: 'InsertBlockOutput';
  error?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  user_block?: Maybe<User_Blocks>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']['input']>;
  _gt?: InputMaybe<Scalars['Int']['input']>;
  _gte?: InputMaybe<Scalars['Int']['input']>;
  _in?: InputMaybe<Array<Scalars['Int']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Int']['input']>;
  _lte?: InputMaybe<Scalars['Int']['input']>;
  _neq?: InputMaybe<Scalars['Int']['input']>;
  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type LikeDeleteType = {
  __typename?: 'LikeDeleteType';
  likes_count: Scalars['Int']['output'];
};

export type LikeType = {
  __typename?: 'LikeType';
  id: Scalars['Int']['output'];
  like?: Maybe<Likes>;
  likes_count: Scalars['Int']['output'];
};

export type ListBookDeleteType = {
  __typename?: 'ListBookDeleteType';
  id?: Maybe<Scalars['Int']['output']>;
  list?: Maybe<Lists>;
  list_id?: Maybe<Scalars['Int']['output']>;
};

export type ListBookIdType = {
  __typename?: 'ListBookIdType';
  id?: Maybe<Scalars['Int']['output']>;
  list_book?: Maybe<List_Books>;
};

export type ListBookInput = {
  book_id: Scalars['Int']['input'];
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  list_id: Scalars['Int']['input'];
  position?: InputMaybe<Scalars['Int']['input']>;
};

export type ListDeleteType = {
  __typename?: 'ListDeleteType';
  success: Scalars['Boolean']['output'];
};

export type ListIdType = {
  __typename?: 'ListIdType';
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
  list?: Maybe<Lists>;
};

export type ListInput = {
  default_view?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  featured_profile?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  ranked?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type NewBookIdType = {
  __typename?: 'NewBookIdType';
  book?: Maybe<Books>;
  edition?: Maybe<Editions>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type NewsletterStatusType = {
  __typename?: 'NewsletterStatusType';
  subscribed: Scalars['Boolean']['output'];
};

export type OptionalEditionIdType = {
  __typename?: 'OptionalEditionIdType';
  edition?: Maybe<Editions>;
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
};

export type PromptAnswerCreateInput = {
  book_id: Scalars['Int']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  prompt_id: Scalars['Int']['input'];
};

export type PromptAnswerIdType = {
  __typename?: 'PromptAnswerIdType';
  book_id: Scalars['Int']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  prompt_answer?: Maybe<Prompt_Answers>;
  prompt_book?: Maybe<Prompt_Books_Summary>;
  prompt_id: Scalars['Int']['output'];
  user_id: Scalars['Int']['output'];
};

export type PromptIdType = {
  __typename?: 'PromptIdType';
  error?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  prompt?: Maybe<Prompts>;
};

export type PublisherIdType = {
  __typename?: 'PublisherIdType';
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
  publisher?: Maybe<Publishers>;
};

export type PublisherInputType = {
  canonical_id?: InputMaybe<Scalars['Int']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
};

export type ReadingJournalCreateType = {
  action_at?: InputMaybe<Scalars['date']['input']>;
  book_id: Scalars['Int']['input'];
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  entry?: InputMaybe<Scalars['String']['input']>;
  event: Scalars['String']['input'];
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  privacy_setting_id: Scalars['Int']['input'];
  tags: Array<InputMaybe<BasicTag>>;
};

export type ReadingJournalOutput = {
  __typename?: 'ReadingJournalOutput';
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
  reading_journal?: Maybe<Reading_Journals>;
};

export type ReadingJournalUpdateType = {
  action_at?: InputMaybe<Scalars['date']['input']>;
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  entry?: InputMaybe<Scalars['String']['input']>;
  event?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  tags?: InputMaybe<Array<InputMaybe<BasicTag>>>;
};

export type ReferralType = {
  __typename?: 'ReferralType';
  book?: Maybe<Books>;
  book_id: Scalars['Int']['output'];
  count: Scalars['Int']['output'];
};

export type ReportInput = {
  details: Scalars['String']['input'];
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  reportable_id: Scalars['Int']['input'];
  reportable_type: Scalars['String']['input'];
  service_name?: InputMaybe<Scalars['String']['input']>;
};

export type ReportOutput = {
  __typename?: 'ReportOutput';
  complete?: Maybe<Scalars['Boolean']['output']>;
  created?: Maybe<Scalars['Boolean']['output']>;
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type SearchOutput = {
  __typename?: 'SearchOutput';
  error?: Maybe<Scalars['String']['output']>;
  ids?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  page?: Maybe<Scalars['Int']['output']>;
  per_page?: Maybe<Scalars['Int']['output']>;
  query?: Maybe<Scalars['String']['output']>;
  query_type?: Maybe<Scalars['String']['output']>;
  results?: Maybe<Scalars['jsonb']['output']>;
};

export type SeriesIdType = {
  __typename?: 'SeriesIdType';
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
  series?: Maybe<Series>;
};

export type SeriesInput = {
  name: Scalars['String']['input'];
};

export type SeriesInputType = {
  author_id?: InputMaybe<Scalars['Int']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_completed?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']['input']>;
  _gt?: InputMaybe<Scalars['String']['input']>;
  _gte?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']['input']>;
  _in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']['input']>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']['input']>;
  _lt?: InputMaybe<Scalars['String']['input']>;
  _lte?: InputMaybe<Scalars['String']['input']>;
  _neq?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']['input']>;
  _nin?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']['input']>;
};

export type SubscriptionsType = {
  __typename?: 'SubscriptionsType';
  billing_portal_url?: Maybe<Scalars['String']['output']>;
  membership?: Maybe<Scalars['String']['output']>;
  membership_ends_at?: Maybe<Scalars['timestamp']['output']>;
  monthly_session_id?: Maybe<Scalars['String']['output']>;
  monthly_session_url?: Maybe<Scalars['String']['output']>;
  payment_system?: Maybe<Scalars['String']['output']>;
  yearly_session_id?: Maybe<Scalars['String']['output']>;
  yearly_session_url?: Maybe<Scalars['String']['output']>;
};

export type SuccessType = {
  __typename?: 'SuccessType';
  success: Scalars['Boolean']['output'];
};

export type TagsDtoInput = {
  ContentWarning?: InputMaybe<Array<InputMaybe<DtoTag>>>;
  Genre?: InputMaybe<Array<InputMaybe<DtoTag>>>;
  Mood?: InputMaybe<Array<InputMaybe<DtoTag>>>;
};

export type TagsType = {
  __typename?: 'TagsType';
  tags: Array<Maybe<BasicTagType>>;
};

export type TrendingBookType = {
  __typename?: 'TrendingBookType';
  error?: Maybe<Scalars['String']['output']>;
  ids?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
};

export type UpdatePromptInput = {
  description: Scalars['String']['input'];
  id: Scalars['Int']['input'];
  privacy_setting_id: Scalars['Int']['input'];
  question: Scalars['String']['input'];
};

export type UserBookCreateInput = {
  book_id: Scalars['Int']['input'];
  date_added?: InputMaybe<Scalars['date']['input']>;
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  first_started_reading_date?: InputMaybe<Scalars['date']['input']>;
  last_read_date?: InputMaybe<Scalars['date']['input']>;
  media_url?: InputMaybe<Scalars['String']['input']>;
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  private_notes?: InputMaybe<Scalars['String']['input']>;
  rating?: InputMaybe<Scalars['numeric']['input']>;
  read_count?: InputMaybe<Scalars['Int']['input']>;
  reading_format_id?: InputMaybe<Scalars['Int']['input']>;
  recommended_by?: InputMaybe<Scalars['String']['input']>;
  recommended_for?: InputMaybe<Scalars['String']['input']>;
  referrer_user_id?: InputMaybe<Scalars['Int']['input']>;
  review_has_spoilers?: InputMaybe<Scalars['Boolean']['input']>;
  review_slate?: InputMaybe<Scalars['jsonb']['input']>;
  reviewed_at?: InputMaybe<Scalars['date']['input']>;
  sponsored_review?: InputMaybe<Scalars['Boolean']['input']>;
  status_id?: InputMaybe<Scalars['Int']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type UserBookDeleteType = {
  __typename?: 'UserBookDeleteType';
  book_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  user_book?: Maybe<User_Books>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

export type UserBookIdType = {
  __typename?: 'UserBookIdType';
  error?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  user_book?: Maybe<User_Books>;
};

export type UserBookReadIdType = {
  __typename?: 'UserBookReadIdType';
  error?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  user_book_read?: Maybe<User_Book_Reads>;
};

export type UserBookUpdateInput = {
  date_added?: InputMaybe<Scalars['date']['input']>;
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  first_started_reading_date?: InputMaybe<Scalars['date']['input']>;
  last_read_date?: InputMaybe<Scalars['date']['input']>;
  media_url?: InputMaybe<Scalars['String']['input']>;
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  private_notes?: InputMaybe<Scalars['String']['input']>;
  rating?: InputMaybe<Scalars['numeric']['input']>;
  read_count?: InputMaybe<Scalars['Int']['input']>;
  reading_format_id?: InputMaybe<Scalars['Int']['input']>;
  recommended_by?: InputMaybe<Scalars['String']['input']>;
  recommended_for?: InputMaybe<Scalars['String']['input']>;
  referrer_user_id?: InputMaybe<Scalars['Int']['input']>;
  review_has_spoilers?: InputMaybe<Scalars['Boolean']['input']>;
  review_slate?: InputMaybe<Scalars['jsonb']['input']>;
  reviewed_at?: InputMaybe<Scalars['date']['input']>;
  sponsored_review?: InputMaybe<Scalars['Boolean']['input']>;
  status_id?: InputMaybe<Scalars['Int']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type UserBooksReadUpsertType = {
  __typename?: 'UserBooksReadUpsertType';
  error?: Maybe<Scalars['String']['output']>;
  user_book?: Maybe<User_Books>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
};

export type UserIdType = {
  __typename?: 'UserIdType';
  errors?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
  user?: Maybe<Users>;
};

export type UserJoinInput = {
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
  referrer_id?: InputMaybe<Scalars['Int']['input']>;
  referrer_url?: InputMaybe<Scalars['String']['input']>;
};

export type UserLoginInput = {
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

export type ValidateReceiptType = {
  __typename?: 'ValidateReceiptType';
  result: Scalars['jsonb']['output'];
  supporter?: Maybe<Scalars['Boolean']['output']>;
};

/** columns and relationships of "activities" */
export type Activities = {
  __typename?: 'activities';
  /** An object relationship */
  book?: Maybe<Books>;
  book_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  data: Scalars['jsonb']['output'];
  event: Scalars['String']['output'];
  /** An array relationship */
  followers: Array<Followed_Users>;
  id: Scalars['Int']['output'];
  /** An array relationship */
  likes: Array<Likes>;
  likes_count: Scalars['Int']['output'];
  object_type: Scalars['String']['output'];
  original_book_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  privacy_setting: Privacy_Settings;
  privacy_setting_id: Scalars['Int']['output'];
  uid: Scalars['String']['output'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
};

/** columns and relationships of "activities" */
export type ActivitiesDataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "activities" */
export type ActivitiesFollowersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

/** columns and relationships of "activities" */
export type ActivitiesLikesArgs = {
  distinct_on?: InputMaybe<Array<Likes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Likes_Order_By>>;
  where?: InputMaybe<Likes_Bool_Exp>;
};

/** order by aggregate values of table "activities" */
export type Activities_Aggregate_Order_By = {
  avg?: InputMaybe<Activities_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Activities_Max_Order_By>;
  min?: InputMaybe<Activities_Min_Order_By>;
  stddev?: InputMaybe<Activities_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Activities_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Activities_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Activities_Sum_Order_By>;
  var_pop?: InputMaybe<Activities_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Activities_Var_Samp_Order_By>;
  variance?: InputMaybe<Activities_Variance_Order_By>;
};

/** order by avg() on columns of table "activities" */
export type Activities_Avg_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "activities". All fields are combined with a logical 'AND'. */
export type Activities_Bool_Exp = {
  _and?: InputMaybe<Array<Activities_Bool_Exp>>;
  _not?: InputMaybe<Activities_Bool_Exp>;
  _or?: InputMaybe<Array<Activities_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  data?: InputMaybe<Jsonb_Comparison_Exp>;
  event?: InputMaybe<String_Comparison_Exp>;
  followers?: InputMaybe<Followed_Users_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  likes?: InputMaybe<Likes_Bool_Exp>;
  likes_count?: InputMaybe<Int_Comparison_Exp>;
  object_type?: InputMaybe<String_Comparison_Exp>;
  original_book_id?: InputMaybe<Int_Comparison_Exp>;
  privacy_setting?: InputMaybe<Privacy_Settings_Bool_Exp>;
  privacy_setting_id?: InputMaybe<Int_Comparison_Exp>;
  uid?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "activities" */
export type Activities_Max_Order_By = {
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  event?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  uid?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "activities" */
export type Activities_Min_Order_By = {
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  event?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  uid?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "activities" */
export type Activities_Mutation_Response = {
  __typename?: 'activities_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Activities>;
};

/** Ordering options when selecting data from "activities". */
export type Activities_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  data?: InputMaybe<Order_By>;
  event?: InputMaybe<Order_By>;
  followers_aggregate?: InputMaybe<Followed_Users_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  likes_aggregate?: InputMaybe<Likes_Aggregate_Order_By>;
  likes_count?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting?: InputMaybe<Privacy_Settings_Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  uid?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "activities" */
export enum Activities_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  Event = 'event',
  /** column name */
  Id = 'id',
  /** column name */
  LikesCount = 'likes_count',
  /** column name */
  ObjectType = 'object_type',
  /** column name */
  OriginalBookId = 'original_book_id',
  /** column name */
  PrivacySettingId = 'privacy_setting_id',
  /** column name */
  Uid = 'uid',
  /** column name */
  UserId = 'user_id',
}

/** order by stddev() on columns of table "activities" */
export type Activities_Stddev_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "activities" */
export type Activities_Stddev_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "activities" */
export type Activities_Stddev_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "activities" */
export type Activities_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Activities_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Activities_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  data?: InputMaybe<Scalars['jsonb']['input']>;
  event?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  likes_count?: InputMaybe<Scalars['Int']['input']>;
  object_type?: InputMaybe<Scalars['String']['input']>;
  original_book_id?: InputMaybe<Scalars['Int']['input']>;
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  uid?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "activities" */
export type Activities_Sum_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "activities" */
export type Activities_Var_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "activities" */
export type Activities_Var_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "activities" */
export type Activities_Variance_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

export type Activity_Feed_Args = {
  feed_limit?: InputMaybe<Scalars['Int']['input']>;
  feed_offset?: InputMaybe<Scalars['Int']['input']>;
};

export type Activity_Foryou_Feed_Args = {
  feed_limit?: InputMaybe<Scalars['Int']['input']>;
  feed_offset?: InputMaybe<Scalars['Int']['input']>;
};

/** columns and relationships of "authors" */
export type Authors = {
  __typename?: 'authors';
  /** An array relationship */
  alias: Array<Authors>;
  alias_id?: Maybe<Scalars['Int']['output']>;
  alternate_names: Scalars['jsonb']['output'];
  bio?: Maybe<Scalars['String']['output']>;
  books_count: Scalars['Int']['output'];
  born_date?: Maybe<Scalars['date']['output']>;
  born_year?: Maybe<Scalars['Int']['output']>;
  cached_image: Scalars['jsonb']['output'];
  /** An object relationship */
  canonical?: Maybe<Authors>;
  canonical_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  contributions: Array<Contributions>;
  /** An aggregate relationship */
  contributions_aggregate: Contributions_Aggregate;
  /** An object relationship */
  creator?: Maybe<Users>;
  death_date?: Maybe<Scalars['date']['output']>;
  death_year?: Maybe<Scalars['Int']['output']>;
  gender_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  identifiers: Scalars['jsonb']['output'];
  /** An object relationship */
  image?: Maybe<Images>;
  image_id?: Maybe<Scalars['Int']['output']>;
  is_bipoc?: Maybe<Scalars['Boolean']['output']>;
  is_lgbtq?: Maybe<Scalars['Boolean']['output']>;
  links: Scalars['jsonb']['output'];
  location?: Maybe<Scalars['String']['output']>;
  locked: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  name_personal?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  state: Scalars['String']['output'];
  title?: Maybe<Scalars['String']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
  users_count: Scalars['Int']['output'];
};

/** columns and relationships of "authors" */
export type AuthorsAliasArgs = {
  distinct_on?: InputMaybe<Array<Authors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authors_Order_By>>;
  where?: InputMaybe<Authors_Bool_Exp>;
};

/** columns and relationships of "authors" */
export type AuthorsAlternate_NamesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "authors" */
export type AuthorsCached_ImageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "authors" */
export type AuthorsContributionsArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

/** columns and relationships of "authors" */
export type AuthorsContributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

/** columns and relationships of "authors" */
export type AuthorsIdentifiersArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "authors" */
export type AuthorsLinksArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** order by aggregate values of table "authors" */
export type Authors_Aggregate_Order_By = {
  avg?: InputMaybe<Authors_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Authors_Max_Order_By>;
  min?: InputMaybe<Authors_Min_Order_By>;
  stddev?: InputMaybe<Authors_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Authors_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Authors_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Authors_Sum_Order_By>;
  var_pop?: InputMaybe<Authors_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Authors_Var_Samp_Order_By>;
  variance?: InputMaybe<Authors_Variance_Order_By>;
};

/** order by avg() on columns of table "authors" */
export type Authors_Avg_Order_By = {
  alias_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "authors". All fields are combined with a logical 'AND'. */
export type Authors_Bool_Exp = {
  _and?: InputMaybe<Array<Authors_Bool_Exp>>;
  _not?: InputMaybe<Authors_Bool_Exp>;
  _or?: InputMaybe<Array<Authors_Bool_Exp>>;
  alias?: InputMaybe<Authors_Bool_Exp>;
  alias_id?: InputMaybe<Int_Comparison_Exp>;
  alternate_names?: InputMaybe<Jsonb_Comparison_Exp>;
  bio?: InputMaybe<String_Comparison_Exp>;
  books_count?: InputMaybe<Int_Comparison_Exp>;
  born_date?: InputMaybe<Date_Comparison_Exp>;
  born_year?: InputMaybe<Int_Comparison_Exp>;
  cached_image?: InputMaybe<Jsonb_Comparison_Exp>;
  canonical?: InputMaybe<Authors_Bool_Exp>;
  canonical_id?: InputMaybe<Int_Comparison_Exp>;
  contributions?: InputMaybe<Contributions_Bool_Exp>;
  contributions_aggregate?: InputMaybe<Contributions_Aggregate_Bool_Exp>;
  creator?: InputMaybe<Users_Bool_Exp>;
  death_date?: InputMaybe<Date_Comparison_Exp>;
  death_year?: InputMaybe<Int_Comparison_Exp>;
  gender_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  identifiers?: InputMaybe<Jsonb_Comparison_Exp>;
  image?: InputMaybe<Images_Bool_Exp>;
  image_id?: InputMaybe<Int_Comparison_Exp>;
  is_bipoc?: InputMaybe<Boolean_Comparison_Exp>;
  is_lgbtq?: InputMaybe<Boolean_Comparison_Exp>;
  links?: InputMaybe<Jsonb_Comparison_Exp>;
  location?: InputMaybe<String_Comparison_Exp>;
  locked?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  name_personal?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
  users_count?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "authors" */
export type Authors_Max_Order_By = {
  alias_id?: InputMaybe<Order_By>;
  bio?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_date?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  death_date?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  location?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  name_personal?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "authors" */
export type Authors_Min_Order_By = {
  alias_id?: InputMaybe<Order_By>;
  bio?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_date?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  death_date?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  location?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  name_personal?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "authors". */
export type Authors_Order_By = {
  alias_aggregate?: InputMaybe<Authors_Aggregate_Order_By>;
  alias_id?: InputMaybe<Order_By>;
  alternate_names?: InputMaybe<Order_By>;
  bio?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_date?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  cached_image?: InputMaybe<Order_By>;
  canonical?: InputMaybe<Authors_Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  contributions_aggregate?: InputMaybe<Contributions_Aggregate_Order_By>;
  creator?: InputMaybe<Users_Order_By>;
  death_date?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  identifiers?: InputMaybe<Order_By>;
  image?: InputMaybe<Images_Order_By>;
  image_id?: InputMaybe<Order_By>;
  is_bipoc?: InputMaybe<Order_By>;
  is_lgbtq?: InputMaybe<Order_By>;
  links?: InputMaybe<Order_By>;
  location?: InputMaybe<Order_By>;
  locked?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  name_personal?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** select columns of table "authors" */
export enum Authors_Select_Column {
  /** column name */
  AliasId = 'alias_id',
  /** column name */
  AlternateNames = 'alternate_names',
  /** column name */
  Bio = 'bio',
  /** column name */
  BooksCount = 'books_count',
  /** column name */
  BornDate = 'born_date',
  /** column name */
  BornYear = 'born_year',
  /** column name */
  CachedImage = 'cached_image',
  /** column name */
  CanonicalId = 'canonical_id',
  /** column name */
  DeathDate = 'death_date',
  /** column name */
  DeathYear = 'death_year',
  /** column name */
  GenderId = 'gender_id',
  /** column name */
  Id = 'id',
  /** column name */
  Identifiers = 'identifiers',
  /** column name */
  ImageId = 'image_id',
  /** column name */
  IsBipoc = 'is_bipoc',
  /** column name */
  IsLgbtq = 'is_lgbtq',
  /** column name */
  Links = 'links',
  /** column name */
  Location = 'location',
  /** column name */
  Locked = 'locked',
  /** column name */
  Name = 'name',
  /** column name */
  NamePersonal = 'name_personal',
  /** column name */
  Slug = 'slug',
  /** column name */
  State = 'state',
  /** column name */
  Title = 'title',
  /** column name */
  UserId = 'user_id',
  /** column name */
  UsersCount = 'users_count',
}

/** order by stddev() on columns of table "authors" */
export type Authors_Stddev_Order_By = {
  alias_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "authors" */
export type Authors_Stddev_Pop_Order_By = {
  alias_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "authors" */
export type Authors_Stddev_Samp_Order_By = {
  alias_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "authors" */
export type Authors_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Authors_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Authors_Stream_Cursor_Value_Input = {
  alias_id?: InputMaybe<Scalars['Int']['input']>;
  alternate_names?: InputMaybe<Scalars['jsonb']['input']>;
  bio?: InputMaybe<Scalars['String']['input']>;
  books_count?: InputMaybe<Scalars['Int']['input']>;
  born_date?: InputMaybe<Scalars['date']['input']>;
  born_year?: InputMaybe<Scalars['Int']['input']>;
  cached_image?: InputMaybe<Scalars['jsonb']['input']>;
  canonical_id?: InputMaybe<Scalars['Int']['input']>;
  death_date?: InputMaybe<Scalars['date']['input']>;
  death_year?: InputMaybe<Scalars['Int']['input']>;
  gender_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  identifiers?: InputMaybe<Scalars['jsonb']['input']>;
  image_id?: InputMaybe<Scalars['Int']['input']>;
  is_bipoc?: InputMaybe<Scalars['Boolean']['input']>;
  is_lgbtq?: InputMaybe<Scalars['Boolean']['input']>;
  links?: InputMaybe<Scalars['jsonb']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_personal?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
  users_count?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "authors" */
export type Authors_Sum_Order_By = {
  alias_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "authors" */
export type Authors_Var_Pop_Order_By = {
  alias_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "authors" */
export type Authors_Var_Samp_Order_By = {
  alias_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "authors" */
export type Authors_Variance_Order_By = {
  alias_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  born_year?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  death_year?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bigint']['input']>;
  _gt?: InputMaybe<Scalars['bigint']['input']>;
  _gte?: InputMaybe<Scalars['bigint']['input']>;
  _in?: InputMaybe<Array<Scalars['bigint']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['bigint']['input']>;
  _lte?: InputMaybe<Scalars['bigint']['input']>;
  _neq?: InputMaybe<Scalars['bigint']['input']>;
  _nin?: InputMaybe<Array<Scalars['bigint']['input']>>;
};

/** columns and relationships of "book_categories" */
export type Book_Categories = {
  __typename?: 'book_categories';
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
};

/** Boolean expression to filter rows from the table "book_categories". All fields are combined with a logical 'AND'. */
export type Book_Categories_Bool_Exp = {
  _and?: InputMaybe<Array<Book_Categories_Bool_Exp>>;
  _not?: InputMaybe<Book_Categories_Bool_Exp>;
  _or?: InputMaybe<Array<Book_Categories_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** Ordering options when selecting data from "book_categories". */
export type Book_Categories_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "book_categories" */
export enum Book_Categories_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** Streaming cursor of the table "book_categories" */
export type Book_Categories_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Book_Categories_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Book_Categories_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "book_characters" */
export type Book_Characters = {
  __typename?: 'book_characters';
  /** An object relationship */
  book?: Maybe<Books>;
  book_id: Scalars['bigint']['output'];
  /** An object relationship */
  character?: Maybe<Characters>;
  character_id: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  only_mentioned: Scalars['Boolean']['output'];
  position: Scalars['Int']['output'];
  spoiler: Scalars['Boolean']['output'];
};

/** order by aggregate values of table "book_characters" */
export type Book_Characters_Aggregate_Order_By = {
  avg?: InputMaybe<Book_Characters_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Book_Characters_Max_Order_By>;
  min?: InputMaybe<Book_Characters_Min_Order_By>;
  stddev?: InputMaybe<Book_Characters_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Book_Characters_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Book_Characters_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Book_Characters_Sum_Order_By>;
  var_pop?: InputMaybe<Book_Characters_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Book_Characters_Var_Samp_Order_By>;
  variance?: InputMaybe<Book_Characters_Variance_Order_By>;
};

/** order by avg() on columns of table "book_characters" */
export type Book_Characters_Avg_Order_By = {
  book_id?: InputMaybe<Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "book_characters". All fields are combined with a logical 'AND'. */
export type Book_Characters_Bool_Exp = {
  _and?: InputMaybe<Array<Book_Characters_Bool_Exp>>;
  _not?: InputMaybe<Book_Characters_Bool_Exp>;
  _or?: InputMaybe<Array<Book_Characters_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Bigint_Comparison_Exp>;
  character?: InputMaybe<Characters_Bool_Exp>;
  character_id?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  only_mentioned?: InputMaybe<Boolean_Comparison_Exp>;
  position?: InputMaybe<Int_Comparison_Exp>;
  spoiler?: InputMaybe<Boolean_Comparison_Exp>;
};

/** order by max() on columns of table "book_characters" */
export type Book_Characters_Max_Order_By = {
  book_id?: InputMaybe<Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "book_characters" */
export type Book_Characters_Min_Order_By = {
  book_id?: InputMaybe<Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "book_characters". */
export type Book_Characters_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  character?: InputMaybe<Characters_Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  only_mentioned?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  spoiler?: InputMaybe<Order_By>;
};

/** select columns of table "book_characters" */
export enum Book_Characters_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CharacterId = 'character_id',
  /** column name */
  Id = 'id',
  /** column name */
  OnlyMentioned = 'only_mentioned',
  /** column name */
  Position = 'position',
  /** column name */
  Spoiler = 'spoiler',
}

/** order by stddev() on columns of table "book_characters" */
export type Book_Characters_Stddev_Order_By = {
  book_id?: InputMaybe<Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "book_characters" */
export type Book_Characters_Stddev_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "book_characters" */
export type Book_Characters_Stddev_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "book_characters" */
export type Book_Characters_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Book_Characters_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Book_Characters_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['bigint']['input']>;
  character_id?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  only_mentioned?: InputMaybe<Scalars['Boolean']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  spoiler?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by sum() on columns of table "book_characters" */
export type Book_Characters_Sum_Order_By = {
  book_id?: InputMaybe<Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "book_characters" */
export type Book_Characters_Var_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "book_characters" */
export type Book_Characters_Var_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "book_characters" */
export type Book_Characters_Variance_Order_By = {
  book_id?: InputMaybe<Order_By>;
  character_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** columns and relationships of "book_collections" */
export type Book_Collections = {
  __typename?: 'book_collections';
  book_id: Scalars['Int']['output'];
  child_book_id: Scalars['Int']['output'];
  id: Scalars['bigint']['output'];
  position: Scalars['Int']['output'];
};

/** Boolean expression to filter rows from the table "book_collections". All fields are combined with a logical 'AND'. */
export type Book_Collections_Bool_Exp = {
  _and?: InputMaybe<Array<Book_Collections_Bool_Exp>>;
  _not?: InputMaybe<Book_Collections_Bool_Exp>;
  _or?: InputMaybe<Array<Book_Collections_Bool_Exp>>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  child_book_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  position?: InputMaybe<Int_Comparison_Exp>;
};

/** Ordering options when selecting data from "book_collections". */
export type Book_Collections_Order_By = {
  book_id?: InputMaybe<Order_By>;
  child_book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** select columns of table "book_collections" */
export enum Book_Collections_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  ChildBookId = 'child_book_id',
  /** column name */
  Id = 'id',
  /** column name */
  Position = 'position',
}

/** Streaming cursor of the table "book_collections" */
export type Book_Collections_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Book_Collections_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Book_Collections_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  child_book_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
};

/** columns and relationships of "book_mappings" */
export type Book_Mappings = {
  __typename?: 'book_mappings';
  attempts?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  book: Books;
  book_id: Scalars['Int']['output'];
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  dto_external: Scalars['json']['output'];
  /** An object relationship */
  edition?: Maybe<Editions>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  external_data_id?: Maybe<Scalars['Int']['output']>;
  external_id: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  loaded?: Maybe<Scalars['Boolean']['output']>;
  loaded_at?: Maybe<Scalars['timestamp']['output']>;
  normalized_at?: Maybe<Scalars['timestamp']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  platform: Platforms;
  platform_id: Scalars['Int']['output'];
  state: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  verified?: Maybe<Scalars['Boolean']['output']>;
  verified_at?: Maybe<Scalars['timestamp']['output']>;
};

/** columns and relationships of "book_mappings" */
export type Book_MappingsDto_ExternalArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** order by aggregate values of table "book_mappings" */
export type Book_Mappings_Aggregate_Order_By = {
  avg?: InputMaybe<Book_Mappings_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Book_Mappings_Max_Order_By>;
  min?: InputMaybe<Book_Mappings_Min_Order_By>;
  stddev?: InputMaybe<Book_Mappings_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Book_Mappings_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Book_Mappings_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Book_Mappings_Sum_Order_By>;
  var_pop?: InputMaybe<Book_Mappings_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Book_Mappings_Var_Samp_Order_By>;
  variance?: InputMaybe<Book_Mappings_Variance_Order_By>;
};

/** order by avg() on columns of table "book_mappings" */
export type Book_Mappings_Avg_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "book_mappings". All fields are combined with a logical 'AND'. */
export type Book_Mappings_Bool_Exp = {
  _and?: InputMaybe<Array<Book_Mappings_Bool_Exp>>;
  _not?: InputMaybe<Book_Mappings_Bool_Exp>;
  _or?: InputMaybe<Array<Book_Mappings_Bool_Exp>>;
  attempts?: InputMaybe<Int_Comparison_Exp>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  dto_external?: InputMaybe<Json_Comparison_Exp>;
  edition?: InputMaybe<Editions_Bool_Exp>;
  edition_id?: InputMaybe<Int_Comparison_Exp>;
  external_data_id?: InputMaybe<Int_Comparison_Exp>;
  external_id?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  loaded?: InputMaybe<Boolean_Comparison_Exp>;
  loaded_at?: InputMaybe<Timestamp_Comparison_Exp>;
  normalized_at?: InputMaybe<Timestamp_Comparison_Exp>;
  original_book_id?: InputMaybe<Int_Comparison_Exp>;
  platform?: InputMaybe<Platforms_Bool_Exp>;
  platform_id?: InputMaybe<Int_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  verified?: InputMaybe<Boolean_Comparison_Exp>;
  verified_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** order by max() on columns of table "book_mappings" */
export type Book_Mappings_Max_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  loaded_at?: InputMaybe<Order_By>;
  normalized_at?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  verified_at?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "book_mappings" */
export type Book_Mappings_Min_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  loaded_at?: InputMaybe<Order_By>;
  normalized_at?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  verified_at?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "book_mappings". */
export type Book_Mappings_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  dto_external?: InputMaybe<Order_By>;
  edition?: InputMaybe<Editions_Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  loaded?: InputMaybe<Order_By>;
  loaded_at?: InputMaybe<Order_By>;
  normalized_at?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform?: InputMaybe<Platforms_Order_By>;
  platform_id?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  verified?: InputMaybe<Order_By>;
  verified_at?: InputMaybe<Order_By>;
};

/** select columns of table "book_mappings" */
export enum Book_Mappings_Select_Column {
  /** column name */
  Attempts = 'attempts',
  /** column name */
  BookId = 'book_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DtoExternal = 'dto_external',
  /** column name */
  EditionId = 'edition_id',
  /** column name */
  ExternalDataId = 'external_data_id',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  Loaded = 'loaded',
  /** column name */
  LoadedAt = 'loaded_at',
  /** column name */
  NormalizedAt = 'normalized_at',
  /** column name */
  OriginalBookId = 'original_book_id',
  /** column name */
  PlatformId = 'platform_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Verified = 'verified',
  /** column name */
  VerifiedAt = 'verified_at',
}

/** order by stddev() on columns of table "book_mappings" */
export type Book_Mappings_Stddev_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "book_mappings" */
export type Book_Mappings_Stddev_Pop_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "book_mappings" */
export type Book_Mappings_Stddev_Samp_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "book_mappings" */
export type Book_Mappings_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Book_Mappings_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Book_Mappings_Stream_Cursor_Value_Input = {
  attempts?: InputMaybe<Scalars['Int']['input']>;
  book_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  dto_external?: InputMaybe<Scalars['json']['input']>;
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  external_data_id?: InputMaybe<Scalars['Int']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  loaded?: InputMaybe<Scalars['Boolean']['input']>;
  loaded_at?: InputMaybe<Scalars['timestamp']['input']>;
  normalized_at?: InputMaybe<Scalars['timestamp']['input']>;
  original_book_id?: InputMaybe<Scalars['Int']['input']>;
  platform_id?: InputMaybe<Scalars['Int']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamptz']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
  verified_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** order by sum() on columns of table "book_mappings" */
export type Book_Mappings_Sum_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "book_mappings" */
export type Book_Mappings_Var_Pop_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "book_mappings" */
export type Book_Mappings_Var_Samp_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "book_mappings" */
export type Book_Mappings_Variance_Order_By = {
  attempts?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  external_data_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "book_series" */
export type Book_Series = {
  __typename?: 'book_series';
  /** An object relationship */
  book?: Maybe<Books>;
  book_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  details?: Maybe<Scalars['String']['output']>;
  featured: Scalars['Boolean']['output'];
  id: Scalars['bigint']['output'];
  position?: Maybe<Scalars['float8']['output']>;
  /** An object relationship */
  series?: Maybe<Series>;
  series_id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "book_series" */
export type Book_Series_Aggregate = {
  __typename?: 'book_series_aggregate';
  aggregate?: Maybe<Book_Series_Aggregate_Fields>;
  nodes: Array<Book_Series>;
};

export type Book_Series_Aggregate_Bool_Exp = {
  avg?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Avg>;
  bool_and?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Bool_Or>;
  corr?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Corr>;
  count?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Count>;
  covar_samp?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Covar_Samp>;
  max?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Max>;
  min?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Min>;
  stddev_samp?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Stddev_Samp>;
  sum?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Sum>;
  var_samp?: InputMaybe<Book_Series_Aggregate_Bool_Exp_Var_Samp>;
};

export type Book_Series_Aggregate_Bool_Exp_Avg = {
  arguments: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Avg_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Book_Series_Aggregate_Bool_Exp_Bool_And = {
  arguments: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Book_Series_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Book_Series_Aggregate_Bool_Exp_Corr = {
  arguments: Book_Series_Aggregate_Bool_Exp_Corr_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Book_Series_Aggregate_Bool_Exp_Corr_Arguments = {
  X: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Corr_Arguments_Columns;
  Y: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Corr_Arguments_Columns;
};

export type Book_Series_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Book_Series_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

export type Book_Series_Aggregate_Bool_Exp_Covar_Samp = {
  arguments: Book_Series_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Book_Series_Aggregate_Bool_Exp_Covar_Samp_Arguments = {
  X: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
  Y: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
};

export type Book_Series_Aggregate_Bool_Exp_Max = {
  arguments: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Max_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Book_Series_Aggregate_Bool_Exp_Min = {
  arguments: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Min_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Book_Series_Aggregate_Bool_Exp_Stddev_Samp = {
  arguments: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Book_Series_Aggregate_Bool_Exp_Sum = {
  arguments: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Sum_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Book_Series_Aggregate_Bool_Exp_Var_Samp = {
  arguments: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Book_Series_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

/** aggregate fields of "book_series" */
export type Book_Series_Aggregate_Fields = {
  __typename?: 'book_series_aggregate_fields';
  avg?: Maybe<Book_Series_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Book_Series_Max_Fields>;
  min?: Maybe<Book_Series_Min_Fields>;
  stddev?: Maybe<Book_Series_Stddev_Fields>;
  stddev_pop?: Maybe<Book_Series_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Book_Series_Stddev_Samp_Fields>;
  sum?: Maybe<Book_Series_Sum_Fields>;
  var_pop?: Maybe<Book_Series_Var_Pop_Fields>;
  var_samp?: Maybe<Book_Series_Var_Samp_Fields>;
  variance?: Maybe<Book_Series_Variance_Fields>;
};

/** aggregate fields of "book_series" */
export type Book_Series_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Book_Series_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "book_series" */
export type Book_Series_Aggregate_Order_By = {
  avg?: InputMaybe<Book_Series_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Book_Series_Max_Order_By>;
  min?: InputMaybe<Book_Series_Min_Order_By>;
  stddev?: InputMaybe<Book_Series_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Book_Series_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Book_Series_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Book_Series_Sum_Order_By>;
  var_pop?: InputMaybe<Book_Series_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Book_Series_Var_Samp_Order_By>;
  variance?: InputMaybe<Book_Series_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Book_Series_Avg_Fields = {
  __typename?: 'book_series_avg_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  series_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "book_series" */
export type Book_Series_Avg_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "book_series". All fields are combined with a logical 'AND'. */
export type Book_Series_Bool_Exp = {
  _and?: InputMaybe<Array<Book_Series_Bool_Exp>>;
  _not?: InputMaybe<Book_Series_Bool_Exp>;
  _or?: InputMaybe<Array<Book_Series_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  details?: InputMaybe<String_Comparison_Exp>;
  featured?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  position?: InputMaybe<Float8_Comparison_Exp>;
  series?: InputMaybe<Series_Bool_Exp>;
  series_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** aggregate max on columns */
export type Book_Series_Max_Fields = {
  __typename?: 'book_series_max_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  details?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['float8']['output']>;
  series_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "book_series" */
export type Book_Series_Max_Order_By = {
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  details?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Book_Series_Min_Fields = {
  __typename?: 'book_series_min_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  details?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['float8']['output']>;
  series_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "book_series" */
export type Book_Series_Min_Order_By = {
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  details?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "book_series". */
export type Book_Series_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  details?: InputMaybe<Order_By>;
  featured?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series?: InputMaybe<Series_Order_By>;
  series_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "book_series" */
export enum Book_Series_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Details = 'details',
  /** column name */
  Featured = 'featured',
  /** column name */
  Id = 'id',
  /** column name */
  Position = 'position',
  /** column name */
  SeriesId = 'series_id',
  /** column name */
  UpdatedAt = 'updated_at',
}

/** select "book_series_aggregate_bool_exp_avg_arguments_columns" columns of table "book_series" */
export enum Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Avg_Arguments_Columns {
  /** column name */
  Position = 'position',
}

/** select "book_series_aggregate_bool_exp_bool_and_arguments_columns" columns of table "book_series" */
export enum Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Featured = 'featured',
}

/** select "book_series_aggregate_bool_exp_bool_or_arguments_columns" columns of table "book_series" */
export enum Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Featured = 'featured',
}

/** select "book_series_aggregate_bool_exp_corr_arguments_columns" columns of table "book_series" */
export enum Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Corr_Arguments_Columns {
  /** column name */
  Position = 'position',
}

/** select "book_series_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "book_series" */
export enum Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns {
  /** column name */
  Position = 'position',
}

/** select "book_series_aggregate_bool_exp_max_arguments_columns" columns of table "book_series" */
export enum Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Max_Arguments_Columns {
  /** column name */
  Position = 'position',
}

/** select "book_series_aggregate_bool_exp_min_arguments_columns" columns of table "book_series" */
export enum Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Min_Arguments_Columns {
  /** column name */
  Position = 'position',
}

/** select "book_series_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "book_series" */
export enum Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns {
  /** column name */
  Position = 'position',
}

/** select "book_series_aggregate_bool_exp_sum_arguments_columns" columns of table "book_series" */
export enum Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Sum_Arguments_Columns {
  /** column name */
  Position = 'position',
}

/** select "book_series_aggregate_bool_exp_var_samp_arguments_columns" columns of table "book_series" */
export enum Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns {
  /** column name */
  Position = 'position',
}

/** aggregate stddev on columns */
export type Book_Series_Stddev_Fields = {
  __typename?: 'book_series_stddev_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  series_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "book_series" */
export type Book_Series_Stddev_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Book_Series_Stddev_Pop_Fields = {
  __typename?: 'book_series_stddev_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  series_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "book_series" */
export type Book_Series_Stddev_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Book_Series_Stddev_Samp_Fields = {
  __typename?: 'book_series_stddev_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  series_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "book_series" */
export type Book_Series_Stddev_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "book_series" */
export type Book_Series_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Book_Series_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Book_Series_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  details?: InputMaybe<Scalars['String']['input']>;
  featured?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  position?: InputMaybe<Scalars['float8']['input']>;
  series_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Book_Series_Sum_Fields = {
  __typename?: 'book_series_sum_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['float8']['output']>;
  series_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "book_series" */
export type Book_Series_Sum_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Book_Series_Var_Pop_Fields = {
  __typename?: 'book_series_var_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  series_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "book_series" */
export type Book_Series_Var_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Book_Series_Var_Samp_Fields = {
  __typename?: 'book_series_var_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  series_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "book_series" */
export type Book_Series_Var_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Book_Series_Variance_Fields = {
  __typename?: 'book_series_variance_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  series_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "book_series" */
export type Book_Series_Variance_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  series_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "book_statuses" */
export type Book_Statuses = {
  __typename?: 'book_statuses';
  /** An array relationship */
  books: Array<Books>;
  /** An aggregate relationship */
  books_aggregate: Books_Aggregate;
  id: Scalars['smallint']['output'];
  name: Scalars['String']['output'];
};

/** columns and relationships of "book_statuses" */
export type Book_StatusesBooksArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};

/** columns and relationships of "book_statuses" */
export type Book_StatusesBooks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "book_statuses". All fields are combined with a logical 'AND'. */
export type Book_Statuses_Bool_Exp = {
  _and?: InputMaybe<Array<Book_Statuses_Bool_Exp>>;
  _not?: InputMaybe<Book_Statuses_Bool_Exp>;
  _or?: InputMaybe<Array<Book_Statuses_Bool_Exp>>;
  books?: InputMaybe<Books_Bool_Exp>;
  books_aggregate?: InputMaybe<Books_Aggregate_Bool_Exp>;
  id?: InputMaybe<Smallint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** Ordering options when selecting data from "book_statuses". */
export type Book_Statuses_Order_By = {
  books_aggregate?: InputMaybe<Books_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "book_statuses" */
export enum Book_Statuses_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** Streaming cursor of the table "book_statuses" */
export type Book_Statuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Book_Statuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Book_Statuses_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['smallint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "bookles" */
export type Bookles = {
  __typename?: 'bookles';
  /** An object relationship */
  book?: Maybe<Books>;
  book_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date?: Maybe<Scalars['date']['output']>;
  id: Scalars['bigint']['output'];
};

/** Boolean expression to filter rows from the table "bookles". All fields are combined with a logical 'AND'. */
export type Bookles_Bool_Exp = {
  _and?: InputMaybe<Array<Bookles_Bool_Exp>>;
  _not?: InputMaybe<Bookles_Bool_Exp>;
  _or?: InputMaybe<Array<Bookles_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  date?: InputMaybe<Date_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
};

/** Ordering options when selecting data from "bookles". */
export type Bookles_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** select columns of table "bookles" */
export enum Bookles_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
}

/** Streaming cursor of the table "bookles" */
export type Bookles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Bookles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Bookles_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** columns and relationships of "books" */
export type Books = {
  __typename?: 'books';
  activities_count: Scalars['Int']['output'];
  alternative_titles: Scalars['json']['output'];
  audio_seconds?: Maybe<Scalars['Int']['output']>;
  book_category_id: Scalars['Int']['output'];
  /** An array relationship */
  book_characters: Array<Book_Characters>;
  /** An array relationship */
  book_mappings: Array<Book_Mappings>;
  /** An array relationship */
  book_series: Array<Book_Series>;
  /** An aggregate relationship */
  book_series_aggregate: Book_Series_Aggregate;
  /** An object relationship */
  book_status: Book_Statuses;
  book_status_id: Scalars['smallint']['output'];
  cached_contributors: Scalars['json']['output'];
  cached_featured_series?: Maybe<Scalars['jsonb']['output']>;
  cached_header_image: Scalars['jsonb']['output'];
  cached_image: Scalars['jsonb']['output'];
  cached_tags: Scalars['json']['output'];
  /** An object relationship */
  canonical?: Maybe<Books>;
  canonical_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  collection_import_results: Array<Collection_Import_Results>;
  compilation: Scalars['Boolean']['output'];
  /** An array relationship */
  contributions: Array<Contributions>;
  /** An aggregate relationship */
  contributions_aggregate: Contributions_Aggregate;
  created_at: Scalars['timestamp']['output'];
  created_by_user_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  default_audio_edition?: Maybe<Editions>;
  default_audio_edition_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  default_cover_edition?: Maybe<Editions>;
  default_cover_edition_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  default_ebook_edition?: Maybe<Editions>;
  default_ebook_edition_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  default_physical_edition?: Maybe<Editions>;
  default_physical_edition_id?: Maybe<Scalars['Int']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  dto?: Maybe<Scalars['json']['output']>;
  dto_combined?: Maybe<Scalars['json']['output']>;
  dto_external?: Maybe<Scalars['json']['output']>;
  /** An array relationship */
  editions: Array<Editions>;
  editions_count: Scalars['Int']['output'];
  /** An object relationship */
  featured_book_series?: Maybe<Book_Series>;
  featured_book_series_id?: Maybe<Scalars['Int']['output']>;
  header_image_id?: Maybe<Scalars['Int']['output']>;
  headline?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  image?: Maybe<Images>;
  image_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  images: Array<Images>;
  import_platform_id: Scalars['Int']['output'];
  journals_count: Scalars['Int']['output'];
  links: Scalars['jsonb']['output'];
  /** An array relationship */
  list_books: Array<List_Books>;
  /** An aggregate relationship */
  list_books_aggregate: List_Books_Aggregate;
  lists_count?: Maybe<Scalars['Int']['output']>;
  literary_type_id?: Maybe<Scalars['Int']['output']>;
  locked: Scalars['Boolean']['output'];
  pages?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  prompt_answers: Array<Prompt_Answers>;
  /** An aggregate relationship */
  prompt_answers_aggregate: Prompt_Answers_Aggregate;
  /** An array relationship */
  prompt_summaries: Array<Prompt_Books_Summary>;
  prompts_count: Scalars['Int']['output'];
  rating?: Maybe<Scalars['numeric']['output']>;
  ratings_count: Scalars['Int']['output'];
  ratings_distribution: Scalars['jsonb']['output'];
  /** An array relationship */
  recommendations: Array<Recommendations>;
  release_date?: Maybe<Scalars['date']['output']>;
  release_year?: Maybe<Scalars['Int']['output']>;
  reviews_count: Scalars['Int']['output'];
  slug?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  subtitle?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  taggable_counts: Array<Taggable_Counts>;
  /** An array relationship */
  taggings: Array<Taggings>;
  /** An aggregate relationship */
  taggings_aggregate: Taggings_Aggregate;
  title?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  user_added: Scalars['Boolean']['output'];
  /** An array relationship */
  user_books: Array<User_Books>;
  /** An aggregate relationship */
  user_books_aggregate: User_Books_Aggregate;
  users_count: Scalars['Int']['output'];
  users_read_count: Scalars['Int']['output'];
};

/** columns and relationships of "books" */
export type BooksAlternative_TitlesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksBook_CharactersArgs = {
  distinct_on?: InputMaybe<Array<Book_Characters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Characters_Order_By>>;
  where?: InputMaybe<Book_Characters_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksBook_MappingsArgs = {
  distinct_on?: InputMaybe<Array<Book_Mappings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Mappings_Order_By>>;
  where?: InputMaybe<Book_Mappings_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksBook_SeriesArgs = {
  distinct_on?: InputMaybe<Array<Book_Series_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Series_Order_By>>;
  where?: InputMaybe<Book_Series_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksBook_Series_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Book_Series_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Series_Order_By>>;
  where?: InputMaybe<Book_Series_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksCached_ContributorsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksCached_Featured_SeriesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksCached_Header_ImageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksCached_ImageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksCached_TagsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksCollection_Import_ResultsArgs = {
  distinct_on?: InputMaybe<Array<Collection_Import_Results_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Collection_Import_Results_Order_By>>;
  where?: InputMaybe<Collection_Import_Results_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksContributionsArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksContributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksDtoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksDto_CombinedArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksDto_ExternalArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksEditionsArgs = {
  distinct_on?: InputMaybe<Array<Editions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Editions_Order_By>>;
  where?: InputMaybe<Editions_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksImagesArgs = {
  distinct_on?: InputMaybe<Array<Images_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Images_Order_By>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksLinksArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksList_BooksArgs = {
  distinct_on?: InputMaybe<Array<List_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<List_Books_Order_By>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksList_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<List_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<List_Books_Order_By>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksPrompt_AnswersArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Answers_Order_By>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksPrompt_Answers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Answers_Order_By>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksPrompt_SummariesArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Books_Summary_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Books_Summary_Order_By>>;
  where?: InputMaybe<Prompt_Books_Summary_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksRatings_DistributionArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "books" */
export type BooksRecommendationsArgs = {
  distinct_on?: InputMaybe<Array<Recommendations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Recommendations_Order_By>>;
  where?: InputMaybe<Recommendations_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksTaggable_CountsArgs = {
  distinct_on?: InputMaybe<Array<Taggable_Counts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggable_Counts_Order_By>>;
  where?: InputMaybe<Taggable_Counts_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksTaggingsArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksTaggings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksUser_BooksArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** columns and relationships of "books" */
export type BooksUser_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** aggregated selection of "books" */
export type Books_Aggregate = {
  __typename?: 'books_aggregate';
  aggregate?: Maybe<Books_Aggregate_Fields>;
  nodes: Array<Books>;
};

export type Books_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Books_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Books_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Books_Aggregate_Bool_Exp_Count>;
};

export type Books_Aggregate_Bool_Exp_Bool_And = {
  arguments: Books_Select_Column_Books_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Books_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Books_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Books_Select_Column_Books_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Books_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Books_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Books_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Books_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "books" */
export type Books_Aggregate_Fields = {
  __typename?: 'books_aggregate_fields';
  avg?: Maybe<Books_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Books_Max_Fields>;
  min?: Maybe<Books_Min_Fields>;
  stddev?: Maybe<Books_Stddev_Fields>;
  stddev_pop?: Maybe<Books_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Books_Stddev_Samp_Fields>;
  sum?: Maybe<Books_Sum_Fields>;
  var_pop?: Maybe<Books_Var_Pop_Fields>;
  var_samp?: Maybe<Books_Var_Samp_Fields>;
  variance?: Maybe<Books_Variance_Fields>;
};

/** aggregate fields of "books" */
export type Books_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Books_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "books" */
export type Books_Aggregate_Order_By = {
  avg?: InputMaybe<Books_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Books_Max_Order_By>;
  min?: InputMaybe<Books_Min_Order_By>;
  stddev?: InputMaybe<Books_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Books_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Books_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Books_Sum_Order_By>;
  var_pop?: InputMaybe<Books_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Books_Var_Samp_Order_By>;
  variance?: InputMaybe<Books_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Books_Avg_Fields = {
  __typename?: 'books_avg_fields';
  activities_count?: Maybe<Scalars['Float']['output']>;
  audio_seconds?: Maybe<Scalars['Float']['output']>;
  book_category_id?: Maybe<Scalars['Float']['output']>;
  book_status_id?: Maybe<Scalars['Float']['output']>;
  canonical_id?: Maybe<Scalars['Float']['output']>;
  created_by_user_id?: Maybe<Scalars['Float']['output']>;
  default_audio_edition_id?: Maybe<Scalars['Float']['output']>;
  default_cover_edition_id?: Maybe<Scalars['Float']['output']>;
  default_ebook_edition_id?: Maybe<Scalars['Float']['output']>;
  default_physical_edition_id?: Maybe<Scalars['Float']['output']>;
  editions_count?: Maybe<Scalars['Float']['output']>;
  featured_book_series_id?: Maybe<Scalars['Float']['output']>;
  header_image_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  image_id?: Maybe<Scalars['Float']['output']>;
  import_platform_id?: Maybe<Scalars['Float']['output']>;
  journals_count?: Maybe<Scalars['Float']['output']>;
  lists_count?: Maybe<Scalars['Float']['output']>;
  literary_type_id?: Maybe<Scalars['Float']['output']>;
  pages?: Maybe<Scalars['Float']['output']>;
  prompts_count?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  ratings_count?: Maybe<Scalars['Float']['output']>;
  release_year?: Maybe<Scalars['Float']['output']>;
  reviews_count?: Maybe<Scalars['Float']['output']>;
  users_count?: Maybe<Scalars['Float']['output']>;
  users_read_count?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "books" */
export type Books_Avg_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "books". All fields are combined with a logical 'AND'. */
export type Books_Bool_Exp = {
  _and?: InputMaybe<Array<Books_Bool_Exp>>;
  _not?: InputMaybe<Books_Bool_Exp>;
  _or?: InputMaybe<Array<Books_Bool_Exp>>;
  activities_count?: InputMaybe<Int_Comparison_Exp>;
  alternative_titles?: InputMaybe<Json_Comparison_Exp>;
  audio_seconds?: InputMaybe<Int_Comparison_Exp>;
  book_category_id?: InputMaybe<Int_Comparison_Exp>;
  book_characters?: InputMaybe<Book_Characters_Bool_Exp>;
  book_mappings?: InputMaybe<Book_Mappings_Bool_Exp>;
  book_series?: InputMaybe<Book_Series_Bool_Exp>;
  book_series_aggregate?: InputMaybe<Book_Series_Aggregate_Bool_Exp>;
  book_status?: InputMaybe<Book_Statuses_Bool_Exp>;
  book_status_id?: InputMaybe<Smallint_Comparison_Exp>;
  cached_contributors?: InputMaybe<Json_Comparison_Exp>;
  cached_featured_series?: InputMaybe<Jsonb_Comparison_Exp>;
  cached_header_image?: InputMaybe<Jsonb_Comparison_Exp>;
  cached_image?: InputMaybe<Jsonb_Comparison_Exp>;
  cached_tags?: InputMaybe<Json_Comparison_Exp>;
  canonical?: InputMaybe<Books_Bool_Exp>;
  canonical_id?: InputMaybe<Int_Comparison_Exp>;
  collection_import_results?: InputMaybe<Collection_Import_Results_Bool_Exp>;
  compilation?: InputMaybe<Boolean_Comparison_Exp>;
  contributions?: InputMaybe<Contributions_Bool_Exp>;
  contributions_aggregate?: InputMaybe<Contributions_Aggregate_Bool_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  created_by_user_id?: InputMaybe<Int_Comparison_Exp>;
  default_audio_edition?: InputMaybe<Editions_Bool_Exp>;
  default_audio_edition_id?: InputMaybe<Int_Comparison_Exp>;
  default_cover_edition?: InputMaybe<Editions_Bool_Exp>;
  default_cover_edition_id?: InputMaybe<Int_Comparison_Exp>;
  default_ebook_edition?: InputMaybe<Editions_Bool_Exp>;
  default_ebook_edition_id?: InputMaybe<Int_Comparison_Exp>;
  default_physical_edition?: InputMaybe<Editions_Bool_Exp>;
  default_physical_edition_id?: InputMaybe<Int_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  dto?: InputMaybe<Json_Comparison_Exp>;
  dto_combined?: InputMaybe<Json_Comparison_Exp>;
  dto_external?: InputMaybe<Json_Comparison_Exp>;
  editions?: InputMaybe<Editions_Bool_Exp>;
  editions_count?: InputMaybe<Int_Comparison_Exp>;
  featured_book_series?: InputMaybe<Book_Series_Bool_Exp>;
  featured_book_series_id?: InputMaybe<Int_Comparison_Exp>;
  header_image_id?: InputMaybe<Int_Comparison_Exp>;
  headline?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  image?: InputMaybe<Images_Bool_Exp>;
  image_id?: InputMaybe<Int_Comparison_Exp>;
  images?: InputMaybe<Images_Bool_Exp>;
  import_platform_id?: InputMaybe<Int_Comparison_Exp>;
  journals_count?: InputMaybe<Int_Comparison_Exp>;
  links?: InputMaybe<Jsonb_Comparison_Exp>;
  list_books?: InputMaybe<List_Books_Bool_Exp>;
  list_books_aggregate?: InputMaybe<List_Books_Aggregate_Bool_Exp>;
  lists_count?: InputMaybe<Int_Comparison_Exp>;
  literary_type_id?: InputMaybe<Int_Comparison_Exp>;
  locked?: InputMaybe<Boolean_Comparison_Exp>;
  pages?: InputMaybe<Int_Comparison_Exp>;
  prompt_answers?: InputMaybe<Prompt_Answers_Bool_Exp>;
  prompt_answers_aggregate?: InputMaybe<Prompt_Answers_Aggregate_Bool_Exp>;
  prompt_summaries?: InputMaybe<Prompt_Books_Summary_Bool_Exp>;
  prompts_count?: InputMaybe<Int_Comparison_Exp>;
  rating?: InputMaybe<Numeric_Comparison_Exp>;
  ratings_count?: InputMaybe<Int_Comparison_Exp>;
  ratings_distribution?: InputMaybe<Jsonb_Comparison_Exp>;
  recommendations?: InputMaybe<Recommendations_Bool_Exp>;
  release_date?: InputMaybe<Date_Comparison_Exp>;
  release_year?: InputMaybe<Int_Comparison_Exp>;
  reviews_count?: InputMaybe<Int_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  subtitle?: InputMaybe<String_Comparison_Exp>;
  taggable_counts?: InputMaybe<Taggable_Counts_Bool_Exp>;
  taggings?: InputMaybe<Taggings_Bool_Exp>;
  taggings_aggregate?: InputMaybe<Taggings_Aggregate_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_added?: InputMaybe<Boolean_Comparison_Exp>;
  user_books?: InputMaybe<User_Books_Bool_Exp>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Bool_Exp>;
  users_count?: InputMaybe<Int_Comparison_Exp>;
  users_read_count?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Books_Max_Fields = {
  __typename?: 'books_max_fields';
  activities_count?: Maybe<Scalars['Int']['output']>;
  audio_seconds?: Maybe<Scalars['Int']['output']>;
  book_category_id?: Maybe<Scalars['Int']['output']>;
  book_status_id?: Maybe<Scalars['smallint']['output']>;
  canonical_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by_user_id?: Maybe<Scalars['Int']['output']>;
  default_audio_edition_id?: Maybe<Scalars['Int']['output']>;
  default_cover_edition_id?: Maybe<Scalars['Int']['output']>;
  default_ebook_edition_id?: Maybe<Scalars['Int']['output']>;
  default_physical_edition_id?: Maybe<Scalars['Int']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  editions_count?: Maybe<Scalars['Int']['output']>;
  featured_book_series_id?: Maybe<Scalars['Int']['output']>;
  header_image_id?: Maybe<Scalars['Int']['output']>;
  headline?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_id?: Maybe<Scalars['Int']['output']>;
  import_platform_id?: Maybe<Scalars['Int']['output']>;
  journals_count?: Maybe<Scalars['Int']['output']>;
  lists_count?: Maybe<Scalars['Int']['output']>;
  literary_type_id?: Maybe<Scalars['Int']['output']>;
  pages?: Maybe<Scalars['Int']['output']>;
  prompts_count?: Maybe<Scalars['Int']['output']>;
  rating?: Maybe<Scalars['numeric']['output']>;
  ratings_count?: Maybe<Scalars['Int']['output']>;
  release_date?: Maybe<Scalars['date']['output']>;
  release_year?: Maybe<Scalars['Int']['output']>;
  reviews_count?: Maybe<Scalars['Int']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  subtitle?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  users_count?: Maybe<Scalars['Int']['output']>;
  users_read_count?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "books" */
export type Books_Max_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  headline?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  release_date?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  subtitle?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Books_Min_Fields = {
  __typename?: 'books_min_fields';
  activities_count?: Maybe<Scalars['Int']['output']>;
  audio_seconds?: Maybe<Scalars['Int']['output']>;
  book_category_id?: Maybe<Scalars['Int']['output']>;
  book_status_id?: Maybe<Scalars['smallint']['output']>;
  canonical_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by_user_id?: Maybe<Scalars['Int']['output']>;
  default_audio_edition_id?: Maybe<Scalars['Int']['output']>;
  default_cover_edition_id?: Maybe<Scalars['Int']['output']>;
  default_ebook_edition_id?: Maybe<Scalars['Int']['output']>;
  default_physical_edition_id?: Maybe<Scalars['Int']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  editions_count?: Maybe<Scalars['Int']['output']>;
  featured_book_series_id?: Maybe<Scalars['Int']['output']>;
  header_image_id?: Maybe<Scalars['Int']['output']>;
  headline?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_id?: Maybe<Scalars['Int']['output']>;
  import_platform_id?: Maybe<Scalars['Int']['output']>;
  journals_count?: Maybe<Scalars['Int']['output']>;
  lists_count?: Maybe<Scalars['Int']['output']>;
  literary_type_id?: Maybe<Scalars['Int']['output']>;
  pages?: Maybe<Scalars['Int']['output']>;
  prompts_count?: Maybe<Scalars['Int']['output']>;
  rating?: Maybe<Scalars['numeric']['output']>;
  ratings_count?: Maybe<Scalars['Int']['output']>;
  release_date?: Maybe<Scalars['date']['output']>;
  release_year?: Maybe<Scalars['Int']['output']>;
  reviews_count?: Maybe<Scalars['Int']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  subtitle?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  users_count?: Maybe<Scalars['Int']['output']>;
  users_read_count?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "books" */
export type Books_Min_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  headline?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  release_date?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  subtitle?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "books". */
export type Books_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  alternative_titles?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_characters_aggregate?: InputMaybe<Book_Characters_Aggregate_Order_By>;
  book_mappings_aggregate?: InputMaybe<Book_Mappings_Aggregate_Order_By>;
  book_series_aggregate?: InputMaybe<Book_Series_Aggregate_Order_By>;
  book_status?: InputMaybe<Book_Statuses_Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  cached_contributors?: InputMaybe<Order_By>;
  cached_featured_series?: InputMaybe<Order_By>;
  cached_header_image?: InputMaybe<Order_By>;
  cached_image?: InputMaybe<Order_By>;
  cached_tags?: InputMaybe<Order_By>;
  canonical?: InputMaybe<Books_Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  collection_import_results_aggregate?: InputMaybe<Collection_Import_Results_Aggregate_Order_By>;
  compilation?: InputMaybe<Order_By>;
  contributions_aggregate?: InputMaybe<Contributions_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition?: InputMaybe<Editions_Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition?: InputMaybe<Editions_Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition?: InputMaybe<Editions_Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition?: InputMaybe<Editions_Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  dto?: InputMaybe<Order_By>;
  dto_combined?: InputMaybe<Order_By>;
  dto_external?: InputMaybe<Order_By>;
  editions_aggregate?: InputMaybe<Editions_Aggregate_Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series?: InputMaybe<Book_Series_Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  headline?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image?: InputMaybe<Images_Order_By>;
  image_id?: InputMaybe<Order_By>;
  images_aggregate?: InputMaybe<Images_Aggregate_Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  links?: InputMaybe<Order_By>;
  list_books_aggregate?: InputMaybe<List_Books_Aggregate_Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  locked?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompt_answers_aggregate?: InputMaybe<Prompt_Answers_Aggregate_Order_By>;
  prompt_summaries_aggregate?: InputMaybe<Prompt_Books_Summary_Aggregate_Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  ratings_distribution?: InputMaybe<Order_By>;
  recommendations_aggregate?: InputMaybe<Recommendations_Aggregate_Order_By>;
  release_date?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  subtitle?: InputMaybe<Order_By>;
  taggable_counts_aggregate?: InputMaybe<Taggable_Counts_Aggregate_Order_By>;
  taggings_aggregate?: InputMaybe<Taggings_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_added?: InputMaybe<Order_By>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** select columns of table "books" */
export enum Books_Select_Column {
  /** column name */
  ActivitiesCount = 'activities_count',
  /** column name */
  AlternativeTitles = 'alternative_titles',
  /** column name */
  AudioSeconds = 'audio_seconds',
  /** column name */
  BookCategoryId = 'book_category_id',
  /** column name */
  BookStatusId = 'book_status_id',
  /** column name */
  CachedContributors = 'cached_contributors',
  /** column name */
  CachedFeaturedSeries = 'cached_featured_series',
  /** column name */
  CachedHeaderImage = 'cached_header_image',
  /** column name */
  CachedImage = 'cached_image',
  /** column name */
  CachedTags = 'cached_tags',
  /** column name */
  CanonicalId = 'canonical_id',
  /** column name */
  Compilation = 'compilation',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedByUserId = 'created_by_user_id',
  /** column name */
  DefaultAudioEditionId = 'default_audio_edition_id',
  /** column name */
  DefaultCoverEditionId = 'default_cover_edition_id',
  /** column name */
  DefaultEbookEditionId = 'default_ebook_edition_id',
  /** column name */
  DefaultPhysicalEditionId = 'default_physical_edition_id',
  /** column name */
  Description = 'description',
  /** column name */
  Dto = 'dto',
  /** column name */
  DtoCombined = 'dto_combined',
  /** column name */
  DtoExternal = 'dto_external',
  /** column name */
  EditionsCount = 'editions_count',
  /** column name */
  FeaturedBookSeriesId = 'featured_book_series_id',
  /** column name */
  HeaderImageId = 'header_image_id',
  /** column name */
  Headline = 'headline',
  /** column name */
  Id = 'id',
  /** column name */
  ImageId = 'image_id',
  /** column name */
  ImportPlatformId = 'import_platform_id',
  /** column name */
  JournalsCount = 'journals_count',
  /** column name */
  Links = 'links',
  /** column name */
  ListsCount = 'lists_count',
  /** column name */
  LiteraryTypeId = 'literary_type_id',
  /** column name */
  Locked = 'locked',
  /** column name */
  Pages = 'pages',
  /** column name */
  PromptsCount = 'prompts_count',
  /** column name */
  Rating = 'rating',
  /** column name */
  RatingsCount = 'ratings_count',
  /** column name */
  RatingsDistribution = 'ratings_distribution',
  /** column name */
  ReleaseDate = 'release_date',
  /** column name */
  ReleaseYear = 'release_year',
  /** column name */
  ReviewsCount = 'reviews_count',
  /** column name */
  Slug = 'slug',
  /** column name */
  State = 'state',
  /** column name */
  Subtitle = 'subtitle',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserAdded = 'user_added',
  /** column name */
  UsersCount = 'users_count',
  /** column name */
  UsersReadCount = 'users_read_count',
}

/** select "books_aggregate_bool_exp_bool_and_arguments_columns" columns of table "books" */
export enum Books_Select_Column_Books_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Compilation = 'compilation',
  /** column name */
  Locked = 'locked',
  /** column name */
  UserAdded = 'user_added',
}

/** select "books_aggregate_bool_exp_bool_or_arguments_columns" columns of table "books" */
export enum Books_Select_Column_Books_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Compilation = 'compilation',
  /** column name */
  Locked = 'locked',
  /** column name */
  UserAdded = 'user_added',
}

/** aggregate stddev on columns */
export type Books_Stddev_Fields = {
  __typename?: 'books_stddev_fields';
  activities_count?: Maybe<Scalars['Float']['output']>;
  audio_seconds?: Maybe<Scalars['Float']['output']>;
  book_category_id?: Maybe<Scalars['Float']['output']>;
  book_status_id?: Maybe<Scalars['Float']['output']>;
  canonical_id?: Maybe<Scalars['Float']['output']>;
  created_by_user_id?: Maybe<Scalars['Float']['output']>;
  default_audio_edition_id?: Maybe<Scalars['Float']['output']>;
  default_cover_edition_id?: Maybe<Scalars['Float']['output']>;
  default_ebook_edition_id?: Maybe<Scalars['Float']['output']>;
  default_physical_edition_id?: Maybe<Scalars['Float']['output']>;
  editions_count?: Maybe<Scalars['Float']['output']>;
  featured_book_series_id?: Maybe<Scalars['Float']['output']>;
  header_image_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  image_id?: Maybe<Scalars['Float']['output']>;
  import_platform_id?: Maybe<Scalars['Float']['output']>;
  journals_count?: Maybe<Scalars['Float']['output']>;
  lists_count?: Maybe<Scalars['Float']['output']>;
  literary_type_id?: Maybe<Scalars['Float']['output']>;
  pages?: Maybe<Scalars['Float']['output']>;
  prompts_count?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  ratings_count?: Maybe<Scalars['Float']['output']>;
  release_year?: Maybe<Scalars['Float']['output']>;
  reviews_count?: Maybe<Scalars['Float']['output']>;
  users_count?: Maybe<Scalars['Float']['output']>;
  users_read_count?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "books" */
export type Books_Stddev_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Books_Stddev_Pop_Fields = {
  __typename?: 'books_stddev_pop_fields';
  activities_count?: Maybe<Scalars['Float']['output']>;
  audio_seconds?: Maybe<Scalars['Float']['output']>;
  book_category_id?: Maybe<Scalars['Float']['output']>;
  book_status_id?: Maybe<Scalars['Float']['output']>;
  canonical_id?: Maybe<Scalars['Float']['output']>;
  created_by_user_id?: Maybe<Scalars['Float']['output']>;
  default_audio_edition_id?: Maybe<Scalars['Float']['output']>;
  default_cover_edition_id?: Maybe<Scalars['Float']['output']>;
  default_ebook_edition_id?: Maybe<Scalars['Float']['output']>;
  default_physical_edition_id?: Maybe<Scalars['Float']['output']>;
  editions_count?: Maybe<Scalars['Float']['output']>;
  featured_book_series_id?: Maybe<Scalars['Float']['output']>;
  header_image_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  image_id?: Maybe<Scalars['Float']['output']>;
  import_platform_id?: Maybe<Scalars['Float']['output']>;
  journals_count?: Maybe<Scalars['Float']['output']>;
  lists_count?: Maybe<Scalars['Float']['output']>;
  literary_type_id?: Maybe<Scalars['Float']['output']>;
  pages?: Maybe<Scalars['Float']['output']>;
  prompts_count?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  ratings_count?: Maybe<Scalars['Float']['output']>;
  release_year?: Maybe<Scalars['Float']['output']>;
  reviews_count?: Maybe<Scalars['Float']['output']>;
  users_count?: Maybe<Scalars['Float']['output']>;
  users_read_count?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "books" */
export type Books_Stddev_Pop_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Books_Stddev_Samp_Fields = {
  __typename?: 'books_stddev_samp_fields';
  activities_count?: Maybe<Scalars['Float']['output']>;
  audio_seconds?: Maybe<Scalars['Float']['output']>;
  book_category_id?: Maybe<Scalars['Float']['output']>;
  book_status_id?: Maybe<Scalars['Float']['output']>;
  canonical_id?: Maybe<Scalars['Float']['output']>;
  created_by_user_id?: Maybe<Scalars['Float']['output']>;
  default_audio_edition_id?: Maybe<Scalars['Float']['output']>;
  default_cover_edition_id?: Maybe<Scalars['Float']['output']>;
  default_ebook_edition_id?: Maybe<Scalars['Float']['output']>;
  default_physical_edition_id?: Maybe<Scalars['Float']['output']>;
  editions_count?: Maybe<Scalars['Float']['output']>;
  featured_book_series_id?: Maybe<Scalars['Float']['output']>;
  header_image_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  image_id?: Maybe<Scalars['Float']['output']>;
  import_platform_id?: Maybe<Scalars['Float']['output']>;
  journals_count?: Maybe<Scalars['Float']['output']>;
  lists_count?: Maybe<Scalars['Float']['output']>;
  literary_type_id?: Maybe<Scalars['Float']['output']>;
  pages?: Maybe<Scalars['Float']['output']>;
  prompts_count?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  ratings_count?: Maybe<Scalars['Float']['output']>;
  release_year?: Maybe<Scalars['Float']['output']>;
  reviews_count?: Maybe<Scalars['Float']['output']>;
  users_count?: Maybe<Scalars['Float']['output']>;
  users_read_count?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "books" */
export type Books_Stddev_Samp_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "books" */
export type Books_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Books_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Books_Stream_Cursor_Value_Input = {
  activities_count?: InputMaybe<Scalars['Int']['input']>;
  alternative_titles?: InputMaybe<Scalars['json']['input']>;
  audio_seconds?: InputMaybe<Scalars['Int']['input']>;
  book_category_id?: InputMaybe<Scalars['Int']['input']>;
  book_status_id?: InputMaybe<Scalars['smallint']['input']>;
  cached_contributors?: InputMaybe<Scalars['json']['input']>;
  cached_featured_series?: InputMaybe<Scalars['jsonb']['input']>;
  cached_header_image?: InputMaybe<Scalars['jsonb']['input']>;
  cached_image?: InputMaybe<Scalars['jsonb']['input']>;
  cached_tags?: InputMaybe<Scalars['json']['input']>;
  canonical_id?: InputMaybe<Scalars['Int']['input']>;
  compilation?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by_user_id?: InputMaybe<Scalars['Int']['input']>;
  default_audio_edition_id?: InputMaybe<Scalars['Int']['input']>;
  default_cover_edition_id?: InputMaybe<Scalars['Int']['input']>;
  default_ebook_edition_id?: InputMaybe<Scalars['Int']['input']>;
  default_physical_edition_id?: InputMaybe<Scalars['Int']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  dto?: InputMaybe<Scalars['json']['input']>;
  dto_combined?: InputMaybe<Scalars['json']['input']>;
  dto_external?: InputMaybe<Scalars['json']['input']>;
  editions_count?: InputMaybe<Scalars['Int']['input']>;
  featured_book_series_id?: InputMaybe<Scalars['Int']['input']>;
  header_image_id?: InputMaybe<Scalars['Int']['input']>;
  headline?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_id?: InputMaybe<Scalars['Int']['input']>;
  import_platform_id?: InputMaybe<Scalars['Int']['input']>;
  journals_count?: InputMaybe<Scalars['Int']['input']>;
  links?: InputMaybe<Scalars['jsonb']['input']>;
  lists_count?: InputMaybe<Scalars['Int']['input']>;
  literary_type_id?: InputMaybe<Scalars['Int']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  pages?: InputMaybe<Scalars['Int']['input']>;
  prompts_count?: InputMaybe<Scalars['Int']['input']>;
  rating?: InputMaybe<Scalars['numeric']['input']>;
  ratings_count?: InputMaybe<Scalars['Int']['input']>;
  ratings_distribution?: InputMaybe<Scalars['jsonb']['input']>;
  release_date?: InputMaybe<Scalars['date']['input']>;
  release_year?: InputMaybe<Scalars['Int']['input']>;
  reviews_count?: InputMaybe<Scalars['Int']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamptz']['input']>;
  user_added?: InputMaybe<Scalars['Boolean']['input']>;
  users_count?: InputMaybe<Scalars['Int']['input']>;
  users_read_count?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Books_Sum_Fields = {
  __typename?: 'books_sum_fields';
  activities_count?: Maybe<Scalars['Int']['output']>;
  audio_seconds?: Maybe<Scalars['Int']['output']>;
  book_category_id?: Maybe<Scalars['Int']['output']>;
  book_status_id?: Maybe<Scalars['smallint']['output']>;
  canonical_id?: Maybe<Scalars['Int']['output']>;
  created_by_user_id?: Maybe<Scalars['Int']['output']>;
  default_audio_edition_id?: Maybe<Scalars['Int']['output']>;
  default_cover_edition_id?: Maybe<Scalars['Int']['output']>;
  default_ebook_edition_id?: Maybe<Scalars['Int']['output']>;
  default_physical_edition_id?: Maybe<Scalars['Int']['output']>;
  editions_count?: Maybe<Scalars['Int']['output']>;
  featured_book_series_id?: Maybe<Scalars['Int']['output']>;
  header_image_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_id?: Maybe<Scalars['Int']['output']>;
  import_platform_id?: Maybe<Scalars['Int']['output']>;
  journals_count?: Maybe<Scalars['Int']['output']>;
  lists_count?: Maybe<Scalars['Int']['output']>;
  literary_type_id?: Maybe<Scalars['Int']['output']>;
  pages?: Maybe<Scalars['Int']['output']>;
  prompts_count?: Maybe<Scalars['Int']['output']>;
  rating?: Maybe<Scalars['numeric']['output']>;
  ratings_count?: Maybe<Scalars['Int']['output']>;
  release_year?: Maybe<Scalars['Int']['output']>;
  reviews_count?: Maybe<Scalars['Int']['output']>;
  users_count?: Maybe<Scalars['Int']['output']>;
  users_read_count?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "books" */
export type Books_Sum_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Books_Var_Pop_Fields = {
  __typename?: 'books_var_pop_fields';
  activities_count?: Maybe<Scalars['Float']['output']>;
  audio_seconds?: Maybe<Scalars['Float']['output']>;
  book_category_id?: Maybe<Scalars['Float']['output']>;
  book_status_id?: Maybe<Scalars['Float']['output']>;
  canonical_id?: Maybe<Scalars['Float']['output']>;
  created_by_user_id?: Maybe<Scalars['Float']['output']>;
  default_audio_edition_id?: Maybe<Scalars['Float']['output']>;
  default_cover_edition_id?: Maybe<Scalars['Float']['output']>;
  default_ebook_edition_id?: Maybe<Scalars['Float']['output']>;
  default_physical_edition_id?: Maybe<Scalars['Float']['output']>;
  editions_count?: Maybe<Scalars['Float']['output']>;
  featured_book_series_id?: Maybe<Scalars['Float']['output']>;
  header_image_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  image_id?: Maybe<Scalars['Float']['output']>;
  import_platform_id?: Maybe<Scalars['Float']['output']>;
  journals_count?: Maybe<Scalars['Float']['output']>;
  lists_count?: Maybe<Scalars['Float']['output']>;
  literary_type_id?: Maybe<Scalars['Float']['output']>;
  pages?: Maybe<Scalars['Float']['output']>;
  prompts_count?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  ratings_count?: Maybe<Scalars['Float']['output']>;
  release_year?: Maybe<Scalars['Float']['output']>;
  reviews_count?: Maybe<Scalars['Float']['output']>;
  users_count?: Maybe<Scalars['Float']['output']>;
  users_read_count?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "books" */
export type Books_Var_Pop_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Books_Var_Samp_Fields = {
  __typename?: 'books_var_samp_fields';
  activities_count?: Maybe<Scalars['Float']['output']>;
  audio_seconds?: Maybe<Scalars['Float']['output']>;
  book_category_id?: Maybe<Scalars['Float']['output']>;
  book_status_id?: Maybe<Scalars['Float']['output']>;
  canonical_id?: Maybe<Scalars['Float']['output']>;
  created_by_user_id?: Maybe<Scalars['Float']['output']>;
  default_audio_edition_id?: Maybe<Scalars['Float']['output']>;
  default_cover_edition_id?: Maybe<Scalars['Float']['output']>;
  default_ebook_edition_id?: Maybe<Scalars['Float']['output']>;
  default_physical_edition_id?: Maybe<Scalars['Float']['output']>;
  editions_count?: Maybe<Scalars['Float']['output']>;
  featured_book_series_id?: Maybe<Scalars['Float']['output']>;
  header_image_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  image_id?: Maybe<Scalars['Float']['output']>;
  import_platform_id?: Maybe<Scalars['Float']['output']>;
  journals_count?: Maybe<Scalars['Float']['output']>;
  lists_count?: Maybe<Scalars['Float']['output']>;
  literary_type_id?: Maybe<Scalars['Float']['output']>;
  pages?: Maybe<Scalars['Float']['output']>;
  prompts_count?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  ratings_count?: Maybe<Scalars['Float']['output']>;
  release_year?: Maybe<Scalars['Float']['output']>;
  reviews_count?: Maybe<Scalars['Float']['output']>;
  users_count?: Maybe<Scalars['Float']['output']>;
  users_read_count?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "books" */
export type Books_Var_Samp_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Books_Variance_Fields = {
  __typename?: 'books_variance_fields';
  activities_count?: Maybe<Scalars['Float']['output']>;
  audio_seconds?: Maybe<Scalars['Float']['output']>;
  book_category_id?: Maybe<Scalars['Float']['output']>;
  book_status_id?: Maybe<Scalars['Float']['output']>;
  canonical_id?: Maybe<Scalars['Float']['output']>;
  created_by_user_id?: Maybe<Scalars['Float']['output']>;
  default_audio_edition_id?: Maybe<Scalars['Float']['output']>;
  default_cover_edition_id?: Maybe<Scalars['Float']['output']>;
  default_ebook_edition_id?: Maybe<Scalars['Float']['output']>;
  default_physical_edition_id?: Maybe<Scalars['Float']['output']>;
  editions_count?: Maybe<Scalars['Float']['output']>;
  featured_book_series_id?: Maybe<Scalars['Float']['output']>;
  header_image_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  image_id?: Maybe<Scalars['Float']['output']>;
  import_platform_id?: Maybe<Scalars['Float']['output']>;
  journals_count?: Maybe<Scalars['Float']['output']>;
  lists_count?: Maybe<Scalars['Float']['output']>;
  literary_type_id?: Maybe<Scalars['Float']['output']>;
  pages?: Maybe<Scalars['Float']['output']>;
  prompts_count?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  ratings_count?: Maybe<Scalars['Float']['output']>;
  release_year?: Maybe<Scalars['Float']['output']>;
  reviews_count?: Maybe<Scalars['Float']['output']>;
  users_count?: Maybe<Scalars['Float']['output']>;
  users_read_count?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "books" */
export type Books_Variance_Order_By = {
  activities_count?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_category_id?: InputMaybe<Order_By>;
  book_status_id?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  default_audio_edition_id?: InputMaybe<Order_By>;
  default_cover_edition_id?: InputMaybe<Order_By>;
  default_ebook_edition_id?: InputMaybe<Order_By>;
  default_physical_edition_id?: InputMaybe<Order_By>;
  editions_count?: InputMaybe<Order_By>;
  featured_book_series_id?: InputMaybe<Order_By>;
  header_image_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  import_platform_id?: InputMaybe<Order_By>;
  journals_count?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  literary_type_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  prompts_count?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  ratings_count?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  reviews_count?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** columns and relationships of "characters" */
export type Characters = {
  __typename?: 'characters';
  biography?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  book_characters: Array<Book_Characters>;
  books_count: Scalars['Int']['output'];
  cached_tags: Scalars['json']['output'];
  /** An object relationship */
  canonical?: Maybe<Characters>;
  canonical_books_count: Scalars['Int']['output'];
  canonical_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  contributions: Array<Contributions>;
  /** An aggregate relationship */
  contributions_aggregate: Contributions_Aggregate;
  created_at: Scalars['timestamp']['output'];
  gender_id?: Maybe<Scalars['bigint']['output']>;
  has_disability?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['bigint']['output'];
  image_id?: Maybe<Scalars['Int']['output']>;
  is_lgbtq?: Maybe<Scalars['Boolean']['output']>;
  is_poc?: Maybe<Scalars['Boolean']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  name: Scalars['String']['output'];
  object_type: Scalars['String']['output'];
  openlibrary_url?: Maybe<Scalars['String']['output']>;
  slug: Scalars['String']['output'];
  state: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "characters" */
export type CharactersBook_CharactersArgs = {
  distinct_on?: InputMaybe<Array<Book_Characters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Characters_Order_By>>;
  where?: InputMaybe<Book_Characters_Bool_Exp>;
};

/** columns and relationships of "characters" */
export type CharactersCached_TagsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "characters" */
export type CharactersContributionsArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

/** columns and relationships of "characters" */
export type CharactersContributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "characters". All fields are combined with a logical 'AND'. */
export type Characters_Bool_Exp = {
  _and?: InputMaybe<Array<Characters_Bool_Exp>>;
  _not?: InputMaybe<Characters_Bool_Exp>;
  _or?: InputMaybe<Array<Characters_Bool_Exp>>;
  biography?: InputMaybe<String_Comparison_Exp>;
  book_characters?: InputMaybe<Book_Characters_Bool_Exp>;
  books_count?: InputMaybe<Int_Comparison_Exp>;
  cached_tags?: InputMaybe<Json_Comparison_Exp>;
  canonical?: InputMaybe<Characters_Bool_Exp>;
  canonical_books_count?: InputMaybe<Int_Comparison_Exp>;
  canonical_id?: InputMaybe<Int_Comparison_Exp>;
  contributions?: InputMaybe<Contributions_Bool_Exp>;
  contributions_aggregate?: InputMaybe<Contributions_Aggregate_Bool_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  gender_id?: InputMaybe<Bigint_Comparison_Exp>;
  has_disability?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  image_id?: InputMaybe<Int_Comparison_Exp>;
  is_lgbtq?: InputMaybe<Boolean_Comparison_Exp>;
  is_poc?: InputMaybe<Boolean_Comparison_Exp>;
  locked?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  object_type?: InputMaybe<String_Comparison_Exp>;
  openlibrary_url?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** Ordering options when selecting data from "characters". */
export type Characters_Order_By = {
  biography?: InputMaybe<Order_By>;
  book_characters_aggregate?: InputMaybe<Book_Characters_Aggregate_Order_By>;
  books_count?: InputMaybe<Order_By>;
  cached_tags?: InputMaybe<Order_By>;
  canonical?: InputMaybe<Characters_Order_By>;
  canonical_books_count?: InputMaybe<Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  contributions_aggregate?: InputMaybe<Contributions_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  has_disability?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  is_lgbtq?: InputMaybe<Order_By>;
  is_poc?: InputMaybe<Order_By>;
  locked?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  openlibrary_url?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "characters" */
export enum Characters_Select_Column {
  /** column name */
  Biography = 'biography',
  /** column name */
  BooksCount = 'books_count',
  /** column name */
  CachedTags = 'cached_tags',
  /** column name */
  CanonicalBooksCount = 'canonical_books_count',
  /** column name */
  CanonicalId = 'canonical_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GenderId = 'gender_id',
  /** column name */
  HasDisability = 'has_disability',
  /** column name */
  Id = 'id',
  /** column name */
  ImageId = 'image_id',
  /** column name */
  IsLgbtq = 'is_lgbtq',
  /** column name */
  IsPoc = 'is_poc',
  /** column name */
  Locked = 'locked',
  /** column name */
  Name = 'name',
  /** column name */
  ObjectType = 'object_type',
  /** column name */
  OpenlibraryUrl = 'openlibrary_url',
  /** column name */
  Slug = 'slug',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
}

/** Streaming cursor of the table "characters" */
export type Characters_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Characters_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Characters_Stream_Cursor_Value_Input = {
  biography?: InputMaybe<Scalars['String']['input']>;
  books_count?: InputMaybe<Scalars['Int']['input']>;
  cached_tags?: InputMaybe<Scalars['json']['input']>;
  canonical_books_count?: InputMaybe<Scalars['Int']['input']>;
  canonical_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  gender_id?: InputMaybe<Scalars['bigint']['input']>;
  has_disability?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  image_id?: InputMaybe<Scalars['Int']['input']>;
  is_lgbtq?: InputMaybe<Scalars['Boolean']['input']>;
  is_poc?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  object_type?: InputMaybe<Scalars['String']['input']>;
  openlibrary_url?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** Boolean expression to compare columns of type "citext". All fields are combined with logical 'AND'. */
export type Citext_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['citext']['input']>;
  _gt?: InputMaybe<Scalars['citext']['input']>;
  _gte?: InputMaybe<Scalars['citext']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['citext']['input']>;
  _in?: InputMaybe<Array<Scalars['citext']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['citext']['input']>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['citext']['input']>;
  _lt?: InputMaybe<Scalars['citext']['input']>;
  _lte?: InputMaybe<Scalars['citext']['input']>;
  _neq?: InputMaybe<Scalars['citext']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['citext']['input']>;
  _nin?: InputMaybe<Array<Scalars['citext']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['citext']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['citext']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['citext']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['citext']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['citext']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['citext']['input']>;
};

/** columns and relationships of "collection_import_results" */
export type Collection_Import_Results = {
  __typename?: 'collection_import_results';
  author?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  book?: Maybe<Books>;
  book_found_method?: Maybe<Scalars['String']['output']>;
  book_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  collection_import: Collection_Imports;
  collection_import_id: Scalars['Int']['output'];
  contents: Scalars['jsonb']['output'];
  external_id: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  report?: Maybe<Scalars['Int']['output']>;
  state: Scalars['String']['output'];
  title: Scalars['String']['output'];
};

/** columns and relationships of "collection_import_results" */
export type Collection_Import_ResultsContentsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** order by aggregate values of table "collection_import_results" */
export type Collection_Import_Results_Aggregate_Order_By = {
  avg?: InputMaybe<Collection_Import_Results_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Collection_Import_Results_Max_Order_By>;
  min?: InputMaybe<Collection_Import_Results_Min_Order_By>;
  stddev?: InputMaybe<Collection_Import_Results_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Collection_Import_Results_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Collection_Import_Results_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Collection_Import_Results_Sum_Order_By>;
  var_pop?: InputMaybe<Collection_Import_Results_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Collection_Import_Results_Var_Samp_Order_By>;
  variance?: InputMaybe<Collection_Import_Results_Variance_Order_By>;
};

/** order by avg() on columns of table "collection_import_results" */
export type Collection_Import_Results_Avg_Order_By = {
  book_id?: InputMaybe<Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "collection_import_results". All fields are combined with a logical 'AND'. */
export type Collection_Import_Results_Bool_Exp = {
  _and?: InputMaybe<Array<Collection_Import_Results_Bool_Exp>>;
  _not?: InputMaybe<Collection_Import_Results_Bool_Exp>;
  _or?: InputMaybe<Array<Collection_Import_Results_Bool_Exp>>;
  author?: InputMaybe<String_Comparison_Exp>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_found_method?: InputMaybe<String_Comparison_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  collection_import?: InputMaybe<Collection_Imports_Bool_Exp>;
  collection_import_id?: InputMaybe<Int_Comparison_Exp>;
  contents?: InputMaybe<Jsonb_Comparison_Exp>;
  external_id?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  report?: InputMaybe<Int_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** input type for incrementing numeric columns in table "collection_import_results" */
export type Collection_Import_Results_Inc_Input = {
  report?: InputMaybe<Scalars['Int']['input']>;
};

/** order by max() on columns of table "collection_import_results" */
export type Collection_Import_Results_Max_Order_By = {
  author?: InputMaybe<Order_By>;
  book_found_method?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "collection_import_results" */
export type Collection_Import_Results_Min_Order_By = {
  author?: InputMaybe<Order_By>;
  book_found_method?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "collection_import_results" */
export type Collection_Import_Results_Mutation_Response = {
  __typename?: 'collection_import_results_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Collection_Import_Results>;
};

/** Ordering options when selecting data from "collection_import_results". */
export type Collection_Import_Results_Order_By = {
  author?: InputMaybe<Order_By>;
  book?: InputMaybe<Books_Order_By>;
  book_found_method?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  collection_import?: InputMaybe<Collection_Imports_Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  contents?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** primary key columns input for table: collection_import_results */
export type Collection_Import_Results_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "collection_import_results" */
export enum Collection_Import_Results_Select_Column {
  /** column name */
  Author = 'author',
  /** column name */
  BookFoundMethod = 'book_found_method',
  /** column name */
  BookId = 'book_id',
  /** column name */
  CollectionImportId = 'collection_import_id',
  /** column name */
  Contents = 'contents',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  Report = 'report',
  /** column name */
  State = 'state',
  /** column name */
  Title = 'title',
}

/** input type for updating data in table "collection_import_results" */
export type Collection_Import_Results_Set_Input = {
  report?: InputMaybe<Scalars['Int']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
};

/** order by stddev() on columns of table "collection_import_results" */
export type Collection_Import_Results_Stddev_Order_By = {
  book_id?: InputMaybe<Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "collection_import_results" */
export type Collection_Import_Results_Stddev_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "collection_import_results" */
export type Collection_Import_Results_Stddev_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "collection_import_results" */
export type Collection_Import_Results_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Collection_Import_Results_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Collection_Import_Results_Stream_Cursor_Value_Input = {
  author?: InputMaybe<Scalars['String']['input']>;
  book_found_method?: InputMaybe<Scalars['String']['input']>;
  book_id?: InputMaybe<Scalars['Int']['input']>;
  collection_import_id?: InputMaybe<Scalars['Int']['input']>;
  contents?: InputMaybe<Scalars['jsonb']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  report?: InputMaybe<Scalars['Int']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** order by sum() on columns of table "collection_import_results" */
export type Collection_Import_Results_Sum_Order_By = {
  book_id?: InputMaybe<Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
};

export type Collection_Import_Results_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Collection_Import_Results_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Collection_Import_Results_Set_Input>;
  /** filter the rows which have to be updated */
  where: Collection_Import_Results_Bool_Exp;
};

/** order by var_pop() on columns of table "collection_import_results" */
export type Collection_Import_Results_Var_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "collection_import_results" */
export type Collection_Import_Results_Var_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "collection_import_results" */
export type Collection_Import_Results_Variance_Order_By = {
  book_id?: InputMaybe<Order_By>;
  collection_import_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Order_By>;
};

/** columns and relationships of "collection_imports" */
export type Collection_Imports = {
  __typename?: 'collection_imports';
  /** An array relationship */
  collection_import_results: Array<Collection_Import_Results>;
  completed_at?: Maybe<Scalars['timestamptz']['output']>;
  contents_key?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  current_book?: Maybe<Scalars['String']['output']>;
  error_message?: Maybe<Scalars['String']['output']>;
  failure_count: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  override_date_read?: Maybe<Scalars['Boolean']['output']>;
  override_ratings: Scalars['Boolean']['output'];
  override_shelves: Scalars['Boolean']['output'];
  platform_id?: Maybe<Scalars['Int']['output']>;
  processed_count: Scalars['Int']['output'];
  reimport_count: Scalars['Int']['output'];
  started_at?: Maybe<Scalars['timestamptz']['output']>;
  state: Scalars['String']['output'];
  success_count: Scalars['Int']['output'];
  tag_resolution: Scalars['Int']['output'];
  total_count: Scalars['Int']['output'];
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
};

/** columns and relationships of "collection_imports" */
export type Collection_ImportsCollection_Import_ResultsArgs = {
  distinct_on?: InputMaybe<Array<Collection_Import_Results_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Collection_Import_Results_Order_By>>;
  where?: InputMaybe<Collection_Import_Results_Bool_Exp>;
};

/** order by aggregate values of table "collection_imports" */
export type Collection_Imports_Aggregate_Order_By = {
  avg?: InputMaybe<Collection_Imports_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Collection_Imports_Max_Order_By>;
  min?: InputMaybe<Collection_Imports_Min_Order_By>;
  stddev?: InputMaybe<Collection_Imports_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Collection_Imports_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Collection_Imports_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Collection_Imports_Sum_Order_By>;
  var_pop?: InputMaybe<Collection_Imports_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Collection_Imports_Var_Samp_Order_By>;
  variance?: InputMaybe<Collection_Imports_Variance_Order_By>;
};

/** order by avg() on columns of table "collection_imports" */
export type Collection_Imports_Avg_Order_By = {
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "collection_imports". All fields are combined with a logical 'AND'. */
export type Collection_Imports_Bool_Exp = {
  _and?: InputMaybe<Array<Collection_Imports_Bool_Exp>>;
  _not?: InputMaybe<Collection_Imports_Bool_Exp>;
  _or?: InputMaybe<Array<Collection_Imports_Bool_Exp>>;
  collection_import_results?: InputMaybe<Collection_Import_Results_Bool_Exp>;
  completed_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  contents_key?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  current_book?: InputMaybe<String_Comparison_Exp>;
  error_message?: InputMaybe<String_Comparison_Exp>;
  failure_count?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  override_date_read?: InputMaybe<Boolean_Comparison_Exp>;
  override_ratings?: InputMaybe<Boolean_Comparison_Exp>;
  override_shelves?: InputMaybe<Boolean_Comparison_Exp>;
  platform_id?: InputMaybe<Int_Comparison_Exp>;
  processed_count?: InputMaybe<Int_Comparison_Exp>;
  reimport_count?: InputMaybe<Int_Comparison_Exp>;
  started_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  success_count?: InputMaybe<Int_Comparison_Exp>;
  tag_resolution?: InputMaybe<Int_Comparison_Exp>;
  total_count?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "collection_imports" */
export type Collection_Imports_Max_Order_By = {
  completed_at?: InputMaybe<Order_By>;
  contents_key?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_book?: InputMaybe<Order_By>;
  error_message?: InputMaybe<Order_By>;
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  started_at?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "collection_imports" */
export type Collection_Imports_Min_Order_By = {
  completed_at?: InputMaybe<Order_By>;
  contents_key?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_book?: InputMaybe<Order_By>;
  error_message?: InputMaybe<Order_By>;
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  started_at?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "collection_imports". */
export type Collection_Imports_Order_By = {
  collection_import_results_aggregate?: InputMaybe<Collection_Import_Results_Aggregate_Order_By>;
  completed_at?: InputMaybe<Order_By>;
  contents_key?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_book?: InputMaybe<Order_By>;
  error_message?: InputMaybe<Order_By>;
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  override_date_read?: InputMaybe<Order_By>;
  override_ratings?: InputMaybe<Order_By>;
  override_shelves?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  started_at?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "collection_imports" */
export enum Collection_Imports_Select_Column {
  /** column name */
  CompletedAt = 'completed_at',
  /** column name */
  ContentsKey = 'contents_key',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentBook = 'current_book',
  /** column name */
  ErrorMessage = 'error_message',
  /** column name */
  FailureCount = 'failure_count',
  /** column name */
  Id = 'id',
  /** column name */
  OverrideDateRead = 'override_date_read',
  /** column name */
  OverrideRatings = 'override_ratings',
  /** column name */
  OverrideShelves = 'override_shelves',
  /** column name */
  PlatformId = 'platform_id',
  /** column name */
  ProcessedCount = 'processed_count',
  /** column name */
  ReimportCount = 'reimport_count',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  State = 'state',
  /** column name */
  SuccessCount = 'success_count',
  /** column name */
  TagResolution = 'tag_resolution',
  /** column name */
  TotalCount = 'total_count',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
}

/** order by stddev() on columns of table "collection_imports" */
export type Collection_Imports_Stddev_Order_By = {
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "collection_imports" */
export type Collection_Imports_Stddev_Pop_Order_By = {
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "collection_imports" */
export type Collection_Imports_Stddev_Samp_Order_By = {
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "collection_imports" */
export type Collection_Imports_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Collection_Imports_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Collection_Imports_Stream_Cursor_Value_Input = {
  completed_at?: InputMaybe<Scalars['timestamptz']['input']>;
  contents_key?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  current_book?: InputMaybe<Scalars['String']['input']>;
  error_message?: InputMaybe<Scalars['String']['input']>;
  failure_count?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  override_date_read?: InputMaybe<Scalars['Boolean']['input']>;
  override_ratings?: InputMaybe<Scalars['Boolean']['input']>;
  override_shelves?: InputMaybe<Scalars['Boolean']['input']>;
  platform_id?: InputMaybe<Scalars['Int']['input']>;
  processed_count?: InputMaybe<Scalars['Int']['input']>;
  reimport_count?: InputMaybe<Scalars['Int']['input']>;
  started_at?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  success_count?: InputMaybe<Scalars['Int']['input']>;
  tag_resolution?: InputMaybe<Scalars['Int']['input']>;
  total_count?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamptz']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "collection_imports" */
export type Collection_Imports_Sum_Order_By = {
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "collection_imports" */
export type Collection_Imports_Var_Pop_Order_By = {
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "collection_imports" */
export type Collection_Imports_Var_Samp_Order_By = {
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "collection_imports" */
export type Collection_Imports_Variance_Order_By = {
  failure_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  platform_id?: InputMaybe<Order_By>;
  processed_count?: InputMaybe<Order_By>;
  reimport_count?: InputMaybe<Order_By>;
  success_count?: InputMaybe<Order_By>;
  tag_resolution?: InputMaybe<Order_By>;
  total_count?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "contributions" */
export type Contributions = {
  __typename?: 'contributions';
  /** An object relationship */
  author?: Maybe<Authors>;
  author_id: Scalars['Int']['output'];
  /** An object relationship */
  book?: Maybe<Books>;
  contributable_id: Scalars['Int']['output'];
  contributable_type: Scalars['String']['output'];
  contribution?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['timestamp']['output'];
  id: Scalars['bigint']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "contributions" */
export type Contributions_Aggregate = {
  __typename?: 'contributions_aggregate';
  aggregate?: Maybe<Contributions_Aggregate_Fields>;
  nodes: Array<Contributions>;
};

export type Contributions_Aggregate_Bool_Exp = {
  count?: InputMaybe<Contributions_Aggregate_Bool_Exp_Count>;
};

export type Contributions_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Contributions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Contributions_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "contributions" */
export type Contributions_Aggregate_Fields = {
  __typename?: 'contributions_aggregate_fields';
  avg?: Maybe<Contributions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Contributions_Max_Fields>;
  min?: Maybe<Contributions_Min_Fields>;
  stddev?: Maybe<Contributions_Stddev_Fields>;
  stddev_pop?: Maybe<Contributions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Contributions_Stddev_Samp_Fields>;
  sum?: Maybe<Contributions_Sum_Fields>;
  var_pop?: Maybe<Contributions_Var_Pop_Fields>;
  var_samp?: Maybe<Contributions_Var_Samp_Fields>;
  variance?: Maybe<Contributions_Variance_Fields>;
};

/** aggregate fields of "contributions" */
export type Contributions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Contributions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "contributions" */
export type Contributions_Aggregate_Order_By = {
  avg?: InputMaybe<Contributions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Contributions_Max_Order_By>;
  min?: InputMaybe<Contributions_Min_Order_By>;
  stddev?: InputMaybe<Contributions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Contributions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Contributions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Contributions_Sum_Order_By>;
  var_pop?: InputMaybe<Contributions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Contributions_Var_Samp_Order_By>;
  variance?: InputMaybe<Contributions_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Contributions_Avg_Fields = {
  __typename?: 'contributions_avg_fields';
  author_id?: Maybe<Scalars['Float']['output']>;
  contributable_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "contributions" */
export type Contributions_Avg_Order_By = {
  author_id?: InputMaybe<Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "contributions". All fields are combined with a logical 'AND'. */
export type Contributions_Bool_Exp = {
  _and?: InputMaybe<Array<Contributions_Bool_Exp>>;
  _not?: InputMaybe<Contributions_Bool_Exp>;
  _or?: InputMaybe<Array<Contributions_Bool_Exp>>;
  author?: InputMaybe<Authors_Bool_Exp>;
  author_id?: InputMaybe<Int_Comparison_Exp>;
  book?: InputMaybe<Books_Bool_Exp>;
  contributable_id?: InputMaybe<Int_Comparison_Exp>;
  contributable_type?: InputMaybe<String_Comparison_Exp>;
  contribution?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** aggregate max on columns */
export type Contributions_Max_Fields = {
  __typename?: 'contributions_max_fields';
  author_id?: Maybe<Scalars['Int']['output']>;
  contributable_id?: Maybe<Scalars['Int']['output']>;
  contributable_type?: Maybe<Scalars['String']['output']>;
  contribution?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "contributions" */
export type Contributions_Max_Order_By = {
  author_id?: InputMaybe<Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  contributable_type?: InputMaybe<Order_By>;
  contribution?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Contributions_Min_Fields = {
  __typename?: 'contributions_min_fields';
  author_id?: Maybe<Scalars['Int']['output']>;
  contributable_id?: Maybe<Scalars['Int']['output']>;
  contributable_type?: Maybe<Scalars['String']['output']>;
  contribution?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "contributions" */
export type Contributions_Min_Order_By = {
  author_id?: InputMaybe<Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  contributable_type?: InputMaybe<Order_By>;
  contribution?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "contributions". */
export type Contributions_Order_By = {
  author?: InputMaybe<Authors_Order_By>;
  author_id?: InputMaybe<Order_By>;
  book?: InputMaybe<Books_Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  contributable_type?: InputMaybe<Order_By>;
  contribution?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "contributions" */
export enum Contributions_Select_Column {
  /** column name */
  AuthorId = 'author_id',
  /** column name */
  ContributableId = 'contributable_id',
  /** column name */
  ContributableType = 'contributable_type',
  /** column name */
  Contribution = 'contribution',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at',
}

/** aggregate stddev on columns */
export type Contributions_Stddev_Fields = {
  __typename?: 'contributions_stddev_fields';
  author_id?: Maybe<Scalars['Float']['output']>;
  contributable_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "contributions" */
export type Contributions_Stddev_Order_By = {
  author_id?: InputMaybe<Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Contributions_Stddev_Pop_Fields = {
  __typename?: 'contributions_stddev_pop_fields';
  author_id?: Maybe<Scalars['Float']['output']>;
  contributable_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "contributions" */
export type Contributions_Stddev_Pop_Order_By = {
  author_id?: InputMaybe<Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Contributions_Stddev_Samp_Fields = {
  __typename?: 'contributions_stddev_samp_fields';
  author_id?: Maybe<Scalars['Float']['output']>;
  contributable_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "contributions" */
export type Contributions_Stddev_Samp_Order_By = {
  author_id?: InputMaybe<Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "contributions" */
export type Contributions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Contributions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Contributions_Stream_Cursor_Value_Input = {
  author_id?: InputMaybe<Scalars['Int']['input']>;
  contributable_id?: InputMaybe<Scalars['Int']['input']>;
  contributable_type?: InputMaybe<Scalars['String']['input']>;
  contribution?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Contributions_Sum_Fields = {
  __typename?: 'contributions_sum_fields';
  author_id?: Maybe<Scalars['Int']['output']>;
  contributable_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "contributions" */
export type Contributions_Sum_Order_By = {
  author_id?: InputMaybe<Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Contributions_Var_Pop_Fields = {
  __typename?: 'contributions_var_pop_fields';
  author_id?: Maybe<Scalars['Float']['output']>;
  contributable_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "contributions" */
export type Contributions_Var_Pop_Order_By = {
  author_id?: InputMaybe<Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Contributions_Var_Samp_Fields = {
  __typename?: 'contributions_var_samp_fields';
  author_id?: Maybe<Scalars['Float']['output']>;
  contributable_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "contributions" */
export type Contributions_Var_Samp_Order_By = {
  author_id?: InputMaybe<Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Contributions_Variance_Fields = {
  __typename?: 'contributions_variance_fields';
  author_id?: Maybe<Scalars['Float']['output']>;
  contributable_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "contributions" */
export type Contributions_Variance_Order_By = {
  author_id?: InputMaybe<Order_By>;
  contributable_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "countries" */
export type Countries = {
  __typename?: 'countries';
  code2?: Maybe<Scalars['String']['output']>;
  code3?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['timestamp']['output'];
  /** An array relationship */
  editions: Array<Editions>;
  id: Scalars['bigint']['output'];
  intermediate_region?: Maybe<Scalars['String']['output']>;
  intermediate_region_code?: Maybe<Scalars['String']['output']>;
  iso_3166?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phone_code?: Maybe<Scalars['String']['output']>;
  region?: Maybe<Scalars['String']['output']>;
  region_code?: Maybe<Scalars['String']['output']>;
  sub_region?: Maybe<Scalars['String']['output']>;
  sub_region_code?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
};

/** columns and relationships of "countries" */
export type CountriesEditionsArgs = {
  distinct_on?: InputMaybe<Array<Editions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Editions_Order_By>>;
  where?: InputMaybe<Editions_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "countries". All fields are combined with a logical 'AND'. */
export type Countries_Bool_Exp = {
  _and?: InputMaybe<Array<Countries_Bool_Exp>>;
  _not?: InputMaybe<Countries_Bool_Exp>;
  _or?: InputMaybe<Array<Countries_Bool_Exp>>;
  code2?: InputMaybe<String_Comparison_Exp>;
  code3?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  editions?: InputMaybe<Editions_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  intermediate_region?: InputMaybe<String_Comparison_Exp>;
  intermediate_region_code?: InputMaybe<String_Comparison_Exp>;
  iso_3166?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  phone_code?: InputMaybe<String_Comparison_Exp>;
  region?: InputMaybe<String_Comparison_Exp>;
  region_code?: InputMaybe<String_Comparison_Exp>;
  sub_region?: InputMaybe<String_Comparison_Exp>;
  sub_region_code?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** Ordering options when selecting data from "countries". */
export type Countries_Order_By = {
  code2?: InputMaybe<Order_By>;
  code3?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  editions_aggregate?: InputMaybe<Editions_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  intermediate_region?: InputMaybe<Order_By>;
  intermediate_region_code?: InputMaybe<Order_By>;
  iso_3166?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  phone_code?: InputMaybe<Order_By>;
  region?: InputMaybe<Order_By>;
  region_code?: InputMaybe<Order_By>;
  sub_region?: InputMaybe<Order_By>;
  sub_region_code?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "countries" */
export enum Countries_Select_Column {
  /** column name */
  Code2 = 'code2',
  /** column name */
  Code3 = 'code3',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IntermediateRegion = 'intermediate_region',
  /** column name */
  IntermediateRegionCode = 'intermediate_region_code',
  /** column name */
  Iso_3166 = 'iso_3166',
  /** column name */
  Name = 'name',
  /** column name */
  PhoneCode = 'phone_code',
  /** column name */
  Region = 'region',
  /** column name */
  RegionCode = 'region_code',
  /** column name */
  SubRegion = 'sub_region',
  /** column name */
  SubRegionCode = 'sub_region_code',
  /** column name */
  UpdatedAt = 'updated_at',
}

/** Streaming cursor of the table "countries" */
export type Countries_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Countries_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Countries_Stream_Cursor_Value_Input = {
  code2?: InputMaybe<Scalars['String']['input']>;
  code3?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  intermediate_region?: InputMaybe<Scalars['String']['input']>;
  intermediate_region_code?: InputMaybe<Scalars['String']['input']>;
  iso_3166?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  phone_code?: InputMaybe<Scalars['String']['input']>;
  region?: InputMaybe<Scalars['String']['input']>;
  region_code?: InputMaybe<Scalars['String']['input']>;
  sub_region?: InputMaybe<Scalars['String']['input']>;
  sub_region_code?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** ordering argument of a cursor */
export enum Cursor_Ordering {
  /** ascending ordering of the cursor */
  Asc = 'ASC',
  /** descending ordering of the cursor */
  Desc = 'DESC',
}

/** Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'. */
export type Date_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['date']['input']>;
  _gt?: InputMaybe<Scalars['date']['input']>;
  _gte?: InputMaybe<Scalars['date']['input']>;
  _in?: InputMaybe<Array<Scalars['date']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['date']['input']>;
  _lte?: InputMaybe<Scalars['date']['input']>;
  _neq?: InputMaybe<Scalars['date']['input']>;
  _nin?: InputMaybe<Array<Scalars['date']['input']>>;
};

/** columns and relationships of "editions" */
export type Editions = {
  __typename?: 'editions';
  alternative_titles: Scalars['json']['output'];
  asin?: Maybe<Scalars['String']['output']>;
  audio_seconds?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  book: Books;
  book_id: Scalars['Int']['output'];
  /** An array relationship */
  book_mappings: Array<Book_Mappings>;
  cached_contributors: Scalars['json']['output'];
  cached_image: Scalars['jsonb']['output'];
  cached_tags: Scalars['json']['output'];
  compilation: Scalars['Boolean']['output'];
  /** An array relationship */
  contributions: Array<Contributions>;
  /** An aggregate relationship */
  contributions_aggregate: Contributions_Aggregate;
  /** An object relationship */
  country?: Maybe<Countries>;
  country_id?: Maybe<Scalars['Int']['output']>;
  created_at: Scalars['timestamp']['output'];
  created_by_user_id?: Maybe<Scalars['Int']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  dto: Scalars['json']['output'];
  dto_combined: Scalars['json']['output'];
  dto_external: Scalars['json']['output'];
  edition_format?: Maybe<Scalars['String']['output']>;
  edition_information?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  identifiers?: Maybe<Scalars['jsonb']['output']>;
  /** An object relationship */
  image?: Maybe<Images>;
  image_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  images: Array<Images>;
  isbn_10?: Maybe<Scalars['String']['output']>;
  isbn_13?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  language?: Maybe<Languages>;
  language_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  list_books: Array<List_Books>;
  /** An aggregate relationship */
  list_books_aggregate: List_Books_Aggregate;
  lists_count: Scalars['Int']['output'];
  locked: Scalars['Boolean']['output'];
  normalized_at?: Maybe<Scalars['timestamp']['output']>;
  object_type: Scalars['String']['output'];
  original_book_id?: Maybe<Scalars['Int']['output']>;
  pages?: Maybe<Scalars['Int']['output']>;
  physical_format?: Maybe<Scalars['String']['output']>;
  physical_information?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  publisher?: Maybe<Publishers>;
  publisher_id?: Maybe<Scalars['Int']['output']>;
  rating?: Maybe<Scalars['numeric']['output']>;
  /** An object relationship */
  reading_format?: Maybe<Reading_Formats>;
  reading_format_id: Scalars['Int']['output'];
  release_date?: Maybe<Scalars['date']['output']>;
  release_year?: Maybe<Scalars['Int']['output']>;
  score: Scalars['Int']['output'];
  source?: Maybe<Scalars['String']['output']>;
  state: Scalars['String']['output'];
  subtitle?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
  user_added: Scalars['Boolean']['output'];
  users_count: Scalars['Int']['output'];
  users_read_count: Scalars['Int']['output'];
};

/** columns and relationships of "editions" */
export type EditionsAlternative_TitlesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "editions" */
export type EditionsBook_MappingsArgs = {
  distinct_on?: InputMaybe<Array<Book_Mappings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Mappings_Order_By>>;
  where?: InputMaybe<Book_Mappings_Bool_Exp>;
};

/** columns and relationships of "editions" */
export type EditionsCached_ContributorsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "editions" */
export type EditionsCached_ImageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "editions" */
export type EditionsCached_TagsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "editions" */
export type EditionsContributionsArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

/** columns and relationships of "editions" */
export type EditionsContributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

/** columns and relationships of "editions" */
export type EditionsDtoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "editions" */
export type EditionsDto_CombinedArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "editions" */
export type EditionsDto_ExternalArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "editions" */
export type EditionsIdentifiersArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "editions" */
export type EditionsImagesArgs = {
  distinct_on?: InputMaybe<Array<Images_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Images_Order_By>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

/** columns and relationships of "editions" */
export type EditionsList_BooksArgs = {
  distinct_on?: InputMaybe<Array<List_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<List_Books_Order_By>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

/** columns and relationships of "editions" */
export type EditionsList_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<List_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<List_Books_Order_By>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

/** order by aggregate values of table "editions" */
export type Editions_Aggregate_Order_By = {
  avg?: InputMaybe<Editions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Editions_Max_Order_By>;
  min?: InputMaybe<Editions_Min_Order_By>;
  stddev?: InputMaybe<Editions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Editions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Editions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Editions_Sum_Order_By>;
  var_pop?: InputMaybe<Editions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Editions_Var_Samp_Order_By>;
  variance?: InputMaybe<Editions_Variance_Order_By>;
};

/** order by avg() on columns of table "editions" */
export type Editions_Avg_Order_By = {
  audio_seconds?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "editions". All fields are combined with a logical 'AND'. */
export type Editions_Bool_Exp = {
  _and?: InputMaybe<Array<Editions_Bool_Exp>>;
  _not?: InputMaybe<Editions_Bool_Exp>;
  _or?: InputMaybe<Array<Editions_Bool_Exp>>;
  alternative_titles?: InputMaybe<Json_Comparison_Exp>;
  asin?: InputMaybe<String_Comparison_Exp>;
  audio_seconds?: InputMaybe<Int_Comparison_Exp>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  book_mappings?: InputMaybe<Book_Mappings_Bool_Exp>;
  cached_contributors?: InputMaybe<Json_Comparison_Exp>;
  cached_image?: InputMaybe<Jsonb_Comparison_Exp>;
  cached_tags?: InputMaybe<Json_Comparison_Exp>;
  compilation?: InputMaybe<Boolean_Comparison_Exp>;
  contributions?: InputMaybe<Contributions_Bool_Exp>;
  contributions_aggregate?: InputMaybe<Contributions_Aggregate_Bool_Exp>;
  country?: InputMaybe<Countries_Bool_Exp>;
  country_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  created_by_user_id?: InputMaybe<Int_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  dto?: InputMaybe<Json_Comparison_Exp>;
  dto_combined?: InputMaybe<Json_Comparison_Exp>;
  dto_external?: InputMaybe<Json_Comparison_Exp>;
  edition_format?: InputMaybe<String_Comparison_Exp>;
  edition_information?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  identifiers?: InputMaybe<Jsonb_Comparison_Exp>;
  image?: InputMaybe<Images_Bool_Exp>;
  image_id?: InputMaybe<Int_Comparison_Exp>;
  images?: InputMaybe<Images_Bool_Exp>;
  isbn_10?: InputMaybe<String_Comparison_Exp>;
  isbn_13?: InputMaybe<String_Comparison_Exp>;
  language?: InputMaybe<Languages_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  list_books?: InputMaybe<List_Books_Bool_Exp>;
  list_books_aggregate?: InputMaybe<List_Books_Aggregate_Bool_Exp>;
  lists_count?: InputMaybe<Int_Comparison_Exp>;
  locked?: InputMaybe<Boolean_Comparison_Exp>;
  normalized_at?: InputMaybe<Timestamp_Comparison_Exp>;
  object_type?: InputMaybe<String_Comparison_Exp>;
  original_book_id?: InputMaybe<Int_Comparison_Exp>;
  pages?: InputMaybe<Int_Comparison_Exp>;
  physical_format?: InputMaybe<String_Comparison_Exp>;
  physical_information?: InputMaybe<String_Comparison_Exp>;
  publisher?: InputMaybe<Publishers_Bool_Exp>;
  publisher_id?: InputMaybe<Int_Comparison_Exp>;
  rating?: InputMaybe<Numeric_Comparison_Exp>;
  reading_format?: InputMaybe<Reading_Formats_Bool_Exp>;
  reading_format_id?: InputMaybe<Int_Comparison_Exp>;
  release_date?: InputMaybe<Date_Comparison_Exp>;
  release_year?: InputMaybe<Int_Comparison_Exp>;
  score?: InputMaybe<Int_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  subtitle?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  user_added?: InputMaybe<Boolean_Comparison_Exp>;
  users_count?: InputMaybe<Int_Comparison_Exp>;
  users_read_count?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "editions" */
export type Editions_Max_Order_By = {
  asin?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  edition_format?: InputMaybe<Order_By>;
  edition_information?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  isbn_10?: InputMaybe<Order_By>;
  isbn_13?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  normalized_at?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  physical_format?: InputMaybe<Order_By>;
  physical_information?: InputMaybe<Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_date?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  subtitle?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "editions" */
export type Editions_Min_Order_By = {
  asin?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  edition_format?: InputMaybe<Order_By>;
  edition_information?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  isbn_10?: InputMaybe<Order_By>;
  isbn_13?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  normalized_at?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  physical_format?: InputMaybe<Order_By>;
  physical_information?: InputMaybe<Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_date?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  subtitle?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "editions". */
export type Editions_Order_By = {
  alternative_titles?: InputMaybe<Order_By>;
  asin?: InputMaybe<Order_By>;
  audio_seconds?: InputMaybe<Order_By>;
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  book_mappings_aggregate?: InputMaybe<Book_Mappings_Aggregate_Order_By>;
  cached_contributors?: InputMaybe<Order_By>;
  cached_image?: InputMaybe<Order_By>;
  cached_tags?: InputMaybe<Order_By>;
  compilation?: InputMaybe<Order_By>;
  contributions_aggregate?: InputMaybe<Contributions_Aggregate_Order_By>;
  country?: InputMaybe<Countries_Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  dto?: InputMaybe<Order_By>;
  dto_combined?: InputMaybe<Order_By>;
  dto_external?: InputMaybe<Order_By>;
  edition_format?: InputMaybe<Order_By>;
  edition_information?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  identifiers?: InputMaybe<Order_By>;
  image?: InputMaybe<Images_Order_By>;
  image_id?: InputMaybe<Order_By>;
  images_aggregate?: InputMaybe<Images_Aggregate_Order_By>;
  isbn_10?: InputMaybe<Order_By>;
  isbn_13?: InputMaybe<Order_By>;
  language?: InputMaybe<Languages_Order_By>;
  language_id?: InputMaybe<Order_By>;
  list_books_aggregate?: InputMaybe<List_Books_Aggregate_Order_By>;
  lists_count?: InputMaybe<Order_By>;
  locked?: InputMaybe<Order_By>;
  normalized_at?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  physical_format?: InputMaybe<Order_By>;
  physical_information?: InputMaybe<Order_By>;
  publisher?: InputMaybe<Publishers_Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format?: InputMaybe<Reading_Formats_Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_date?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  subtitle?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_added?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** select columns of table "editions" */
export enum Editions_Select_Column {
  /** column name */
  AlternativeTitles = 'alternative_titles',
  /** column name */
  Asin = 'asin',
  /** column name */
  AudioSeconds = 'audio_seconds',
  /** column name */
  BookId = 'book_id',
  /** column name */
  CachedContributors = 'cached_contributors',
  /** column name */
  CachedImage = 'cached_image',
  /** column name */
  CachedTags = 'cached_tags',
  /** column name */
  Compilation = 'compilation',
  /** column name */
  CountryId = 'country_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedByUserId = 'created_by_user_id',
  /** column name */
  Description = 'description',
  /** column name */
  Dto = 'dto',
  /** column name */
  DtoCombined = 'dto_combined',
  /** column name */
  DtoExternal = 'dto_external',
  /** column name */
  EditionFormat = 'edition_format',
  /** column name */
  EditionInformation = 'edition_information',
  /** column name */
  Id = 'id',
  /** column name */
  Identifiers = 'identifiers',
  /** column name */
  ImageId = 'image_id',
  /** column name */
  Isbn_10 = 'isbn_10',
  /** column name */
  Isbn_13 = 'isbn_13',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  ListsCount = 'lists_count',
  /** column name */
  Locked = 'locked',
  /** column name */
  NormalizedAt = 'normalized_at',
  /** column name */
  ObjectType = 'object_type',
  /** column name */
  OriginalBookId = 'original_book_id',
  /** column name */
  Pages = 'pages',
  /** column name */
  PhysicalFormat = 'physical_format',
  /** column name */
  PhysicalInformation = 'physical_information',
  /** column name */
  PublisherId = 'publisher_id',
  /** column name */
  Rating = 'rating',
  /** column name */
  ReadingFormatId = 'reading_format_id',
  /** column name */
  ReleaseDate = 'release_date',
  /** column name */
  ReleaseYear = 'release_year',
  /** column name */
  Score = 'score',
  /** column name */
  Source = 'source',
  /** column name */
  State = 'state',
  /** column name */
  Subtitle = 'subtitle',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserAdded = 'user_added',
  /** column name */
  UsersCount = 'users_count',
  /** column name */
  UsersReadCount = 'users_read_count',
}

/** order by stddev() on columns of table "editions" */
export type Editions_Stddev_Order_By = {
  audio_seconds?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "editions" */
export type Editions_Stddev_Pop_Order_By = {
  audio_seconds?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "editions" */
export type Editions_Stddev_Samp_Order_By = {
  audio_seconds?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "editions" */
export type Editions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Editions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Editions_Stream_Cursor_Value_Input = {
  alternative_titles?: InputMaybe<Scalars['json']['input']>;
  asin?: InputMaybe<Scalars['String']['input']>;
  audio_seconds?: InputMaybe<Scalars['Int']['input']>;
  book_id?: InputMaybe<Scalars['Int']['input']>;
  cached_contributors?: InputMaybe<Scalars['json']['input']>;
  cached_image?: InputMaybe<Scalars['jsonb']['input']>;
  cached_tags?: InputMaybe<Scalars['json']['input']>;
  compilation?: InputMaybe<Scalars['Boolean']['input']>;
  country_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by_user_id?: InputMaybe<Scalars['Int']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  dto?: InputMaybe<Scalars['json']['input']>;
  dto_combined?: InputMaybe<Scalars['json']['input']>;
  dto_external?: InputMaybe<Scalars['json']['input']>;
  edition_format?: InputMaybe<Scalars['String']['input']>;
  edition_information?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  identifiers?: InputMaybe<Scalars['jsonb']['input']>;
  image_id?: InputMaybe<Scalars['Int']['input']>;
  isbn_10?: InputMaybe<Scalars['String']['input']>;
  isbn_13?: InputMaybe<Scalars['String']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  lists_count?: InputMaybe<Scalars['Int']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  normalized_at?: InputMaybe<Scalars['timestamp']['input']>;
  object_type?: InputMaybe<Scalars['String']['input']>;
  original_book_id?: InputMaybe<Scalars['Int']['input']>;
  pages?: InputMaybe<Scalars['Int']['input']>;
  physical_format?: InputMaybe<Scalars['String']['input']>;
  physical_information?: InputMaybe<Scalars['String']['input']>;
  publisher_id?: InputMaybe<Scalars['Int']['input']>;
  rating?: InputMaybe<Scalars['numeric']['input']>;
  reading_format_id?: InputMaybe<Scalars['Int']['input']>;
  release_date?: InputMaybe<Scalars['date']['input']>;
  release_year?: InputMaybe<Scalars['Int']['input']>;
  score?: InputMaybe<Scalars['Int']['input']>;
  source?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_added?: InputMaybe<Scalars['Boolean']['input']>;
  users_count?: InputMaybe<Scalars['Int']['input']>;
  users_read_count?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "editions" */
export type Editions_Sum_Order_By = {
  audio_seconds?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "editions" */
export type Editions_Var_Pop_Order_By = {
  audio_seconds?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "editions" */
export type Editions_Var_Samp_Order_By = {
  audio_seconds?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "editions" */
export type Editions_Variance_Order_By = {
  audio_seconds?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  country_id?: InputMaybe<Order_By>;
  created_by_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  lists_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  pages?: InputMaybe<Order_By>;
  publisher_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  release_year?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
  users_read_count?: InputMaybe<Order_By>;
};

/** columns and relationships of "flag_statuses" */
export type Flag_Statuses = {
  __typename?: 'flag_statuses';
  id: Scalars['Int']['output'];
  status: Scalars['String']['output'];
  /** An array relationship */
  user_flags: Array<User_Flags>;
};

/** columns and relationships of "flag_statuses" */
export type Flag_StatusesUser_FlagsArgs = {
  distinct_on?: InputMaybe<Array<User_Flags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Flags_Order_By>>;
  where?: InputMaybe<User_Flags_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "flag_statuses". All fields are combined with a logical 'AND'. */
export type Flag_Statuses_Bool_Exp = {
  _and?: InputMaybe<Array<Flag_Statuses_Bool_Exp>>;
  _not?: InputMaybe<Flag_Statuses_Bool_Exp>;
  _or?: InputMaybe<Array<Flag_Statuses_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  user_flags?: InputMaybe<User_Flags_Bool_Exp>;
};

/** Ordering options when selecting data from "flag_statuses". */
export type Flag_Statuses_Order_By = {
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user_flags_aggregate?: InputMaybe<User_Flags_Aggregate_Order_By>;
};

/** select columns of table "flag_statuses" */
export enum Flag_Statuses_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Status = 'status',
}

/** Streaming cursor of the table "flag_statuses" */
export type Flag_Statuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Flag_Statuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Flag_Statuses_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
export type Float8_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['float8']['input']>;
  _gt?: InputMaybe<Scalars['float8']['input']>;
  _gte?: InputMaybe<Scalars['float8']['input']>;
  _in?: InputMaybe<Array<Scalars['float8']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['float8']['input']>;
  _lte?: InputMaybe<Scalars['float8']['input']>;
  _neq?: InputMaybe<Scalars['float8']['input']>;
  _nin?: InputMaybe<Array<Scalars['float8']['input']>>;
};

/** columns and relationships of "followed_lists" */
export type Followed_Lists = {
  __typename?: 'followed_lists';
  created_at: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  list: Lists;
  list_id: Scalars['Int']['output'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
};

/** order by aggregate values of table "followed_lists" */
export type Followed_Lists_Aggregate_Order_By = {
  avg?: InputMaybe<Followed_Lists_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Followed_Lists_Max_Order_By>;
  min?: InputMaybe<Followed_Lists_Min_Order_By>;
  stddev?: InputMaybe<Followed_Lists_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Followed_Lists_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Followed_Lists_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Followed_Lists_Sum_Order_By>;
  var_pop?: InputMaybe<Followed_Lists_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Followed_Lists_Var_Samp_Order_By>;
  variance?: InputMaybe<Followed_Lists_Variance_Order_By>;
};

/** order by avg() on columns of table "followed_lists" */
export type Followed_Lists_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "followed_lists". All fields are combined with a logical 'AND'. */
export type Followed_Lists_Bool_Exp = {
  _and?: InputMaybe<Array<Followed_Lists_Bool_Exp>>;
  _not?: InputMaybe<Followed_Lists_Bool_Exp>;
  _or?: InputMaybe<Array<Followed_Lists_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  list?: InputMaybe<Lists_Bool_Exp>;
  list_id?: InputMaybe<Int_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "followed_lists" */
export type Followed_Lists_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "followed_lists" */
export type Followed_Lists_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "followed_lists". */
export type Followed_Lists_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list?: InputMaybe<Lists_Order_By>;
  list_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "followed_lists" */
export enum Followed_Lists_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ListId = 'list_id',
  /** column name */
  UserId = 'user_id',
}

/** order by stddev() on columns of table "followed_lists" */
export type Followed_Lists_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "followed_lists" */
export type Followed_Lists_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "followed_lists" */
export type Followed_Lists_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "followed_lists" */
export type Followed_Lists_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Followed_Lists_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Followed_Lists_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  list_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "followed_lists" */
export type Followed_Lists_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "followed_lists" */
export type Followed_Lists_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "followed_lists" */
export type Followed_Lists_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "followed_lists" */
export type Followed_Lists_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "followed_prompts" */
export type Followed_Prompts = {
  __typename?: 'followed_prompts';
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['Int']['output'];
  order: Scalars['Int']['output'];
  /** An object relationship */
  prompt: Prompts;
  prompt_id: Scalars['Int']['output'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
};

/** order by aggregate values of table "followed_prompts" */
export type Followed_Prompts_Aggregate_Order_By = {
  avg?: InputMaybe<Followed_Prompts_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Followed_Prompts_Max_Order_By>;
  min?: InputMaybe<Followed_Prompts_Min_Order_By>;
  stddev?: InputMaybe<Followed_Prompts_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Followed_Prompts_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Followed_Prompts_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Followed_Prompts_Sum_Order_By>;
  var_pop?: InputMaybe<Followed_Prompts_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Followed_Prompts_Var_Samp_Order_By>;
  variance?: InputMaybe<Followed_Prompts_Variance_Order_By>;
};

/** order by avg() on columns of table "followed_prompts" */
export type Followed_Prompts_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "followed_prompts". All fields are combined with a logical 'AND'. */
export type Followed_Prompts_Bool_Exp = {
  _and?: InputMaybe<Array<Followed_Prompts_Bool_Exp>>;
  _not?: InputMaybe<Followed_Prompts_Bool_Exp>;
  _or?: InputMaybe<Array<Followed_Prompts_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  prompt?: InputMaybe<Prompts_Bool_Exp>;
  prompt_id?: InputMaybe<Int_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "followed_prompts" */
export enum Followed_Prompts_Constraint {
  /** unique or primary key constraint on columns "id" */
  FollowedPromptsPkey = 'followed_prompts_pkey',
  /** unique or primary key constraint on columns "id" */
  QuestionFeaturesIdKey = 'question_features_id_key',
  /** unique or primary key constraint on columns "user_id", "prompt_id" */
  QuestionFeaturesUserIdQuestionIdKey = 'question_features_userId_questionId_key',
}

/** input type for incrementing numeric columns in table "followed_prompts" */
export type Followed_Prompts_Inc_Input = {
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "followed_prompts" */
export type Followed_Prompts_Insert_Input = {
  order?: InputMaybe<Scalars['Int']['input']>;
  prompt_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by max() on columns of table "followed_prompts" */
export type Followed_Prompts_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "followed_prompts" */
export type Followed_Prompts_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "followed_prompts" */
export type Followed_Prompts_Mutation_Response = {
  __typename?: 'followed_prompts_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Followed_Prompts>;
};

/** on_conflict condition type for table "followed_prompts" */
export type Followed_Prompts_On_Conflict = {
  constraint: Followed_Prompts_Constraint;
  update_columns?: Array<Followed_Prompts_Update_Column>;
  where?: InputMaybe<Followed_Prompts_Bool_Exp>;
};

/** Ordering options when selecting data from "followed_prompts". */
export type Followed_Prompts_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt?: InputMaybe<Prompts_Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: followed_prompts */
export type Followed_Prompts_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "followed_prompts" */
export enum Followed_Prompts_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Order = 'order',
  /** column name */
  PromptId = 'prompt_id',
  /** column name */
  UserId = 'user_id',
}

/** input type for updating data in table "followed_prompts" */
export type Followed_Prompts_Set_Input = {
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** order by stddev() on columns of table "followed_prompts" */
export type Followed_Prompts_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "followed_prompts" */
export type Followed_Prompts_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "followed_prompts" */
export type Followed_Prompts_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "followed_prompts" */
export type Followed_Prompts_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Followed_Prompts_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Followed_Prompts_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  prompt_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "followed_prompts" */
export type Followed_Prompts_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** update columns of table "followed_prompts" */
export enum Followed_Prompts_Update_Column {
  /** column name */
  Order = 'order',
}

export type Followed_Prompts_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Followed_Prompts_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Followed_Prompts_Set_Input>;
  /** filter the rows which have to be updated */
  where: Followed_Prompts_Bool_Exp;
};

/** order by var_pop() on columns of table "followed_prompts" */
export type Followed_Prompts_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "followed_prompts" */
export type Followed_Prompts_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "followed_prompts" */
export type Followed_Prompts_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "followed_user_books" */
export type Followed_User_Books = {
  __typename?: 'followed_user_books';
  /** An object relationship */
  book?: Maybe<Books>;
  book_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  follower_user?: Maybe<Users>;
  follower_user_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  user?: Maybe<Users>;
  /** An object relationship */
  user_book?: Maybe<User_Books>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "followed_user_books" */
export type Followed_User_Books_Aggregate = {
  __typename?: 'followed_user_books_aggregate';
  aggregate?: Maybe<Followed_User_Books_Aggregate_Fields>;
  nodes: Array<Followed_User_Books>;
};

/** aggregate fields of "followed_user_books" */
export type Followed_User_Books_Aggregate_Fields = {
  __typename?: 'followed_user_books_aggregate_fields';
  avg?: Maybe<Followed_User_Books_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Followed_User_Books_Max_Fields>;
  min?: Maybe<Followed_User_Books_Min_Fields>;
  stddev?: Maybe<Followed_User_Books_Stddev_Fields>;
  stddev_pop?: Maybe<Followed_User_Books_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Followed_User_Books_Stddev_Samp_Fields>;
  sum?: Maybe<Followed_User_Books_Sum_Fields>;
  var_pop?: Maybe<Followed_User_Books_Var_Pop_Fields>;
  var_samp?: Maybe<Followed_User_Books_Var_Samp_Fields>;
  variance?: Maybe<Followed_User_Books_Variance_Fields>;
};

/** aggregate fields of "followed_user_books" */
export type Followed_User_Books_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Followed_User_Books_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Followed_User_Books_Avg_Fields = {
  __typename?: 'followed_user_books_avg_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  follower_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "followed_user_books". All fields are combined with a logical 'AND'. */
export type Followed_User_Books_Bool_Exp = {
  _and?: InputMaybe<Array<Followed_User_Books_Bool_Exp>>;
  _not?: InputMaybe<Followed_User_Books_Bool_Exp>;
  _or?: InputMaybe<Array<Followed_User_Books_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  follower_user?: InputMaybe<Users_Bool_Exp>;
  follower_user_id?: InputMaybe<Int_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_book?: InputMaybe<User_Books_Bool_Exp>;
  user_book_id?: InputMaybe<Int_Comparison_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Followed_User_Books_Max_Fields = {
  __typename?: 'followed_user_books_max_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  follower_user_id?: Maybe<Scalars['Int']['output']>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Followed_User_Books_Min_Fields = {
  __typename?: 'followed_user_books_min_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  follower_user_id?: Maybe<Scalars['Int']['output']>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** Ordering options when selecting data from "followed_user_books". */
export type Followed_User_Books_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  follower_user?: InputMaybe<Users_Order_By>;
  follower_user_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_book?: InputMaybe<User_Books_Order_By>;
  user_book_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "followed_user_books" */
export enum Followed_User_Books_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  FollowerUserId = 'follower_user_id',
  /** column name */
  UserBookId = 'user_book_id',
  /** column name */
  UserId = 'user_id',
}

/** aggregate stddev on columns */
export type Followed_User_Books_Stddev_Fields = {
  __typename?: 'followed_user_books_stddev_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  follower_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Followed_User_Books_Stddev_Pop_Fields = {
  __typename?: 'followed_user_books_stddev_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  follower_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Followed_User_Books_Stddev_Samp_Fields = {
  __typename?: 'followed_user_books_stddev_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  follower_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "followed_user_books" */
export type Followed_User_Books_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Followed_User_Books_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Followed_User_Books_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  follower_user_id?: InputMaybe<Scalars['Int']['input']>;
  user_book_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Followed_User_Books_Sum_Fields = {
  __typename?: 'followed_user_books_sum_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  follower_user_id?: Maybe<Scalars['Int']['output']>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Followed_User_Books_Var_Pop_Fields = {
  __typename?: 'followed_user_books_var_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  follower_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Followed_User_Books_Var_Samp_Fields = {
  __typename?: 'followed_user_books_var_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  follower_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Followed_User_Books_Variance_Fields = {
  __typename?: 'followed_user_books_variance_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  follower_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "followed_users" */
export type Followed_Users = {
  __typename?: 'followed_users';
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  followed_user: Users;
  followed_user_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
};

/** order by aggregate values of table "followed_users" */
export type Followed_Users_Aggregate_Order_By = {
  avg?: InputMaybe<Followed_Users_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Followed_Users_Max_Order_By>;
  min?: InputMaybe<Followed_Users_Min_Order_By>;
  stddev?: InputMaybe<Followed_Users_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Followed_Users_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Followed_Users_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Followed_Users_Sum_Order_By>;
  var_pop?: InputMaybe<Followed_Users_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Followed_Users_Var_Samp_Order_By>;
  variance?: InputMaybe<Followed_Users_Variance_Order_By>;
};

/** order by avg() on columns of table "followed_users" */
export type Followed_Users_Avg_Order_By = {
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "followed_users". All fields are combined with a logical 'AND'. */
export type Followed_Users_Bool_Exp = {
  _and?: InputMaybe<Array<Followed_Users_Bool_Exp>>;
  _not?: InputMaybe<Followed_Users_Bool_Exp>;
  _or?: InputMaybe<Array<Followed_Users_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  followed_user?: InputMaybe<Users_Bool_Exp>;
  followed_user_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "followed_users" */
export type Followed_Users_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "followed_users" */
export type Followed_Users_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "followed_users" */
export type Followed_Users_Mutation_Response = {
  __typename?: 'followed_users_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Followed_Users>;
};

/** Ordering options when selecting data from "followed_users". */
export type Followed_Users_Order_By = {
  created_at?: InputMaybe<Order_By>;
  followed_user?: InputMaybe<Users_Order_By>;
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "followed_users" */
export enum Followed_Users_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  FollowedUserId = 'followed_user_id',
  /** column name */
  Id = 'id',
  /** column name */
  UserId = 'user_id',
}

/** order by stddev() on columns of table "followed_users" */
export type Followed_Users_Stddev_Order_By = {
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "followed_users" */
export type Followed_Users_Stddev_Pop_Order_By = {
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "followed_users" */
export type Followed_Users_Stddev_Samp_Order_By = {
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "followed_users" */
export type Followed_Users_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Followed_Users_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Followed_Users_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  followed_user_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "followed_users" */
export type Followed_Users_Sum_Order_By = {
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "followed_users" */
export type Followed_Users_Var_Pop_Order_By = {
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "followed_users" */
export type Followed_Users_Var_Samp_Order_By = {
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "followed_users" */
export type Followed_Users_Variance_Order_By = {
  followed_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "following_user_books" */
export type Following_User_Books = {
  __typename?: 'following_user_books';
  /** An object relationship */
  book?: Maybe<Books>;
  book_id?: Maybe<Scalars['Int']['output']>;
  followed_user_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  following_user?: Maybe<Users>;
  /** An object relationship */
  user?: Maybe<Users>;
  /** An object relationship */
  user_book?: Maybe<User_Books>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "following_user_books" */
export type Following_User_Books_Aggregate = {
  __typename?: 'following_user_books_aggregate';
  aggregate?: Maybe<Following_User_Books_Aggregate_Fields>;
  nodes: Array<Following_User_Books>;
};

/** aggregate fields of "following_user_books" */
export type Following_User_Books_Aggregate_Fields = {
  __typename?: 'following_user_books_aggregate_fields';
  avg?: Maybe<Following_User_Books_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Following_User_Books_Max_Fields>;
  min?: Maybe<Following_User_Books_Min_Fields>;
  stddev?: Maybe<Following_User_Books_Stddev_Fields>;
  stddev_pop?: Maybe<Following_User_Books_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Following_User_Books_Stddev_Samp_Fields>;
  sum?: Maybe<Following_User_Books_Sum_Fields>;
  var_pop?: Maybe<Following_User_Books_Var_Pop_Fields>;
  var_samp?: Maybe<Following_User_Books_Var_Samp_Fields>;
  variance?: Maybe<Following_User_Books_Variance_Fields>;
};

/** aggregate fields of "following_user_books" */
export type Following_User_Books_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Following_User_Books_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Following_User_Books_Avg_Fields = {
  __typename?: 'following_user_books_avg_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  followed_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "following_user_books". All fields are combined with a logical 'AND'. */
export type Following_User_Books_Bool_Exp = {
  _and?: InputMaybe<Array<Following_User_Books_Bool_Exp>>;
  _not?: InputMaybe<Following_User_Books_Bool_Exp>;
  _or?: InputMaybe<Array<Following_User_Books_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  followed_user_id?: InputMaybe<Int_Comparison_Exp>;
  following_user?: InputMaybe<Users_Bool_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_book?: InputMaybe<User_Books_Bool_Exp>;
  user_book_id?: InputMaybe<Int_Comparison_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Following_User_Books_Max_Fields = {
  __typename?: 'following_user_books_max_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  followed_user_id?: Maybe<Scalars['Int']['output']>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Following_User_Books_Min_Fields = {
  __typename?: 'following_user_books_min_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  followed_user_id?: Maybe<Scalars['Int']['output']>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** Ordering options when selecting data from "following_user_books". */
export type Following_User_Books_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  followed_user_id?: InputMaybe<Order_By>;
  following_user?: InputMaybe<Users_Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_book?: InputMaybe<User_Books_Order_By>;
  user_book_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "following_user_books" */
export enum Following_User_Books_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  FollowedUserId = 'followed_user_id',
  /** column name */
  UserBookId = 'user_book_id',
  /** column name */
  UserId = 'user_id',
}

/** aggregate stddev on columns */
export type Following_User_Books_Stddev_Fields = {
  __typename?: 'following_user_books_stddev_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  followed_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Following_User_Books_Stddev_Pop_Fields = {
  __typename?: 'following_user_books_stddev_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  followed_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Following_User_Books_Stddev_Samp_Fields = {
  __typename?: 'following_user_books_stddev_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  followed_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "following_user_books" */
export type Following_User_Books_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Following_User_Books_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Following_User_Books_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  followed_user_id?: InputMaybe<Scalars['Int']['input']>;
  user_book_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Following_User_Books_Sum_Fields = {
  __typename?: 'following_user_books_sum_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  followed_user_id?: Maybe<Scalars['Int']['output']>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Following_User_Books_Var_Pop_Fields = {
  __typename?: 'following_user_books_var_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  followed_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Following_User_Books_Var_Samp_Fields = {
  __typename?: 'following_user_books_var_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  followed_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Following_User_Books_Variance_Fields = {
  __typename?: 'following_user_books_variance_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  followed_user_id?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "goals" */
export type Goals = {
  __typename?: 'goals';
  archived: Scalars['Boolean']['output'];
  completed_at?: Maybe<Scalars['timestamptz']['output']>;
  conditions: Scalars['jsonb']['output'];
  description?: Maybe<Scalars['String']['output']>;
  end_date: Scalars['date']['output'];
  /** An array relationship */
  followers: Array<Followed_Users>;
  goal: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  metric: Scalars['String']['output'];
  privacy_setting_id?: Maybe<Scalars['Int']['output']>;
  progress: Scalars['numeric']['output'];
  start_date: Scalars['date']['output'];
  state: Scalars['String']['output'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
};

/** columns and relationships of "goals" */
export type GoalsConditionsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "goals" */
export type GoalsFollowersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

/** order by aggregate values of table "goals" */
export type Goals_Aggregate_Order_By = {
  avg?: InputMaybe<Goals_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Goals_Max_Order_By>;
  min?: InputMaybe<Goals_Min_Order_By>;
  stddev?: InputMaybe<Goals_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Goals_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Goals_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Goals_Sum_Order_By>;
  var_pop?: InputMaybe<Goals_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Goals_Var_Samp_Order_By>;
  variance?: InputMaybe<Goals_Variance_Order_By>;
};

/** order by avg() on columns of table "goals" */
export type Goals_Avg_Order_By = {
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "goals". All fields are combined with a logical 'AND'. */
export type Goals_Bool_Exp = {
  _and?: InputMaybe<Array<Goals_Bool_Exp>>;
  _not?: InputMaybe<Goals_Bool_Exp>;
  _or?: InputMaybe<Array<Goals_Bool_Exp>>;
  archived?: InputMaybe<Boolean_Comparison_Exp>;
  completed_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  conditions?: InputMaybe<Jsonb_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  end_date?: InputMaybe<Date_Comparison_Exp>;
  followers?: InputMaybe<Followed_Users_Bool_Exp>;
  goal?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  metric?: InputMaybe<String_Comparison_Exp>;
  privacy_setting_id?: InputMaybe<Int_Comparison_Exp>;
  progress?: InputMaybe<Numeric_Comparison_Exp>;
  start_date?: InputMaybe<Date_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "goals" */
export type Goals_Max_Order_By = {
  completed_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metric?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "goals" */
export type Goals_Min_Order_By = {
  completed_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metric?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "goals" */
export type Goals_Mutation_Response = {
  __typename?: 'goals_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Goals>;
};

/** Ordering options when selecting data from "goals". */
export type Goals_Order_By = {
  archived?: InputMaybe<Order_By>;
  completed_at?: InputMaybe<Order_By>;
  conditions?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  followers_aggregate?: InputMaybe<Followed_Users_Aggregate_Order_By>;
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metric?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "goals" */
export enum Goals_Select_Column {
  /** column name */
  Archived = 'archived',
  /** column name */
  CompletedAt = 'completed_at',
  /** column name */
  Conditions = 'conditions',
  /** column name */
  Description = 'description',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Goal = 'goal',
  /** column name */
  Id = 'id',
  /** column name */
  Metric = 'metric',
  /** column name */
  PrivacySettingId = 'privacy_setting_id',
  /** column name */
  Progress = 'progress',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  State = 'state',
  /** column name */
  UserId = 'user_id',
}

/** order by stddev() on columns of table "goals" */
export type Goals_Stddev_Order_By = {
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "goals" */
export type Goals_Stddev_Pop_Order_By = {
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "goals" */
export type Goals_Stddev_Samp_Order_By = {
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "goals" */
export type Goals_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Goals_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Goals_Stream_Cursor_Value_Input = {
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  completed_at?: InputMaybe<Scalars['timestamptz']['input']>;
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end_date?: InputMaybe<Scalars['date']['input']>;
  goal?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  metric?: InputMaybe<Scalars['String']['input']>;
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  progress?: InputMaybe<Scalars['numeric']['input']>;
  start_date?: InputMaybe<Scalars['date']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "goals" */
export type Goals_Sum_Order_By = {
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "goals" */
export type Goals_Var_Pop_Order_By = {
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "goals" */
export type Goals_Var_Samp_Order_By = {
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "goals" */
export type Goals_Variance_Order_By = {
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "images" */
export type Images = {
  __typename?: 'images';
  color?: Maybe<Scalars['String']['output']>;
  colors?: Maybe<Scalars['jsonb']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id: Scalars['bigint']['output'];
  imageable_id?: Maybe<Scalars['Int']['output']>;
  imageable_type?: Maybe<Scalars['String']['output']>;
  ratio?: Maybe<Scalars['float8']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  width?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "images" */
export type ImagesColorsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** order by aggregate values of table "images" */
export type Images_Aggregate_Order_By = {
  avg?: InputMaybe<Images_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Images_Max_Order_By>;
  min?: InputMaybe<Images_Min_Order_By>;
  stddev?: InputMaybe<Images_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Images_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Images_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Images_Sum_Order_By>;
  var_pop?: InputMaybe<Images_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Images_Var_Samp_Order_By>;
  variance?: InputMaybe<Images_Variance_Order_By>;
};

/** order by avg() on columns of table "images" */
export type Images_Avg_Order_By = {
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "images". All fields are combined with a logical 'AND'. */
export type Images_Bool_Exp = {
  _and?: InputMaybe<Array<Images_Bool_Exp>>;
  _not?: InputMaybe<Images_Bool_Exp>;
  _or?: InputMaybe<Array<Images_Bool_Exp>>;
  color?: InputMaybe<String_Comparison_Exp>;
  colors?: InputMaybe<Jsonb_Comparison_Exp>;
  height?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  imageable_id?: InputMaybe<Int_Comparison_Exp>;
  imageable_type?: InputMaybe<String_Comparison_Exp>;
  ratio?: InputMaybe<Float8_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  width?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "images" */
export type Images_Max_Order_By = {
  color?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  imageable_type?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "images" */
export type Images_Min_Order_By = {
  color?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  imageable_type?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "images". */
export type Images_Order_By = {
  color?: InputMaybe<Order_By>;
  colors?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  imageable_type?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** select columns of table "images" */
export enum Images_Select_Column {
  /** column name */
  Color = 'color',
  /** column name */
  Colors = 'colors',
  /** column name */
  Height = 'height',
  /** column name */
  Id = 'id',
  /** column name */
  ImageableId = 'imageable_id',
  /** column name */
  ImageableType = 'imageable_type',
  /** column name */
  Ratio = 'ratio',
  /** column name */
  Url = 'url',
  /** column name */
  Width = 'width',
}

/** order by stddev() on columns of table "images" */
export type Images_Stddev_Order_By = {
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "images" */
export type Images_Stddev_Pop_Order_By = {
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "images" */
export type Images_Stddev_Samp_Order_By = {
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "images" */
export type Images_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Images_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Images_Stream_Cursor_Value_Input = {
  color?: InputMaybe<Scalars['String']['input']>;
  colors?: InputMaybe<Scalars['jsonb']['input']>;
  height?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  imageable_id?: InputMaybe<Scalars['Int']['input']>;
  imageable_type?: InputMaybe<Scalars['String']['input']>;
  ratio?: InputMaybe<Scalars['float8']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  width?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "images" */
export type Images_Sum_Order_By = {
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "images" */
export type Images_Var_Pop_Order_By = {
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "images" */
export type Images_Var_Samp_Order_By = {
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "images" */
export type Images_Variance_Order_By = {
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imageable_id?: InputMaybe<Order_By>;
  ratio?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
export type Json_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['json']['input']>;
  _gt?: InputMaybe<Scalars['json']['input']>;
  _gte?: InputMaybe<Scalars['json']['input']>;
  _in?: InputMaybe<Array<Scalars['json']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['json']['input']>;
  _lte?: InputMaybe<Scalars['json']['input']>;
  _neq?: InputMaybe<Scalars['json']['input']>;
  _nin?: InputMaybe<Array<Scalars['json']['input']>>;
};

export type Jsonb_Cast_Exp = {
  String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  _cast?: InputMaybe<Jsonb_Cast_Exp>;
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']['input']>;
  _eq?: InputMaybe<Scalars['jsonb']['input']>;
  _gt?: InputMaybe<Scalars['jsonb']['input']>;
  _gte?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']['input']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']['input']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['jsonb']['input']>;
  _lte?: InputMaybe<Scalars['jsonb']['input']>;
  _neq?: InputMaybe<Scalars['jsonb']['input']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;
};

/** columns and relationships of "languages" */
export type Languages = {
  __typename?: 'languages';
  code2?: Maybe<Scalars['String']['output']>;
  code3?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  language: Scalars['String']['output'];
};

/** Boolean expression to filter rows from the table "languages". All fields are combined with a logical 'AND'. */
export type Languages_Bool_Exp = {
  _and?: InputMaybe<Array<Languages_Bool_Exp>>;
  _not?: InputMaybe<Languages_Bool_Exp>;
  _or?: InputMaybe<Array<Languages_Bool_Exp>>;
  code2?: InputMaybe<String_Comparison_Exp>;
  code3?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<String_Comparison_Exp>;
};

/** Ordering options when selecting data from "languages". */
export type Languages_Order_By = {
  code2?: InputMaybe<Order_By>;
  code3?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Order_By>;
};

/** select columns of table "languages" */
export enum Languages_Select_Column {
  /** column name */
  Code2 = 'code2',
  /** column name */
  Code3 = 'code3',
  /** column name */
  Id = 'id',
  /** column name */
  Language = 'language',
}

/** Streaming cursor of the table "languages" */
export type Languages_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Languages_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Languages_Stream_Cursor_Value_Input = {
  code2?: InputMaybe<Scalars['String']['input']>;
  code3?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "likes" */
export type Likes = {
  __typename?: 'likes';
  /** An object relationship */
  activity?: Maybe<Activities>;
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  /** An array relationship */
  followers: Array<Followed_Users>;
  id: Scalars['Int']['output'];
  likeable_id: Scalars['Int']['output'];
  likeable_type: Scalars['String']['output'];
  /** An object relationship */
  list?: Maybe<Lists>;
  /** An object relationship */
  user: Users;
  /** An object relationship */
  user_book?: Maybe<User_Books>;
  user_id: Scalars['Int']['output'];
};

/** columns and relationships of "likes" */
export type LikesFollowersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

/** order by aggregate values of table "likes" */
export type Likes_Aggregate_Order_By = {
  avg?: InputMaybe<Likes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Likes_Max_Order_By>;
  min?: InputMaybe<Likes_Min_Order_By>;
  stddev?: InputMaybe<Likes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Likes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Likes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Likes_Sum_Order_By>;
  var_pop?: InputMaybe<Likes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Likes_Var_Samp_Order_By>;
  variance?: InputMaybe<Likes_Variance_Order_By>;
};

/** order by avg() on columns of table "likes" */
export type Likes_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "likes". All fields are combined with a logical 'AND'. */
export type Likes_Bool_Exp = {
  _and?: InputMaybe<Array<Likes_Bool_Exp>>;
  _not?: InputMaybe<Likes_Bool_Exp>;
  _or?: InputMaybe<Array<Likes_Bool_Exp>>;
  activity?: InputMaybe<Activities_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  followers?: InputMaybe<Followed_Users_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  likeable_id?: InputMaybe<Int_Comparison_Exp>;
  likeable_type?: InputMaybe<String_Comparison_Exp>;
  list?: InputMaybe<Lists_Bool_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_book?: InputMaybe<User_Books_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "likes" */
export type Likes_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  likeable_type?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "likes" */
export type Likes_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  likeable_type?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "likes". */
export type Likes_Order_By = {
  activity?: InputMaybe<Activities_Order_By>;
  created_at?: InputMaybe<Order_By>;
  followers_aggregate?: InputMaybe<Followed_Users_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  likeable_type?: InputMaybe<Order_By>;
  list?: InputMaybe<Lists_Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_book?: InputMaybe<User_Books_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "likes" */
export enum Likes_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LikeableId = 'likeable_id',
  /** column name */
  LikeableType = 'likeable_type',
  /** column name */
  UserId = 'user_id',
}

/** order by stddev() on columns of table "likes" */
export type Likes_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "likes" */
export type Likes_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "likes" */
export type Likes_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "likes" */
export type Likes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Likes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Likes_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  likeable_id?: InputMaybe<Scalars['Int']['input']>;
  likeable_type?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "likes" */
export type Likes_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "likes" */
export type Likes_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "likes" */
export type Likes_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "likes" */
export type Likes_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  likeable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "list_books" */
export type List_Books = {
  __typename?: 'list_books';
  /** An object relationship */
  book: Books;
  book_id: Scalars['Int']['output'];
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date_added?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  edition?: Maybe<Editions>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  imported?: Maybe<Scalars['Boolean']['output']>;
  /** An object relationship */
  list: Lists;
  list_id: Scalars['Int']['output'];
  merged_at?: Maybe<Scalars['timestamp']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  original_edition_id?: Maybe<Scalars['Int']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  /** An array relationship */
  user_books: Array<User_Books>;
  /** An aggregate relationship */
  user_books_aggregate: User_Books_Aggregate;
};

/** columns and relationships of "list_books" */
export type List_BooksUser_BooksArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** columns and relationships of "list_books" */
export type List_BooksUser_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** aggregated selection of "list_books" */
export type List_Books_Aggregate = {
  __typename?: 'list_books_aggregate';
  aggregate?: Maybe<List_Books_Aggregate_Fields>;
  nodes: Array<List_Books>;
};

export type List_Books_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<List_Books_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<List_Books_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<List_Books_Aggregate_Bool_Exp_Count>;
};

export type List_Books_Aggregate_Bool_Exp_Bool_And = {
  arguments: List_Books_Select_Column_List_Books_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<List_Books_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type List_Books_Aggregate_Bool_Exp_Bool_Or = {
  arguments: List_Books_Select_Column_List_Books_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<List_Books_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type List_Books_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<List_Books_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<List_Books_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "list_books" */
export type List_Books_Aggregate_Fields = {
  __typename?: 'list_books_aggregate_fields';
  avg?: Maybe<List_Books_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<List_Books_Max_Fields>;
  min?: Maybe<List_Books_Min_Fields>;
  stddev?: Maybe<List_Books_Stddev_Fields>;
  stddev_pop?: Maybe<List_Books_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<List_Books_Stddev_Samp_Fields>;
  sum?: Maybe<List_Books_Sum_Fields>;
  var_pop?: Maybe<List_Books_Var_Pop_Fields>;
  var_samp?: Maybe<List_Books_Var_Samp_Fields>;
  variance?: Maybe<List_Books_Variance_Fields>;
};

/** aggregate fields of "list_books" */
export type List_Books_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<List_Books_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "list_books" */
export type List_Books_Aggregate_Order_By = {
  avg?: InputMaybe<List_Books_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<List_Books_Max_Order_By>;
  min?: InputMaybe<List_Books_Min_Order_By>;
  stddev?: InputMaybe<List_Books_Stddev_Order_By>;
  stddev_pop?: InputMaybe<List_Books_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<List_Books_Stddev_Samp_Order_By>;
  sum?: InputMaybe<List_Books_Sum_Order_By>;
  var_pop?: InputMaybe<List_Books_Var_Pop_Order_By>;
  var_samp?: InputMaybe<List_Books_Var_Samp_Order_By>;
  variance?: InputMaybe<List_Books_Variance_Order_By>;
};

/** aggregate avg on columns */
export type List_Books_Avg_Fields = {
  __typename?: 'list_books_avg_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  list_id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "list_books" */
export type List_Books_Avg_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "list_books". All fields are combined with a logical 'AND'. */
export type List_Books_Bool_Exp = {
  _and?: InputMaybe<Array<List_Books_Bool_Exp>>;
  _not?: InputMaybe<List_Books_Bool_Exp>;
  _or?: InputMaybe<Array<List_Books_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  date_added?: InputMaybe<Timestamptz_Comparison_Exp>;
  edition?: InputMaybe<Editions_Bool_Exp>;
  edition_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  imported?: InputMaybe<Boolean_Comparison_Exp>;
  list?: InputMaybe<Lists_Bool_Exp>;
  list_id?: InputMaybe<Int_Comparison_Exp>;
  merged_at?: InputMaybe<Timestamp_Comparison_Exp>;
  original_book_id?: InputMaybe<Int_Comparison_Exp>;
  original_edition_id?: InputMaybe<Int_Comparison_Exp>;
  position?: InputMaybe<Int_Comparison_Exp>;
  reason?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_books?: InputMaybe<User_Books_Bool_Exp>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Bool_Exp>;
};

/** input type for incrementing numeric columns in table "list_books" */
export type List_Books_Inc_Input = {
  position?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type List_Books_Max_Fields = {
  __typename?: 'list_books_max_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date_added?: Maybe<Scalars['timestamptz']['output']>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  list_id?: Maybe<Scalars['Int']['output']>;
  merged_at?: Maybe<Scalars['timestamp']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  original_edition_id?: Maybe<Scalars['Int']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "list_books" */
export type List_Books_Max_Order_By = {
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date_added?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  merged_at?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reason?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type List_Books_Min_Fields = {
  __typename?: 'list_books_min_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date_added?: Maybe<Scalars['timestamptz']['output']>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  list_id?: Maybe<Scalars['Int']['output']>;
  merged_at?: Maybe<Scalars['timestamp']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  original_edition_id?: Maybe<Scalars['Int']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "list_books" */
export type List_Books_Min_Order_By = {
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date_added?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  merged_at?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reason?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "list_books" */
export type List_Books_Mutation_Response = {
  __typename?: 'list_books_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<List_Books>;
};

/** Ordering options when selecting data from "list_books". */
export type List_Books_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date_added?: InputMaybe<Order_By>;
  edition?: InputMaybe<Editions_Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imported?: InputMaybe<Order_By>;
  list?: InputMaybe<Lists_Order_By>;
  list_id?: InputMaybe<Order_By>;
  merged_at?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reason?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Order_By>;
};

/** primary key columns input for table: list_books */
export type List_Books_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "list_books" */
export enum List_Books_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DateAdded = 'date_added',
  /** column name */
  EditionId = 'edition_id',
  /** column name */
  Id = 'id',
  /** column name */
  Imported = 'imported',
  /** column name */
  ListId = 'list_id',
  /** column name */
  MergedAt = 'merged_at',
  /** column name */
  OriginalBookId = 'original_book_id',
  /** column name */
  OriginalEditionId = 'original_edition_id',
  /** column name */
  Position = 'position',
  /** column name */
  Reason = 'reason',
  /** column name */
  UpdatedAt = 'updated_at',
}

/** select "list_books_aggregate_bool_exp_bool_and_arguments_columns" columns of table "list_books" */
export enum List_Books_Select_Column_List_Books_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Imported = 'imported',
}

/** select "list_books_aggregate_bool_exp_bool_or_arguments_columns" columns of table "list_books" */
export enum List_Books_Select_Column_List_Books_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Imported = 'imported',
}

/** input type for updating data in table "list_books" */
export type List_Books_Set_Input = {
  position?: InputMaybe<Scalars['Int']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type List_Books_Stddev_Fields = {
  __typename?: 'list_books_stddev_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  list_id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "list_books" */
export type List_Books_Stddev_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type List_Books_Stddev_Pop_Fields = {
  __typename?: 'list_books_stddev_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  list_id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "list_books" */
export type List_Books_Stddev_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type List_Books_Stddev_Samp_Fields = {
  __typename?: 'list_books_stddev_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  list_id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "list_books" */
export type List_Books_Stddev_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "list_books" */
export type List_Books_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: List_Books_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type List_Books_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date_added?: InputMaybe<Scalars['timestamptz']['input']>;
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  imported?: InputMaybe<Scalars['Boolean']['input']>;
  list_id?: InputMaybe<Scalars['Int']['input']>;
  merged_at?: InputMaybe<Scalars['timestamp']['input']>;
  original_book_id?: InputMaybe<Scalars['Int']['input']>;
  original_edition_id?: InputMaybe<Scalars['Int']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type List_Books_Sum_Fields = {
  __typename?: 'list_books_sum_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  list_id?: Maybe<Scalars['Int']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  original_edition_id?: Maybe<Scalars['Int']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "list_books" */
export type List_Books_Sum_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

export type List_Books_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<List_Books_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<List_Books_Set_Input>;
  /** filter the rows which have to be updated */
  where: List_Books_Bool_Exp;
};

/** aggregate var_pop on columns */
export type List_Books_Var_Pop_Fields = {
  __typename?: 'list_books_var_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  list_id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "list_books" */
export type List_Books_Var_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type List_Books_Var_Samp_Fields = {
  __typename?: 'list_books_var_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  list_id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "list_books" */
export type List_Books_Var_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type List_Books_Variance_Fields = {
  __typename?: 'list_books_variance_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  list_id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "list_books" */
export type List_Books_Variance_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  list_id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
};

/** columns and relationships of "lists" */
export type Lists = {
  __typename?: 'lists';
  books_count: Scalars['Int']['output'];
  created_at?: Maybe<Scalars['timestamp']['output']>;
  default_view: Scalars['String']['output'];
  description?: Maybe<Scalars['String']['output']>;
  featured: Scalars['Boolean']['output'];
  featured_profile: Scalars['Boolean']['output'];
  /** An array relationship */
  followed_lists: Array<Followed_Lists>;
  /** An array relationship */
  followers: Array<Followed_Users>;
  followers_count?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  imported: Scalars['Boolean']['output'];
  /** An array relationship */
  likes: Array<Likes>;
  likes_count: Scalars['Int']['output'];
  /** An array relationship */
  list_books: Array<List_Books>;
  /** An aggregate relationship */
  list_books_aggregate: List_Books_Aggregate;
  name: Scalars['String']['output'];
  object_type: Scalars['String']['output'];
  /** An object relationship */
  privacy_setting: Privacy_Settings;
  privacy_setting_id: Scalars['Int']['output'];
  public: Scalars['Boolean']['output'];
  ranked: Scalars['Boolean']['output'];
  slug?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
};

/** columns and relationships of "lists" */
export type ListsFollowed_ListsArgs = {
  distinct_on?: InputMaybe<Array<Followed_Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Lists_Order_By>>;
  where?: InputMaybe<Followed_Lists_Bool_Exp>;
};

/** columns and relationships of "lists" */
export type ListsFollowersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

/** columns and relationships of "lists" */
export type ListsLikesArgs = {
  distinct_on?: InputMaybe<Array<Likes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Likes_Order_By>>;
  where?: InputMaybe<Likes_Bool_Exp>;
};

/** columns and relationships of "lists" */
export type ListsList_BooksArgs = {
  distinct_on?: InputMaybe<Array<List_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<List_Books_Order_By>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

/** columns and relationships of "lists" */
export type ListsList_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<List_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<List_Books_Order_By>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

/** aggregated selection of "lists" */
export type Lists_Aggregate = {
  __typename?: 'lists_aggregate';
  aggregate?: Maybe<Lists_Aggregate_Fields>;
  nodes: Array<Lists>;
};

export type Lists_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Lists_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Lists_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Lists_Aggregate_Bool_Exp_Count>;
};

export type Lists_Aggregate_Bool_Exp_Bool_And = {
  arguments: Lists_Select_Column_Lists_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Lists_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Lists_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Lists_Select_Column_Lists_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Lists_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Lists_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Lists_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Lists_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "lists" */
export type Lists_Aggregate_Fields = {
  __typename?: 'lists_aggregate_fields';
  avg?: Maybe<Lists_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Lists_Max_Fields>;
  min?: Maybe<Lists_Min_Fields>;
  stddev?: Maybe<Lists_Stddev_Fields>;
  stddev_pop?: Maybe<Lists_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Lists_Stddev_Samp_Fields>;
  sum?: Maybe<Lists_Sum_Fields>;
  var_pop?: Maybe<Lists_Var_Pop_Fields>;
  var_samp?: Maybe<Lists_Var_Samp_Fields>;
  variance?: Maybe<Lists_Variance_Fields>;
};

/** aggregate fields of "lists" */
export type Lists_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lists_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "lists" */
export type Lists_Aggregate_Order_By = {
  avg?: InputMaybe<Lists_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lists_Max_Order_By>;
  min?: InputMaybe<Lists_Min_Order_By>;
  stddev?: InputMaybe<Lists_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Lists_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Lists_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Lists_Sum_Order_By>;
  var_pop?: InputMaybe<Lists_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Lists_Var_Samp_Order_By>;
  variance?: InputMaybe<Lists_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Lists_Avg_Fields = {
  __typename?: 'lists_avg_fields';
  books_count?: Maybe<Scalars['Float']['output']>;
  followers_count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "lists" */
export type Lists_Avg_Order_By = {
  books_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "lists". All fields are combined with a logical 'AND'. */
export type Lists_Bool_Exp = {
  _and?: InputMaybe<Array<Lists_Bool_Exp>>;
  _not?: InputMaybe<Lists_Bool_Exp>;
  _or?: InputMaybe<Array<Lists_Bool_Exp>>;
  books_count?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  default_view?: InputMaybe<String_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  featured?: InputMaybe<Boolean_Comparison_Exp>;
  featured_profile?: InputMaybe<Boolean_Comparison_Exp>;
  followed_lists?: InputMaybe<Followed_Lists_Bool_Exp>;
  followers?: InputMaybe<Followed_Users_Bool_Exp>;
  followers_count?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  imported?: InputMaybe<Boolean_Comparison_Exp>;
  likes?: InputMaybe<Likes_Bool_Exp>;
  likes_count?: InputMaybe<Int_Comparison_Exp>;
  list_books?: InputMaybe<List_Books_Bool_Exp>;
  list_books_aggregate?: InputMaybe<List_Books_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  object_type?: InputMaybe<String_Comparison_Exp>;
  privacy_setting?: InputMaybe<Privacy_Settings_Bool_Exp>;
  privacy_setting_id?: InputMaybe<Int_Comparison_Exp>;
  public?: InputMaybe<Boolean_Comparison_Exp>;
  ranked?: InputMaybe<Boolean_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Lists_Max_Fields = {
  __typename?: 'lists_max_fields';
  books_count?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  default_view?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  followers_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  likes_count?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  object_type?: Maybe<Scalars['String']['output']>;
  privacy_setting_id?: Maybe<Scalars['Int']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "lists" */
export type Lists_Max_Order_By = {
  books_count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  default_view?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lists_Min_Fields = {
  __typename?: 'lists_min_fields';
  books_count?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  default_view?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  followers_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  likes_count?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  object_type?: Maybe<Scalars['String']['output']>;
  privacy_setting_id?: Maybe<Scalars['Int']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "lists" */
export type Lists_Min_Order_By = {
  books_count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  default_view?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "lists". */
export type Lists_Order_By = {
  books_count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  default_view?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  featured?: InputMaybe<Order_By>;
  featured_profile?: InputMaybe<Order_By>;
  followed_lists_aggregate?: InputMaybe<Followed_Lists_Aggregate_Order_By>;
  followers_aggregate?: InputMaybe<Followed_Users_Aggregate_Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imported?: InputMaybe<Order_By>;
  likes_aggregate?: InputMaybe<Likes_Aggregate_Order_By>;
  likes_count?: InputMaybe<Order_By>;
  list_books_aggregate?: InputMaybe<List_Books_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  privacy_setting?: InputMaybe<Privacy_Settings_Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  public?: InputMaybe<Order_By>;
  ranked?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "lists" */
export enum Lists_Select_Column {
  /** column name */
  BooksCount = 'books_count',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DefaultView = 'default_view',
  /** column name */
  Description = 'description',
  /** column name */
  Featured = 'featured',
  /** column name */
  FeaturedProfile = 'featured_profile',
  /** column name */
  FollowersCount = 'followers_count',
  /** column name */
  Id = 'id',
  /** column name */
  Imported = 'imported',
  /** column name */
  LikesCount = 'likes_count',
  /** column name */
  Name = 'name',
  /** column name */
  ObjectType = 'object_type',
  /** column name */
  PrivacySettingId = 'privacy_setting_id',
  /** column name */
  Public = 'public',
  /** column name */
  Ranked = 'ranked',
  /** column name */
  Slug = 'slug',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Url = 'url',
  /** column name */
  UserId = 'user_id',
}

/** select "lists_aggregate_bool_exp_bool_and_arguments_columns" columns of table "lists" */
export enum Lists_Select_Column_Lists_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Featured = 'featured',
  /** column name */
  FeaturedProfile = 'featured_profile',
  /** column name */
  Imported = 'imported',
  /** column name */
  Public = 'public',
  /** column name */
  Ranked = 'ranked',
}

/** select "lists_aggregate_bool_exp_bool_or_arguments_columns" columns of table "lists" */
export enum Lists_Select_Column_Lists_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Featured = 'featured',
  /** column name */
  FeaturedProfile = 'featured_profile',
  /** column name */
  Imported = 'imported',
  /** column name */
  Public = 'public',
  /** column name */
  Ranked = 'ranked',
}

/** aggregate stddev on columns */
export type Lists_Stddev_Fields = {
  __typename?: 'lists_stddev_fields';
  books_count?: Maybe<Scalars['Float']['output']>;
  followers_count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "lists" */
export type Lists_Stddev_Order_By = {
  books_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Lists_Stddev_Pop_Fields = {
  __typename?: 'lists_stddev_pop_fields';
  books_count?: Maybe<Scalars['Float']['output']>;
  followers_count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "lists" */
export type Lists_Stddev_Pop_Order_By = {
  books_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Lists_Stddev_Samp_Fields = {
  __typename?: 'lists_stddev_samp_fields';
  books_count?: Maybe<Scalars['Float']['output']>;
  followers_count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "lists" */
export type Lists_Stddev_Samp_Order_By = {
  books_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "lists" */
export type Lists_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Lists_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Lists_Stream_Cursor_Value_Input = {
  books_count?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  default_view?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  featured?: InputMaybe<Scalars['Boolean']['input']>;
  featured_profile?: InputMaybe<Scalars['Boolean']['input']>;
  followers_count?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  imported?: InputMaybe<Scalars['Boolean']['input']>;
  likes_count?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  object_type?: InputMaybe<Scalars['String']['input']>;
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  public?: InputMaybe<Scalars['Boolean']['input']>;
  ranked?: InputMaybe<Scalars['Boolean']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Lists_Sum_Fields = {
  __typename?: 'lists_sum_fields';
  books_count?: Maybe<Scalars['Int']['output']>;
  followers_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  likes_count?: Maybe<Scalars['Int']['output']>;
  privacy_setting_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "lists" */
export type Lists_Sum_Order_By = {
  books_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Lists_Var_Pop_Fields = {
  __typename?: 'lists_var_pop_fields';
  books_count?: Maybe<Scalars['Float']['output']>;
  followers_count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "lists" */
export type Lists_Var_Pop_Order_By = {
  books_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Lists_Var_Samp_Fields = {
  __typename?: 'lists_var_samp_fields';
  books_count?: Maybe<Scalars['Float']['output']>;
  followers_count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "lists" */
export type Lists_Var_Samp_Order_By = {
  books_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Lists_Variance_Fields = {
  __typename?: 'lists_variance_fields';
  books_count?: Maybe<Scalars['Float']['output']>;
  followers_count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "lists" */
export type Lists_Variance_Order_By = {
  books_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  /** book_mapping_normalize */
  book_mapping_normalize?: Maybe<BookMappingIdType>;
  book_normalize?: Maybe<BookIdType>;
  /** collection_import_result_reimport */
  collection_import_result_reimport?: Maybe<CollectionImportResultIdType>;
  /** collection_import_retry */
  collection_import_retry?: Maybe<CollectionImportIdType>;
  /** delete data from the table: "activities" */
  delete_activities?: Maybe<Activities_Mutation_Response>;
  /** delete single row from the table: "activities" */
  delete_activities_by_pk?: Maybe<Activities>;
  /** delete_book_mapping */
  delete_book_mapping?: Maybe<BookMappingIdType>;
  /** delete_followed_list */
  delete_followed_list?: Maybe<DeleteListType>;
  /** delete_followed_prompt */
  delete_followed_prompt?: Maybe<DeleteFollowedPromptType>;
  /** delete data from the table: "followed_prompts" */
  delete_followed_prompts?: Maybe<Followed_Prompts_Mutation_Response>;
  /** delete single row from the table: "followed_prompts" */
  delete_followed_prompts_by_pk?: Maybe<Followed_Prompts>;
  /** delete_followed_user */
  delete_followed_user?: Maybe<FollowedUserType>;
  /** delete data from the table: "followed_users" */
  delete_followed_users?: Maybe<Followed_Users_Mutation_Response>;
  /** delete single row from the table: "followed_users" */
  delete_followed_users_by_pk?: Maybe<Followed_Users>;
  /** delete data from the table: "goals" */
  delete_goals?: Maybe<Goals_Mutation_Response>;
  /** delete single row from the table: "goals" */
  delete_goals_by_pk?: Maybe<Goals>;
  /** delete_like */
  delete_like?: Maybe<LikeDeleteType>;
  /** delete_list */
  delete_list?: Maybe<ListDeleteType>;
  /** delete_list_book */
  delete_list_book?: Maybe<ListBookDeleteType>;
  /** delete_prompt_answer */
  delete_prompt_answer?: Maybe<PromptAnswerIdType>;
  /** delete data from the table: "prompts" */
  delete_prompts?: Maybe<Prompts_Mutation_Response>;
  /** delete single row from the table: "prompts" */
  delete_prompts_by_pk?: Maybe<Prompts>;
  /** delete_reading_journal */
  delete_reading_journal?: Maybe<DeleteReadingJournalOutput>;
  /** delete_reading_journals_for_book */
  delete_reading_journals_for_book?: Maybe<DeleteReadingJournalsOutput>;
  /** delete data from the table: "user_blocks" */
  delete_user_blocks?: Maybe<User_Blocks_Mutation_Response>;
  /** delete single row from the table: "user_blocks" */
  delete_user_blocks_by_pk?: Maybe<User_Blocks>;
  delete_user_book?: Maybe<UserBookDeleteType>;
  /** delete_user_book_read */
  delete_user_book_read?: Maybe<UserBookReadIdType>;
  /** edition_normalize */
  edition_normalize?: Maybe<EditionIdType>;
  /** edition_owned */
  edition_owned?: Maybe<ListBookIdType>;
  /** email_user_delete_confirmation */
  email_user_delete_confirmation?: Maybe<SuccessType>;
  /** insert_author */
  insert_author?: Maybe<AuthorIdType>;
  /** insert_block */
  insert_block?: Maybe<InsertBlockOutput>;
  /** insert_book */
  insert_book?: Maybe<OptionalEditionIdType>;
  /** insert_book_mapping */
  insert_book_mapping?: Maybe<BookMappingIdType>;
  /** insert_character */
  insert_character?: Maybe<CharacterIdType>;
  /** insert_collection_import */
  insert_collection_import?: Maybe<CollectionImportIdType>;
  /** insert_edition */
  insert_edition?: Maybe<EditionIdType>;
  /** insert data into the table: "followed_prompts" */
  insert_followed_prompts?: Maybe<Followed_Prompts_Mutation_Response>;
  /** insert a single row into the table: "followed_prompts" */
  insert_followed_prompts_one?: Maybe<Followed_Prompts>;
  /** insert_followed_user */
  insert_followed_user?: Maybe<FollowedUserType>;
  /** insert_goal */
  insert_goal?: Maybe<GoalIdType>;
  /** insert_image */
  insert_image?: Maybe<ImageIdType>;
  /** insert_list */
  insert_list?: Maybe<ListIdType>;
  /** insert_list_book */
  insert_list_book?: Maybe<ListBookIdType>;
  /** insert data into the table: "notification_settings" */
  insert_notification_settings?: Maybe<Notification_Settings_Mutation_Response>;
  /** insert a single row into the table: "notification_settings" */
  insert_notification_settings_one?: Maybe<Notification_Settings>;
  /** insert_prompt */
  insert_prompt?: Maybe<PromptIdType>;
  /** insert_prompt_answer */
  insert_prompt_answer?: Maybe<PromptAnswerIdType>;
  /** insert_publisher */
  insert_publisher?: Maybe<PublisherIdType>;
  /** insert_reading_journal */
  insert_reading_journal?: Maybe<ReadingJournalOutput>;
  /** insert_report */
  insert_report?: Maybe<ReportOutput>;
  /** insert_series */
  insert_serie?: Maybe<SeriesIdType>;
  /** insert_user */
  insert_user?: Maybe<UserIdType>;
  /** insert data into the table: "user_blocks" */
  insert_user_blocks?: Maybe<User_Blocks_Mutation_Response>;
  /** insert a single row into the table: "user_blocks" */
  insert_user_blocks_one?: Maybe<User_Blocks>;
  /** insert_user_book */
  insert_user_book?: Maybe<UserBookIdType>;
  insert_user_book_read?: Maybe<UserBookReadIdType>;
  /** insert data into the table: "user_flags" */
  insert_user_flags?: Maybe<User_Flags_Mutation_Response>;
  /** insert a single row into the table: "user_flags" */
  insert_user_flags_one?: Maybe<User_Flags>;
  /** validate_receipt */
  receipt_validate?: Maybe<ValidateReceiptType>;
  /** update_author */
  update_author?: Maybe<AuthorIdType>;
  /** update_book */
  update_book?: Maybe<BookIdType>;
  /** update_character */
  update_character?: Maybe<CharacterIdType>;
  /** update data of the table: "collection_import_results" */
  update_collection_import_results?: Maybe<Collection_Import_Results_Mutation_Response>;
  /** update single row of the table: "collection_import_results" */
  update_collection_import_results_by_pk?: Maybe<Collection_Import_Results>;
  /** update multiples rows of table: "collection_import_results" */
  update_collection_import_results_many?: Maybe<
    Array<Maybe<Collection_Import_Results_Mutation_Response>>
  >;
  /** update_edition */
  update_edition?: Maybe<EditionIdType>;
  /** update data of the table: "followed_prompts" */
  update_followed_prompts?: Maybe<Followed_Prompts_Mutation_Response>;
  /** update single row of the table: "followed_prompts" */
  update_followed_prompts_by_pk?: Maybe<Followed_Prompts>;
  /** update multiples rows of table: "followed_prompts" */
  update_followed_prompts_many?: Maybe<Array<Maybe<Followed_Prompts_Mutation_Response>>>;
  /** update_goal */
  update_goal?: Maybe<GoalIdType>;
  /** update_goal_progress */
  update_goal_progress?: Maybe<GoalIdType>;
  /** update_list */
  update_list?: Maybe<ListIdType>;
  /** update data of the table: "list_books" */
  update_list_books?: Maybe<List_Books_Mutation_Response>;
  /** update single row of the table: "list_books" */
  update_list_books_by_pk?: Maybe<List_Books>;
  /** update multiples rows of table: "list_books" */
  update_list_books_many?: Maybe<Array<Maybe<List_Books_Mutation_Response>>>;
  /** update_newsletter */
  update_newsletter?: Maybe<NewsletterStatusType>;
  /** update data of the table: "notification_deliveries" */
  update_notification_deliveries?: Maybe<Notification_Deliveries_Mutation_Response>;
  /** update single row of the table: "notification_deliveries" */
  update_notification_deliveries_by_pk?: Maybe<Notification_Deliveries>;
  /** update multiples rows of table: "notification_deliveries" */
  update_notification_deliveries_many?: Maybe<
    Array<Maybe<Notification_Deliveries_Mutation_Response>>
  >;
  /** update data of the table: "notification_settings" */
  update_notification_settings?: Maybe<Notification_Settings_Mutation_Response>;
  /** update single row of the table: "notification_settings" */
  update_notification_settings_by_pk?: Maybe<Notification_Settings>;
  /** update multiples rows of table: "notification_settings" */
  update_notification_settings_many?: Maybe<Array<Maybe<Notification_Settings_Mutation_Response>>>;
  /** update_prompt */
  update_prompt?: Maybe<PromptIdType>;
  /** update data of the table: "prompt_answers" */
  update_prompt_answers?: Maybe<Prompt_Answers_Mutation_Response>;
  /** update single row of the table: "prompt_answers" */
  update_prompt_answers_by_pk?: Maybe<Prompt_Answers>;
  /** update multiples rows of table: "prompt_answers" */
  update_prompt_answers_many?: Maybe<Array<Maybe<Prompt_Answers_Mutation_Response>>>;
  /** update_publisher */
  update_publisher?: Maybe<PublisherIdType>;
  /** update_reading_journal */
  update_reading_journal?: Maybe<ReadingJournalOutput>;
  /** update_serie */
  update_serie?: Maybe<SeriesIdType>;
  /** update_user */
  update_user?: Maybe<UserIdType>;
  /** update_user_book */
  update_user_book?: Maybe<UserBookIdType>;
  /** update_user_book_read */
  update_user_book_read?: Maybe<UserBookReadIdType>;
  /** update_user_privacy_setting */
  update_user_privacy_setting?: Maybe<UserIdType>;
  /** upsert_book */
  upsert_book?: Maybe<NewBookIdType>;
  /** upsert_followed_list */
  upsert_followed_list?: Maybe<FollowedListType>;
  /** upsert_followed_prompt */
  upsert_followed_prompt?: Maybe<FollowedPromptType>;
  /** upsert_like */
  upsert_like?: Maybe<LikeType>;
  /** upsert_tags */
  upsert_tags?: Maybe<TagsType>;
  /** upsert_user_book_read */
  upsert_user_book_reads?: Maybe<UserBooksReadUpsertType>;
  /** user_login */
  user_login?: Maybe<UserIdType>;
};

/** mutation root */
export type Mutation_RootBook_Mapping_NormalizeArgs = {
  deep: Scalars['Boolean']['input'];
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootBook_NormalizeArgs = {
  deep?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootCollection_Import_Result_ReimportArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootCollection_Import_RetryArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ActivitiesArgs = {
  where: Activities_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Activities_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Book_MappingArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Followed_ListArgs = {
  list_id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Followed_PromptArgs = {
  prompt_id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Followed_PromptsArgs = {
  where: Followed_Prompts_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Followed_Prompts_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Followed_UserArgs = {
  user_id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Followed_UsersArgs = {
  where: Followed_Users_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Followed_Users_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_GoalsArgs = {
  where: Goals_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Goals_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_LikeArgs = {
  likeable_id: Scalars['Int']['input'];
  likeable_type: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ListArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_List_BookArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Prompt_AnswerArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_PromptsArgs = {
  where: Prompts_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Prompts_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Reading_JournalArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Reading_Journals_For_BookArgs = {
  book_id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_User_BlocksArgs = {
  where: User_Blocks_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Blocks_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

/** mutation root */
export type Mutation_RootDelete_User_BookArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_User_Book_ReadArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootEdition_NormalizeArgs = {
  deep: Scalars['Boolean']['input'];
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootEdition_OwnedArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootInsert_AuthorArgs = {
  object: AuthorInputType;
};

/** mutation root */
export type Mutation_RootInsert_BlockArgs = {
  blocked_user_id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootInsert_BookArgs = {
  edition: EditionInput;
};

/** mutation root */
export type Mutation_RootInsert_Book_MappingArgs = {
  object: BookMappingInput;
};

/** mutation root */
export type Mutation_RootInsert_CharacterArgs = {
  character: CharacterInput;
};

/** mutation root */
export type Mutation_RootInsert_Collection_ImportArgs = {
  object: CollectionImportInput;
};

/** mutation root */
export type Mutation_RootInsert_EditionArgs = {
  book_id: Scalars['Int']['input'];
  edition: EditionInput;
};

/** mutation root */
export type Mutation_RootInsert_Followed_PromptsArgs = {
  objects: Array<Followed_Prompts_Insert_Input>;
  on_conflict?: InputMaybe<Followed_Prompts_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Followed_Prompts_OneArgs = {
  object: Followed_Prompts_Insert_Input;
  on_conflict?: InputMaybe<Followed_Prompts_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Followed_UserArgs = {
  user_id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootInsert_GoalArgs = {
  object: GoalInput;
};

/** mutation root */
export type Mutation_RootInsert_ImageArgs = {
  image: ImageInput;
};

/** mutation root */
export type Mutation_RootInsert_ListArgs = {
  object: ListInput;
};

/** mutation root */
export type Mutation_RootInsert_List_BookArgs = {
  object: ListBookInput;
};

/** mutation root */
export type Mutation_RootInsert_Notification_SettingsArgs = {
  objects: Array<Notification_Settings_Insert_Input>;
  on_conflict?: InputMaybe<Notification_Settings_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Notification_Settings_OneArgs = {
  object: Notification_Settings_Insert_Input;
  on_conflict?: InputMaybe<Notification_Settings_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_PromptArgs = {
  object: CreatePromptInput;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_AnswerArgs = {
  object: PromptAnswerCreateInput;
};

/** mutation root */
export type Mutation_RootInsert_PublisherArgs = {
  publisher: PublisherInputType;
};

/** mutation root */
export type Mutation_RootInsert_Reading_JournalArgs = {
  object: ReadingJournalCreateType;
};

/** mutation root */
export type Mutation_RootInsert_ReportArgs = {
  report: ReportInput;
};

/** mutation root */
export type Mutation_RootInsert_SerieArgs = {
  object: SeriesInput;
};

/** mutation root */
export type Mutation_RootInsert_UserArgs = {
  user: UserJoinInput;
};

/** mutation root */
export type Mutation_RootInsert_User_BlocksArgs = {
  objects: Array<User_Blocks_Insert_Input>;
  on_conflict?: InputMaybe<User_Blocks_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Blocks_OneArgs = {
  object: User_Blocks_Insert_Input;
  on_conflict?: InputMaybe<User_Blocks_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_BookArgs = {
  object: UserBookCreateInput;
};

/** mutation root */
export type Mutation_RootInsert_User_Book_ReadArgs = {
  user_book_id: Scalars['Int']['input'];
  user_book_read: DatesReadInput;
};

/** mutation root */
export type Mutation_RootInsert_User_FlagsArgs = {
  objects: Array<User_Flags_Insert_Input>;
  on_conflict?: InputMaybe<User_Flags_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Flags_OneArgs = {
  object: User_Flags_Insert_Input;
  on_conflict?: InputMaybe<User_Flags_On_Conflict>;
};

/** mutation root */
export type Mutation_RootReceipt_ValidateArgs = {
  payment_system_id: Scalars['Int']['input'];
  receipt: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootUpdate_AuthorArgs = {
  author: AuthorInputType;
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootUpdate_BookArgs = {
  book: BookInput;
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootUpdate_CharacterArgs = {
  character: CharacterInput;
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootUpdate_Collection_Import_ResultsArgs = {
  _inc?: InputMaybe<Collection_Import_Results_Inc_Input>;
  _set?: InputMaybe<Collection_Import_Results_Set_Input>;
  where: Collection_Import_Results_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_Import_Results_By_PkArgs = {
  _inc?: InputMaybe<Collection_Import_Results_Inc_Input>;
  _set?: InputMaybe<Collection_Import_Results_Set_Input>;
  pk_columns: Collection_Import_Results_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_Import_Results_ManyArgs = {
  updates: Array<Collection_Import_Results_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_EditionArgs = {
  edition: EditionInput;
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootUpdate_Followed_PromptsArgs = {
  _inc?: InputMaybe<Followed_Prompts_Inc_Input>;
  _set?: InputMaybe<Followed_Prompts_Set_Input>;
  where: Followed_Prompts_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Followed_Prompts_By_PkArgs = {
  _inc?: InputMaybe<Followed_Prompts_Inc_Input>;
  _set?: InputMaybe<Followed_Prompts_Set_Input>;
  pk_columns: Followed_Prompts_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Followed_Prompts_ManyArgs = {
  updates: Array<Followed_Prompts_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_GoalArgs = {
  id: Scalars['Int']['input'];
  object: GoalInput;
};

/** mutation root */
export type Mutation_RootUpdate_Goal_ProgressArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootUpdate_ListArgs = {
  id: Scalars['Int']['input'];
  object: ListInput;
};

/** mutation root */
export type Mutation_RootUpdate_List_BooksArgs = {
  _inc?: InputMaybe<List_Books_Inc_Input>;
  _set?: InputMaybe<List_Books_Set_Input>;
  where: List_Books_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_List_Books_By_PkArgs = {
  _inc?: InputMaybe<List_Books_Inc_Input>;
  _set?: InputMaybe<List_Books_Set_Input>;
  pk_columns: List_Books_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_List_Books_ManyArgs = {
  updates: Array<List_Books_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_NewsletterArgs = {
  subscribed: Scalars['Boolean']['input'];
};

/** mutation root */
export type Mutation_RootUpdate_Notification_DeliveriesArgs = {
  _set?: InputMaybe<Notification_Deliveries_Set_Input>;
  where: Notification_Deliveries_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Notification_Deliveries_By_PkArgs = {
  _set?: InputMaybe<Notification_Deliveries_Set_Input>;
  pk_columns: Notification_Deliveries_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Notification_Deliveries_ManyArgs = {
  updates: Array<Notification_Deliveries_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Notification_SettingsArgs = {
  _set?: InputMaybe<Notification_Settings_Set_Input>;
  where: Notification_Settings_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Notification_Settings_By_PkArgs = {
  _set?: InputMaybe<Notification_Settings_Set_Input>;
  pk_columns: Notification_Settings_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Notification_Settings_ManyArgs = {
  updates: Array<Notification_Settings_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_PromptArgs = {
  object: UpdatePromptInput;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_AnswersArgs = {
  _set?: InputMaybe<Prompt_Answers_Set_Input>;
  where: Prompt_Answers_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_Answers_By_PkArgs = {
  _set?: InputMaybe<Prompt_Answers_Set_Input>;
  pk_columns: Prompt_Answers_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_Answers_ManyArgs = {
  updates: Array<Prompt_Answers_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_PublisherArgs = {
  id: Scalars['Int']['input'];
  publisher: PublisherInputType;
};

/** mutation root */
export type Mutation_RootUpdate_Reading_JournalArgs = {
  id: Scalars['Int']['input'];
  object: ReadingJournalUpdateType;
};

/** mutation root */
export type Mutation_RootUpdate_SerieArgs = {
  id: Scalars['Int']['input'];
  series: SeriesInputType;
};

/** mutation root */
export type Mutation_RootUpdate_UserArgs = {
  user: Update_User_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_BookArgs = {
  id: Scalars['Int']['input'];
  object: UserBookUpdateInput;
};

/** mutation root */
export type Mutation_RootUpdate_User_Book_ReadArgs = {
  id: Scalars['Int']['input'];
  object: DatesReadInput;
};

/** mutation root */
export type Mutation_RootUpdate_User_Privacy_SettingArgs = {
  privacy_setting_id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootUpsert_BookArgs = {
  book: CreateBookFromPlatformInput;
};

/** mutation root */
export type Mutation_RootUpsert_Followed_ListArgs = {
  list_id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootUpsert_Followed_PromptArgs = {
  prompt_id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootUpsert_LikeArgs = {
  likeable_id: Scalars['Int']['input'];
  likeable_type?: InputMaybe<Scalars['String']['input']>;
};

/** mutation root */
export type Mutation_RootUpsert_TagsArgs = {
  id: Scalars['bigint']['input'];
  tags: Array<InputMaybe<BasicTag>>;
  type: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootUpsert_User_Book_ReadsArgs = {
  datesRead: Array<InputMaybe<DatesReadInput>>;
  user_book_id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootUser_LoginArgs = {
  user: UserLoginInput;
};

/** columns and relationships of "notification_channels" */
export type Notification_Channels = {
  __typename?: 'notification_channels';
  channel: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
};

/** Boolean expression to filter rows from the table "notification_channels". All fields are combined with a logical 'AND'. */
export type Notification_Channels_Bool_Exp = {
  _and?: InputMaybe<Array<Notification_Channels_Bool_Exp>>;
  _not?: InputMaybe<Notification_Channels_Bool_Exp>;
  _or?: InputMaybe<Array<Notification_Channels_Bool_Exp>>;
  channel?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
};

/** Ordering options when selecting data from "notification_channels". */
export type Notification_Channels_Order_By = {
  channel?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** select columns of table "notification_channels" */
export enum Notification_Channels_Select_Column {
  /** column name */
  Channel = 'channel',
  /** column name */
  Id = 'id',
}

/** Streaming cursor of the table "notification_channels" */
export type Notification_Channels_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Notification_Channels_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Notification_Channels_Stream_Cursor_Value_Input = {
  channel?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** columns and relationships of "notification_deliveries" */
export type Notification_Deliveries = {
  __typename?: 'notification_deliveries';
  /** An object relationship */
  channel?: Maybe<Notification_Channels>;
  channel_id: Scalars['Int']['output'];
  id: Scalars['bigint']['output'];
  /** An object relationship */
  notification?: Maybe<Notifications>;
  notification_id: Scalars['Int']['output'];
  read: Scalars['Boolean']['output'];
  read_at?: Maybe<Scalars['timestamp']['output']>;
  sent_at?: Maybe<Scalars['timestamp']['output']>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id: Scalars['Int']['output'];
};

/** aggregated selection of "notification_deliveries" */
export type Notification_Deliveries_Aggregate = {
  __typename?: 'notification_deliveries_aggregate';
  aggregate?: Maybe<Notification_Deliveries_Aggregate_Fields>;
  nodes: Array<Notification_Deliveries>;
};

export type Notification_Deliveries_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Notification_Deliveries_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Notification_Deliveries_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Notification_Deliveries_Aggregate_Bool_Exp_Count>;
};

export type Notification_Deliveries_Aggregate_Bool_Exp_Bool_And = {
  arguments: Notification_Deliveries_Select_Column_Notification_Deliveries_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Notification_Deliveries_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Notification_Deliveries_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Notification_Deliveries_Select_Column_Notification_Deliveries_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Notification_Deliveries_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Notification_Deliveries_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Notification_Deliveries_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Notification_Deliveries_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "notification_deliveries" */
export type Notification_Deliveries_Aggregate_Fields = {
  __typename?: 'notification_deliveries_aggregate_fields';
  avg?: Maybe<Notification_Deliveries_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Notification_Deliveries_Max_Fields>;
  min?: Maybe<Notification_Deliveries_Min_Fields>;
  stddev?: Maybe<Notification_Deliveries_Stddev_Fields>;
  stddev_pop?: Maybe<Notification_Deliveries_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Notification_Deliveries_Stddev_Samp_Fields>;
  sum?: Maybe<Notification_Deliveries_Sum_Fields>;
  var_pop?: Maybe<Notification_Deliveries_Var_Pop_Fields>;
  var_samp?: Maybe<Notification_Deliveries_Var_Samp_Fields>;
  variance?: Maybe<Notification_Deliveries_Variance_Fields>;
};

/** aggregate fields of "notification_deliveries" */
export type Notification_Deliveries_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Notification_Deliveries_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "notification_deliveries" */
export type Notification_Deliveries_Aggregate_Order_By = {
  avg?: InputMaybe<Notification_Deliveries_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Notification_Deliveries_Max_Order_By>;
  min?: InputMaybe<Notification_Deliveries_Min_Order_By>;
  stddev?: InputMaybe<Notification_Deliveries_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Notification_Deliveries_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Notification_Deliveries_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Notification_Deliveries_Sum_Order_By>;
  var_pop?: InputMaybe<Notification_Deliveries_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Notification_Deliveries_Var_Samp_Order_By>;
  variance?: InputMaybe<Notification_Deliveries_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Notification_Deliveries_Avg_Fields = {
  __typename?: 'notification_deliveries_avg_fields';
  channel_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  notification_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "notification_deliveries" */
export type Notification_Deliveries_Avg_Order_By = {
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "notification_deliveries". All fields are combined with a logical 'AND'. */
export type Notification_Deliveries_Bool_Exp = {
  _and?: InputMaybe<Array<Notification_Deliveries_Bool_Exp>>;
  _not?: InputMaybe<Notification_Deliveries_Bool_Exp>;
  _or?: InputMaybe<Array<Notification_Deliveries_Bool_Exp>>;
  channel?: InputMaybe<Notification_Channels_Bool_Exp>;
  channel_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  notification?: InputMaybe<Notifications_Bool_Exp>;
  notification_id?: InputMaybe<Int_Comparison_Exp>;
  read?: InputMaybe<Boolean_Comparison_Exp>;
  read_at?: InputMaybe<Timestamp_Comparison_Exp>;
  sent_at?: InputMaybe<Timestamp_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Notification_Deliveries_Max_Fields = {
  __typename?: 'notification_deliveries_max_fields';
  channel_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  notification_id?: Maybe<Scalars['Int']['output']>;
  read_at?: Maybe<Scalars['timestamp']['output']>;
  sent_at?: Maybe<Scalars['timestamp']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "notification_deliveries" */
export type Notification_Deliveries_Max_Order_By = {
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  read_at?: InputMaybe<Order_By>;
  sent_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Notification_Deliveries_Min_Fields = {
  __typename?: 'notification_deliveries_min_fields';
  channel_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  notification_id?: Maybe<Scalars['Int']['output']>;
  read_at?: Maybe<Scalars['timestamp']['output']>;
  sent_at?: Maybe<Scalars['timestamp']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "notification_deliveries" */
export type Notification_Deliveries_Min_Order_By = {
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  read_at?: InputMaybe<Order_By>;
  sent_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "notification_deliveries" */
export type Notification_Deliveries_Mutation_Response = {
  __typename?: 'notification_deliveries_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Notification_Deliveries>;
};

/** Ordering options when selecting data from "notification_deliveries". */
export type Notification_Deliveries_Order_By = {
  channel?: InputMaybe<Notification_Channels_Order_By>;
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification?: InputMaybe<Notifications_Order_By>;
  notification_id?: InputMaybe<Order_By>;
  read?: InputMaybe<Order_By>;
  read_at?: InputMaybe<Order_By>;
  sent_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: notification_deliveries */
export type Notification_Deliveries_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "notification_deliveries" */
export enum Notification_Deliveries_Select_Column {
  /** column name */
  ChannelId = 'channel_id',
  /** column name */
  Id = 'id',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  Read = 'read',
  /** column name */
  ReadAt = 'read_at',
  /** column name */
  SentAt = 'sent_at',
  /** column name */
  UserId = 'user_id',
}

/** select "notification_deliveries_aggregate_bool_exp_bool_and_arguments_columns" columns of table "notification_deliveries" */
export enum Notification_Deliveries_Select_Column_Notification_Deliveries_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Read = 'read',
}

/** select "notification_deliveries_aggregate_bool_exp_bool_or_arguments_columns" columns of table "notification_deliveries" */
export enum Notification_Deliveries_Select_Column_Notification_Deliveries_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Read = 'read',
}

/** input type for updating data in table "notification_deliveries" */
export type Notification_Deliveries_Set_Input = {
  read?: InputMaybe<Scalars['Boolean']['input']>;
  read_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Notification_Deliveries_Stddev_Fields = {
  __typename?: 'notification_deliveries_stddev_fields';
  channel_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  notification_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "notification_deliveries" */
export type Notification_Deliveries_Stddev_Order_By = {
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Notification_Deliveries_Stddev_Pop_Fields = {
  __typename?: 'notification_deliveries_stddev_pop_fields';
  channel_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  notification_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "notification_deliveries" */
export type Notification_Deliveries_Stddev_Pop_Order_By = {
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Notification_Deliveries_Stddev_Samp_Fields = {
  __typename?: 'notification_deliveries_stddev_samp_fields';
  channel_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  notification_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "notification_deliveries" */
export type Notification_Deliveries_Stddev_Samp_Order_By = {
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "notification_deliveries" */
export type Notification_Deliveries_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Notification_Deliveries_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Notification_Deliveries_Stream_Cursor_Value_Input = {
  channel_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  notification_id?: InputMaybe<Scalars['Int']['input']>;
  read?: InputMaybe<Scalars['Boolean']['input']>;
  read_at?: InputMaybe<Scalars['timestamp']['input']>;
  sent_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Notification_Deliveries_Sum_Fields = {
  __typename?: 'notification_deliveries_sum_fields';
  channel_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  notification_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "notification_deliveries" */
export type Notification_Deliveries_Sum_Order_By = {
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

export type Notification_Deliveries_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Notification_Deliveries_Set_Input>;
  /** filter the rows which have to be updated */
  where: Notification_Deliveries_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Notification_Deliveries_Var_Pop_Fields = {
  __typename?: 'notification_deliveries_var_pop_fields';
  channel_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  notification_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "notification_deliveries" */
export type Notification_Deliveries_Var_Pop_Order_By = {
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Notification_Deliveries_Var_Samp_Fields = {
  __typename?: 'notification_deliveries_var_samp_fields';
  channel_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  notification_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "notification_deliveries" */
export type Notification_Deliveries_Var_Samp_Order_By = {
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Notification_Deliveries_Variance_Fields = {
  __typename?: 'notification_deliveries_variance_fields';
  channel_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  notification_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "notification_deliveries" */
export type Notification_Deliveries_Variance_Order_By = {
  channel_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "notification_settings" */
export type Notification_Settings = {
  __typename?: 'notification_settings';
  channel_ids: Scalars['json']['output'];
  id: Scalars['bigint']['output'];
  notification_type_id: Scalars['Int']['output'];
  /** An object relationship */
  user?: Maybe<Users>;
  user_id: Scalars['Int']['output'];
};

/** columns and relationships of "notification_settings" */
export type Notification_SettingsChannel_IdsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** order by aggregate values of table "notification_settings" */
export type Notification_Settings_Aggregate_Order_By = {
  avg?: InputMaybe<Notification_Settings_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Notification_Settings_Max_Order_By>;
  min?: InputMaybe<Notification_Settings_Min_Order_By>;
  stddev?: InputMaybe<Notification_Settings_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Notification_Settings_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Notification_Settings_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Notification_Settings_Sum_Order_By>;
  var_pop?: InputMaybe<Notification_Settings_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Notification_Settings_Var_Samp_Order_By>;
  variance?: InputMaybe<Notification_Settings_Variance_Order_By>;
};

/** order by avg() on columns of table "notification_settings" */
export type Notification_Settings_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "notification_settings". All fields are combined with a logical 'AND'. */
export type Notification_Settings_Bool_Exp = {
  _and?: InputMaybe<Array<Notification_Settings_Bool_Exp>>;
  _not?: InputMaybe<Notification_Settings_Bool_Exp>;
  _or?: InputMaybe<Array<Notification_Settings_Bool_Exp>>;
  channel_ids?: InputMaybe<Json_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  notification_type_id?: InputMaybe<Int_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "notification_settings" */
export enum Notification_Settings_Constraint {
  /** unique or primary key constraint on columns "id" */
  NotificationSettingsPkey = 'notification_settings_pkey',
}

/** input type for inserting data into table "notification_settings" */
export type Notification_Settings_Insert_Input = {
  channel_ids?: InputMaybe<Scalars['json']['input']>;
  notification_type_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by max() on columns of table "notification_settings" */
export type Notification_Settings_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "notification_settings" */
export type Notification_Settings_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "notification_settings" */
export type Notification_Settings_Mutation_Response = {
  __typename?: 'notification_settings_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Notification_Settings>;
};

/** on_conflict condition type for table "notification_settings" */
export type Notification_Settings_On_Conflict = {
  constraint: Notification_Settings_Constraint;
  update_columns?: Array<Notification_Settings_Update_Column>;
  where?: InputMaybe<Notification_Settings_Bool_Exp>;
};

/** Ordering options when selecting data from "notification_settings". */
export type Notification_Settings_Order_By = {
  channel_ids?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: notification_settings */
export type Notification_Settings_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "notification_settings" */
export enum Notification_Settings_Select_Column {
  /** column name */
  ChannelIds = 'channel_ids',
  /** column name */
  Id = 'id',
  /** column name */
  NotificationTypeId = 'notification_type_id',
  /** column name */
  UserId = 'user_id',
}

/** input type for updating data in table "notification_settings" */
export type Notification_Settings_Set_Input = {
  channel_ids?: InputMaybe<Scalars['json']['input']>;
};

/** order by stddev() on columns of table "notification_settings" */
export type Notification_Settings_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "notification_settings" */
export type Notification_Settings_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "notification_settings" */
export type Notification_Settings_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "notification_settings" */
export type Notification_Settings_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Notification_Settings_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Notification_Settings_Stream_Cursor_Value_Input = {
  channel_ids?: InputMaybe<Scalars['json']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  notification_type_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "notification_settings" */
export type Notification_Settings_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** update columns of table "notification_settings" */
export enum Notification_Settings_Update_Column {
  /** column name */
  ChannelIds = 'channel_ids',
}

export type Notification_Settings_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Notification_Settings_Set_Input>;
  /** filter the rows which have to be updated */
  where: Notification_Settings_Bool_Exp;
};

/** order by var_pop() on columns of table "notification_settings" */
export type Notification_Settings_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "notification_settings" */
export type Notification_Settings_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "notification_settings" */
export type Notification_Settings_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "notification_types" */
export type Notification_Types = {
  __typename?: 'notification_types';
  active?: Maybe<Scalars['Boolean']['output']>;
  default_channel_ids: Scalars['json']['output'];
  default_priority?: Maybe<Scalars['Int']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  /** fetch data from the table: "notification_settings" */
  notification_settings: Array<Notification_Settings>;
  uid: Scalars['String']['output'];
};

/** columns and relationships of "notification_types" */
export type Notification_TypesDefault_Channel_IdsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "notification_types" */
export type Notification_TypesNotification_SettingsArgs = {
  distinct_on?: InputMaybe<Array<Notification_Settings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Settings_Order_By>>;
  where?: InputMaybe<Notification_Settings_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "notification_types". All fields are combined with a logical 'AND'. */
export type Notification_Types_Bool_Exp = {
  _and?: InputMaybe<Array<Notification_Types_Bool_Exp>>;
  _not?: InputMaybe<Notification_Types_Bool_Exp>;
  _or?: InputMaybe<Array<Notification_Types_Bool_Exp>>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  default_channel_ids?: InputMaybe<Json_Comparison_Exp>;
  default_priority?: InputMaybe<Int_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  notification_settings?: InputMaybe<Notification_Settings_Bool_Exp>;
  uid?: InputMaybe<String_Comparison_Exp>;
};

/** Ordering options when selecting data from "notification_types". */
export type Notification_Types_Order_By = {
  active?: InputMaybe<Order_By>;
  default_channel_ids?: InputMaybe<Order_By>;
  default_priority?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  notification_settings_aggregate?: InputMaybe<Notification_Settings_Aggregate_Order_By>;
  uid?: InputMaybe<Order_By>;
};

/** select columns of table "notification_types" */
export enum Notification_Types_Select_Column {
  /** column name */
  Active = 'active',
  /** column name */
  DefaultChannelIds = 'default_channel_ids',
  /** column name */
  DefaultPriority = 'default_priority',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Uid = 'uid',
}

/** Streaming cursor of the table "notification_types" */
export type Notification_Types_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Notification_Types_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Notification_Types_Stream_Cursor_Value_Input = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  default_channel_ids?: InputMaybe<Scalars['json']['input']>;
  default_priority?: InputMaybe<Scalars['Int']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  uid?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "notifications" */
export type Notifications = {
  __typename?: 'notifications';
  created_at: Scalars['timestamptz']['output'];
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  link?: Maybe<Scalars['String']['output']>;
  link_text?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  notification_deliveries: Array<Notification_Deliveries>;
  /** An aggregate relationship */
  notification_deliveries_aggregate: Notification_Deliveries_Aggregate;
  notification_type_id: Scalars['Int']['output'];
  /** An object relationship */
  notifierUser?: Maybe<Users>;
  notifier_user_id: Scalars['Int']['output'];
  priority?: Maybe<Scalars['Int']['output']>;
  title: Scalars['String']['output'];
  uid: Scalars['String']['output'];
};

/** columns and relationships of "notifications" */
export type NotificationsNotification_DeliveriesArgs = {
  distinct_on?: InputMaybe<Array<Notification_Deliveries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Deliveries_Order_By>>;
  where?: InputMaybe<Notification_Deliveries_Bool_Exp>;
};

/** columns and relationships of "notifications" */
export type NotificationsNotification_Deliveries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Notification_Deliveries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Deliveries_Order_By>>;
  where?: InputMaybe<Notification_Deliveries_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "notifications". All fields are combined with a logical 'AND'. */
export type Notifications_Bool_Exp = {
  _and?: InputMaybe<Array<Notifications_Bool_Exp>>;
  _not?: InputMaybe<Notifications_Bool_Exp>;
  _or?: InputMaybe<Array<Notifications_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  link?: InputMaybe<String_Comparison_Exp>;
  link_text?: InputMaybe<String_Comparison_Exp>;
  notification_deliveries?: InputMaybe<Notification_Deliveries_Bool_Exp>;
  notification_deliveries_aggregate?: InputMaybe<Notification_Deliveries_Aggregate_Bool_Exp>;
  notification_type_id?: InputMaybe<Int_Comparison_Exp>;
  notifierUser?: InputMaybe<Users_Bool_Exp>;
  notifier_user_id?: InputMaybe<Int_Comparison_Exp>;
  priority?: InputMaybe<Int_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  uid?: InputMaybe<String_Comparison_Exp>;
};

/** Ordering options when selecting data from "notifications". */
export type Notifications_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  link_text?: InputMaybe<Order_By>;
  notification_deliveries_aggregate?: InputMaybe<Notification_Deliveries_Aggregate_Order_By>;
  notification_type_id?: InputMaybe<Order_By>;
  notifierUser?: InputMaybe<Users_Order_By>;
  notifier_user_id?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  uid?: InputMaybe<Order_By>;
};

/** select columns of table "notifications" */
export enum Notifications_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Link = 'link',
  /** column name */
  LinkText = 'link_text',
  /** column name */
  NotificationTypeId = 'notification_type_id',
  /** column name */
  NotifierUserId = 'notifier_user_id',
  /** column name */
  Priority = 'priority',
  /** column name */
  Title = 'title',
  /** column name */
  Uid = 'uid',
}

/** Streaming cursor of the table "notifications" */
export type Notifications_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Notifications_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Notifications_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
  link_text?: InputMaybe<Scalars['String']['input']>;
  notification_type_id?: InputMaybe<Scalars['Int']['input']>;
  notifier_user_id?: InputMaybe<Scalars['Int']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  uid?: InputMaybe<Scalars['String']['input']>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['numeric']['input']>;
  _gt?: InputMaybe<Scalars['numeric']['input']>;
  _gte?: InputMaybe<Scalars['numeric']['input']>;
  _in?: InputMaybe<Array<Scalars['numeric']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['numeric']['input']>;
  _lte?: InputMaybe<Scalars['numeric']['input']>;
  _neq?: InputMaybe<Scalars['numeric']['input']>;
  _nin?: InputMaybe<Array<Scalars['numeric']['input']>>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last',
}

/** columns and relationships of "platforms" */
export type Platforms = {
  __typename?: 'platforms';
  /** An array relationship */
  book_mappings: Array<Book_Mappings>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  url?: Maybe<Scalars['String']['output']>;
};

/** columns and relationships of "platforms" */
export type PlatformsBook_MappingsArgs = {
  distinct_on?: InputMaybe<Array<Book_Mappings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Mappings_Order_By>>;
  where?: InputMaybe<Book_Mappings_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "platforms". All fields are combined with a logical 'AND'. */
export type Platforms_Bool_Exp = {
  _and?: InputMaybe<Array<Platforms_Bool_Exp>>;
  _not?: InputMaybe<Platforms_Bool_Exp>;
  _or?: InputMaybe<Array<Platforms_Bool_Exp>>;
  book_mappings?: InputMaybe<Book_Mappings_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
};

/** Ordering options when selecting data from "platforms". */
export type Platforms_Order_By = {
  book_mappings_aggregate?: InputMaybe<Book_Mappings_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** select columns of table "platforms" */
export enum Platforms_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Url = 'url',
}

/** Streaming cursor of the table "platforms" */
export type Platforms_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Platforms_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Platforms_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "privacy_settings" */
export type Privacy_Settings = {
  __typename?: 'privacy_settings';
  /** An array relationship */
  activities: Array<Activities>;
  id: Scalars['Int']['output'];
  /** An array relationship */
  lists: Array<Lists>;
  /** An aggregate relationship */
  lists_aggregate: Lists_Aggregate;
  /** An array relationship */
  prompts: Array<Prompts>;
  setting: Scalars['String']['output'];
  /** An array relationship */
  user_books: Array<User_Books>;
  /** An aggregate relationship */
  user_books_aggregate: User_Books_Aggregate;
  /** An array relationship */
  users: Array<Users>;
  /** An array relationship */
  users_by_activity: Array<Users>;
};

/** columns and relationships of "privacy_settings" */
export type Privacy_SettingsActivitiesArgs = {
  distinct_on?: InputMaybe<Array<Activities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Activities_Order_By>>;
  where?: InputMaybe<Activities_Bool_Exp>;
};

/** columns and relationships of "privacy_settings" */
export type Privacy_SettingsListsArgs = {
  distinct_on?: InputMaybe<Array<Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Lists_Order_By>>;
  where?: InputMaybe<Lists_Bool_Exp>;
};

/** columns and relationships of "privacy_settings" */
export type Privacy_SettingsLists_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Lists_Order_By>>;
  where?: InputMaybe<Lists_Bool_Exp>;
};

/** columns and relationships of "privacy_settings" */
export type Privacy_SettingsPromptsArgs = {
  distinct_on?: InputMaybe<Array<Prompts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompts_Order_By>>;
  where?: InputMaybe<Prompts_Bool_Exp>;
};

/** columns and relationships of "privacy_settings" */
export type Privacy_SettingsUser_BooksArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** columns and relationships of "privacy_settings" */
export type Privacy_SettingsUser_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** columns and relationships of "privacy_settings" */
export type Privacy_SettingsUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};

/** columns and relationships of "privacy_settings" */
export type Privacy_SettingsUsers_By_ActivityArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "privacy_settings". All fields are combined with a logical 'AND'. */
export type Privacy_Settings_Bool_Exp = {
  _and?: InputMaybe<Array<Privacy_Settings_Bool_Exp>>;
  _not?: InputMaybe<Privacy_Settings_Bool_Exp>;
  _or?: InputMaybe<Array<Privacy_Settings_Bool_Exp>>;
  activities?: InputMaybe<Activities_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  lists?: InputMaybe<Lists_Bool_Exp>;
  lists_aggregate?: InputMaybe<Lists_Aggregate_Bool_Exp>;
  prompts?: InputMaybe<Prompts_Bool_Exp>;
  setting?: InputMaybe<String_Comparison_Exp>;
  user_books?: InputMaybe<User_Books_Bool_Exp>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Bool_Exp>;
  users?: InputMaybe<Users_Bool_Exp>;
  users_by_activity?: InputMaybe<Users_Bool_Exp>;
};

/** Ordering options when selecting data from "privacy_settings". */
export type Privacy_Settings_Order_By = {
  activities_aggregate?: InputMaybe<Activities_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  lists_aggregate?: InputMaybe<Lists_Aggregate_Order_By>;
  prompts_aggregate?: InputMaybe<Prompts_Aggregate_Order_By>;
  setting?: InputMaybe<Order_By>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Order_By>;
  users_aggregate?: InputMaybe<Users_Aggregate_Order_By>;
  users_by_activity_aggregate?: InputMaybe<Users_Aggregate_Order_By>;
};

/** select columns of table "privacy_settings" */
export enum Privacy_Settings_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Setting = 'setting',
}

/** Streaming cursor of the table "privacy_settings" */
export type Privacy_Settings_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Privacy_Settings_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Privacy_Settings_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  setting?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "prompt_answers" */
export type Prompt_Answers = {
  __typename?: 'prompt_answers';
  /** An object relationship */
  book: Books;
  book_id: Scalars['Int']['output'];
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  merged_at?: Maybe<Scalars['timestamp']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  prompt: Prompts;
  /** An object relationship */
  prompt_book?: Maybe<Prompt_Books_Summary>;
  prompt_id: Scalars['Int']['output'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
};

/** aggregated selection of "prompt_answers" */
export type Prompt_Answers_Aggregate = {
  __typename?: 'prompt_answers_aggregate';
  aggregate?: Maybe<Prompt_Answers_Aggregate_Fields>;
  nodes: Array<Prompt_Answers>;
};

export type Prompt_Answers_Aggregate_Bool_Exp = {
  count?: InputMaybe<Prompt_Answers_Aggregate_Bool_Exp_Count>;
};

export type Prompt_Answers_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Prompt_Answers_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "prompt_answers" */
export type Prompt_Answers_Aggregate_Fields = {
  __typename?: 'prompt_answers_aggregate_fields';
  avg?: Maybe<Prompt_Answers_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Prompt_Answers_Max_Fields>;
  min?: Maybe<Prompt_Answers_Min_Fields>;
  stddev?: Maybe<Prompt_Answers_Stddev_Fields>;
  stddev_pop?: Maybe<Prompt_Answers_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Prompt_Answers_Stddev_Samp_Fields>;
  sum?: Maybe<Prompt_Answers_Sum_Fields>;
  var_pop?: Maybe<Prompt_Answers_Var_Pop_Fields>;
  var_samp?: Maybe<Prompt_Answers_Var_Samp_Fields>;
  variance?: Maybe<Prompt_Answers_Variance_Fields>;
};

/** aggregate fields of "prompt_answers" */
export type Prompt_Answers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "prompt_answers" */
export type Prompt_Answers_Aggregate_Order_By = {
  avg?: InputMaybe<Prompt_Answers_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Prompt_Answers_Max_Order_By>;
  min?: InputMaybe<Prompt_Answers_Min_Order_By>;
  stddev?: InputMaybe<Prompt_Answers_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Prompt_Answers_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Prompt_Answers_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Prompt_Answers_Sum_Order_By>;
  var_pop?: InputMaybe<Prompt_Answers_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Prompt_Answers_Var_Samp_Order_By>;
  variance?: InputMaybe<Prompt_Answers_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Prompt_Answers_Avg_Fields = {
  __typename?: 'prompt_answers_avg_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  prompt_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "prompt_answers" */
export type Prompt_Answers_Avg_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "prompt_answers". All fields are combined with a logical 'AND'. */
export type Prompt_Answers_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_Answers_Bool_Exp>>;
  _not?: InputMaybe<Prompt_Answers_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_Answers_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  merged_at?: InputMaybe<Timestamp_Comparison_Exp>;
  original_book_id?: InputMaybe<Int_Comparison_Exp>;
  prompt?: InputMaybe<Prompts_Bool_Exp>;
  prompt_book?: InputMaybe<Prompt_Books_Summary_Bool_Exp>;
  prompt_id?: InputMaybe<Int_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Prompt_Answers_Max_Fields = {
  __typename?: 'prompt_answers_max_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  merged_at?: Maybe<Scalars['timestamp']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  prompt_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "prompt_answers" */
export type Prompt_Answers_Max_Order_By = {
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  merged_at?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Prompt_Answers_Min_Fields = {
  __typename?: 'prompt_answers_min_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  merged_at?: Maybe<Scalars['timestamp']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  prompt_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "prompt_answers" */
export type Prompt_Answers_Min_Order_By = {
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  merged_at?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "prompt_answers" */
export type Prompt_Answers_Mutation_Response = {
  __typename?: 'prompt_answers_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompt_Answers>;
};

/** Ordering options when selecting data from "prompt_answers". */
export type Prompt_Answers_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  merged_at?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt?: InputMaybe<Prompts_Order_By>;
  prompt_book?: InputMaybe<Prompt_Books_Summary_Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: prompt_answers */
export type Prompt_Answers_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "prompt_answers" */
export enum Prompt_Answers_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  MergedAt = 'merged_at',
  /** column name */
  OriginalBookId = 'original_book_id',
  /** column name */
  PromptId = 'prompt_id',
  /** column name */
  UserId = 'user_id',
}

/** input type for updating data in table "prompt_answers" */
export type Prompt_Answers_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Prompt_Answers_Stddev_Fields = {
  __typename?: 'prompt_answers_stddev_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  prompt_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "prompt_answers" */
export type Prompt_Answers_Stddev_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Prompt_Answers_Stddev_Pop_Fields = {
  __typename?: 'prompt_answers_stddev_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  prompt_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "prompt_answers" */
export type Prompt_Answers_Stddev_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Prompt_Answers_Stddev_Samp_Fields = {
  __typename?: 'prompt_answers_stddev_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  prompt_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "prompt_answers" */
export type Prompt_Answers_Stddev_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "prompt_answers" */
export type Prompt_Answers_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_Answers_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_Answers_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  merged_at?: InputMaybe<Scalars['timestamp']['input']>;
  original_book_id?: InputMaybe<Scalars['Int']['input']>;
  prompt_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Prompt_Answers_Sum_Fields = {
  __typename?: 'prompt_answers_sum_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  prompt_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "prompt_answers" */
export type Prompt_Answers_Sum_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

export type Prompt_Answers_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Prompt_Answers_Set_Input>;
  /** filter the rows which have to be updated */
  where: Prompt_Answers_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Prompt_Answers_Var_Pop_Fields = {
  __typename?: 'prompt_answers_var_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  prompt_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "prompt_answers" */
export type Prompt_Answers_Var_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Prompt_Answers_Var_Samp_Fields = {
  __typename?: 'prompt_answers_var_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  prompt_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "prompt_answers" */
export type Prompt_Answers_Var_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Prompt_Answers_Variance_Fields = {
  __typename?: 'prompt_answers_variance_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  prompt_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "prompt_answers" */
export type Prompt_Answers_Variance_Order_By = {
  book_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "prompt_books_summary" */
export type Prompt_Books_Summary = {
  __typename?: 'prompt_books_summary';
  answers_count?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  book?: Maybe<Books>;
  book_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  prompt?: Maybe<Prompts>;
  prompt_id?: Maybe<Scalars['Int']['output']>;
};

/** order by aggregate values of table "prompt_books_summary" */
export type Prompt_Books_Summary_Aggregate_Order_By = {
  avg?: InputMaybe<Prompt_Books_Summary_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Prompt_Books_Summary_Max_Order_By>;
  min?: InputMaybe<Prompt_Books_Summary_Min_Order_By>;
  stddev?: InputMaybe<Prompt_Books_Summary_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Prompt_Books_Summary_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Prompt_Books_Summary_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Prompt_Books_Summary_Sum_Order_By>;
  var_pop?: InputMaybe<Prompt_Books_Summary_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Prompt_Books_Summary_Var_Samp_Order_By>;
  variance?: InputMaybe<Prompt_Books_Summary_Variance_Order_By>;
};

/** order by avg() on columns of table "prompt_books_summary" */
export type Prompt_Books_Summary_Avg_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "prompt_books_summary". All fields are combined with a logical 'AND'. */
export type Prompt_Books_Summary_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_Books_Summary_Bool_Exp>>;
  _not?: InputMaybe<Prompt_Books_Summary_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_Books_Summary_Bool_Exp>>;
  answers_count?: InputMaybe<Bigint_Comparison_Exp>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  prompt?: InputMaybe<Prompts_Bool_Exp>;
  prompt_id?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "prompt_books_summary" */
export type Prompt_Books_Summary_Max_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "prompt_books_summary" */
export type Prompt_Books_Summary_Min_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "prompt_books_summary". */
export type Prompt_Books_Summary_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt?: InputMaybe<Prompts_Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** select columns of table "prompt_books_summary" */
export enum Prompt_Books_Summary_Select_Column {
  /** column name */
  AnswersCount = 'answers_count',
  /** column name */
  BookId = 'book_id',
  /** column name */
  PromptId = 'prompt_id',
}

/** order by stddev() on columns of table "prompt_books_summary" */
export type Prompt_Books_Summary_Stddev_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "prompt_books_summary" */
export type Prompt_Books_Summary_Stddev_Pop_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "prompt_books_summary" */
export type Prompt_Books_Summary_Stddev_Samp_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "prompt_books_summary" */
export type Prompt_Books_Summary_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_Books_Summary_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_Books_Summary_Stream_Cursor_Value_Input = {
  answers_count?: InputMaybe<Scalars['bigint']['input']>;
  book_id?: InputMaybe<Scalars['Int']['input']>;
  prompt_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "prompt_books_summary" */
export type Prompt_Books_Summary_Sum_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "prompt_books_summary" */
export type Prompt_Books_Summary_Var_Pop_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "prompt_books_summary" */
export type Prompt_Books_Summary_Var_Samp_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "prompt_books_summary" */
export type Prompt_Books_Summary_Variance_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  book_id?: InputMaybe<Order_By>;
  prompt_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "prompts" */
export type Prompts = {
  __typename?: 'prompts';
  answers_count: Scalars['Int']['output'];
  books_count: Scalars['Int']['output'];
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  featured: Scalars['Boolean']['output'];
  /** An array relationship */
  followed_prompts: Array<Followed_Prompts>;
  /** An array relationship */
  followers: Array<Followed_Users>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  privacy_setting: Privacy_Settings;
  privacy_setting_id: Scalars['Int']['output'];
  /** An array relationship */
  prompt_answers: Array<Prompt_Answers>;
  /** An aggregate relationship */
  prompt_answers_aggregate: Prompt_Answers_Aggregate;
  /** An array relationship */
  prompt_books: Array<Prompt_Books_Summary>;
  question: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
  users_count: Scalars['Int']['output'];
};

/** columns and relationships of "prompts" */
export type PromptsFollowed_PromptsArgs = {
  distinct_on?: InputMaybe<Array<Followed_Prompts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Prompts_Order_By>>;
  where?: InputMaybe<Followed_Prompts_Bool_Exp>;
};

/** columns and relationships of "prompts" */
export type PromptsFollowersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

/** columns and relationships of "prompts" */
export type PromptsPrompt_AnswersArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Answers_Order_By>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

/** columns and relationships of "prompts" */
export type PromptsPrompt_Answers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Answers_Order_By>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

/** columns and relationships of "prompts" */
export type PromptsPrompt_BooksArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Books_Summary_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Books_Summary_Order_By>>;
  where?: InputMaybe<Prompt_Books_Summary_Bool_Exp>;
};

/** order by aggregate values of table "prompts" */
export type Prompts_Aggregate_Order_By = {
  avg?: InputMaybe<Prompts_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Prompts_Max_Order_By>;
  min?: InputMaybe<Prompts_Min_Order_By>;
  stddev?: InputMaybe<Prompts_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Prompts_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Prompts_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Prompts_Sum_Order_By>;
  var_pop?: InputMaybe<Prompts_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Prompts_Var_Samp_Order_By>;
  variance?: InputMaybe<Prompts_Variance_Order_By>;
};

/** order by avg() on columns of table "prompts" */
export type Prompts_Avg_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "prompts". All fields are combined with a logical 'AND'. */
export type Prompts_Bool_Exp = {
  _and?: InputMaybe<Array<Prompts_Bool_Exp>>;
  _not?: InputMaybe<Prompts_Bool_Exp>;
  _or?: InputMaybe<Array<Prompts_Bool_Exp>>;
  answers_count?: InputMaybe<Int_Comparison_Exp>;
  books_count?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  featured?: InputMaybe<Boolean_Comparison_Exp>;
  followed_prompts?: InputMaybe<Followed_Prompts_Bool_Exp>;
  followers?: InputMaybe<Followed_Users_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  privacy_setting?: InputMaybe<Privacy_Settings_Bool_Exp>;
  privacy_setting_id?: InputMaybe<Int_Comparison_Exp>;
  prompt_answers?: InputMaybe<Prompt_Answers_Bool_Exp>;
  prompt_answers_aggregate?: InputMaybe<Prompt_Answers_Aggregate_Bool_Exp>;
  prompt_books?: InputMaybe<Prompt_Books_Summary_Bool_Exp>;
  question?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
  users_count?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "prompts" */
export type Prompts_Max_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  question?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "prompts" */
export type Prompts_Min_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  question?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "prompts" */
export type Prompts_Mutation_Response = {
  __typename?: 'prompts_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompts>;
};

/** Ordering options when selecting data from "prompts". */
export type Prompts_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  featured?: InputMaybe<Order_By>;
  followed_prompts_aggregate?: InputMaybe<Followed_Prompts_Aggregate_Order_By>;
  followers_aggregate?: InputMaybe<Followed_Users_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting?: InputMaybe<Privacy_Settings_Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  prompt_answers_aggregate?: InputMaybe<Prompt_Answers_Aggregate_Order_By>;
  prompt_books_aggregate?: InputMaybe<Prompt_Books_Summary_Aggregate_Order_By>;
  question?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** select columns of table "prompts" */
export enum Prompts_Select_Column {
  /** column name */
  AnswersCount = 'answers_count',
  /** column name */
  BooksCount = 'books_count',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Featured = 'featured',
  /** column name */
  Id = 'id',
  /** column name */
  PrivacySettingId = 'privacy_setting_id',
  /** column name */
  Question = 'question',
  /** column name */
  Slug = 'slug',
  /** column name */
  UserId = 'user_id',
  /** column name */
  UsersCount = 'users_count',
}

/** order by stddev() on columns of table "prompts" */
export type Prompts_Stddev_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "prompts" */
export type Prompts_Stddev_Pop_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "prompts" */
export type Prompts_Stddev_Samp_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "prompts" */
export type Prompts_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompts_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompts_Stream_Cursor_Value_Input = {
  answers_count?: InputMaybe<Scalars['Int']['input']>;
  books_count?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  featured?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  question?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
  users_count?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "prompts" */
export type Prompts_Sum_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "prompts" */
export type Prompts_Var_Pop_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "prompts" */
export type Prompts_Var_Samp_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "prompts" */
export type Prompts_Variance_Order_By = {
  answers_count?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_count?: InputMaybe<Order_By>;
};

/** columns and relationships of "publishers" */
export type Publishers = {
  __typename?: 'publishers';
  canonical_id?: Maybe<Scalars['Int']['output']>;
  created_at: Scalars['timestamp']['output'];
  /** An array relationship */
  editions: Array<Editions>;
  editions_count: Scalars['Int']['output'];
  id: Scalars['bigint']['output'];
  locked: Scalars['Boolean']['output'];
  name?: Maybe<Scalars['String']['output']>;
  parent_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  parent_publisher?: Maybe<Publishers>;
  slug: Scalars['String']['output'];
  state: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "publishers" */
export type PublishersEditionsArgs = {
  distinct_on?: InputMaybe<Array<Editions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Editions_Order_By>>;
  where?: InputMaybe<Editions_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "publishers". All fields are combined with a logical 'AND'. */
export type Publishers_Bool_Exp = {
  _and?: InputMaybe<Array<Publishers_Bool_Exp>>;
  _not?: InputMaybe<Publishers_Bool_Exp>;
  _or?: InputMaybe<Array<Publishers_Bool_Exp>>;
  canonical_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  editions?: InputMaybe<Editions_Bool_Exp>;
  editions_count?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  locked?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  parent_id?: InputMaybe<Int_Comparison_Exp>;
  parent_publisher?: InputMaybe<Publishers_Bool_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** Ordering options when selecting data from "publishers". */
export type Publishers_Order_By = {
  canonical_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  editions_aggregate?: InputMaybe<Editions_Aggregate_Order_By>;
  editions_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locked?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parent_id?: InputMaybe<Order_By>;
  parent_publisher?: InputMaybe<Publishers_Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "publishers" */
export enum Publishers_Select_Column {
  /** column name */
  CanonicalId = 'canonical_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EditionsCount = 'editions_count',
  /** column name */
  Id = 'id',
  /** column name */
  Locked = 'locked',
  /** column name */
  Name = 'name',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
}

/** Streaming cursor of the table "publishers" */
export type Publishers_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Publishers_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Publishers_Stream_Cursor_Value_Input = {
  canonical_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  editions_count?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  parent_id?: InputMaybe<Scalars['Int']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** An array relationship */
  activities: Array<Activities>;
  /** fetch data from the table: "activities" using primary key columns */
  activities_by_pk?: Maybe<Activities>;
  /** execute function "activity_feed" which returns "activities" */
  activity_feed: Array<Activities>;
  /** execute function "activity_foryou_feed" which returns "activities" */
  activity_foryou_feed: Array<Activities>;
  /** fetch data from the table: "authors" */
  authors: Array<Authors>;
  /** fetch data from the table: "authors" using primary key columns */
  authors_by_pk?: Maybe<Authors>;
  /** fetch data from the table: "book_categories" */
  book_categories: Array<Book_Categories>;
  /** fetch data from the table: "book_categories" using primary key columns */
  book_categories_by_pk?: Maybe<Book_Categories>;
  /** An array relationship */
  book_characters: Array<Book_Characters>;
  /** fetch data from the table: "book_characters" using primary key columns */
  book_characters_by_pk?: Maybe<Book_Characters>;
  /** fetch data from the table: "book_collections" */
  book_collections: Array<Book_Collections>;
  /** fetch data from the table: "book_collections" using primary key columns */
  book_collections_by_pk?: Maybe<Book_Collections>;
  /** An array relationship */
  book_mappings: Array<Book_Mappings>;
  /** fetch data from the table: "book_mappings" using primary key columns */
  book_mappings_by_pk?: Maybe<Book_Mappings>;
  /** An array relationship */
  book_series: Array<Book_Series>;
  /** An aggregate relationship */
  book_series_aggregate: Book_Series_Aggregate;
  /** fetch data from the table: "book_series" using primary key columns */
  book_series_by_pk?: Maybe<Book_Series>;
  /** fetch data from the table: "book_statuses" */
  book_statuses: Array<Book_Statuses>;
  /** fetch data from the table: "book_statuses" using primary key columns */
  book_statuses_by_pk?: Maybe<Book_Statuses>;
  /** fetch data from the table: "bookles" */
  bookles: Array<Bookles>;
  /** fetch data from the table: "bookles" using primary key columns */
  bookles_by_pk?: Maybe<Bookles>;
  /** An array relationship */
  books: Array<Books>;
  /** An aggregate relationship */
  books_aggregate: Books_Aggregate;
  /** fetch data from the table: "books" using primary key columns */
  books_by_pk?: Maybe<Books>;
  /** books_trending */
  books_trending?: Maybe<TrendingBookType>;
  /** fetch data from the table: "characters" */
  characters: Array<Characters>;
  /** fetch data from the table: "characters" using primary key columns */
  characters_by_pk?: Maybe<Characters>;
  /** An array relationship */
  collection_import_results: Array<Collection_Import_Results>;
  /** fetch data from the table: "collection_import_results" using primary key columns */
  collection_import_results_by_pk?: Maybe<Collection_Import_Results>;
  /** An array relationship */
  collection_imports: Array<Collection_Imports>;
  /** fetch data from the table: "collection_imports" using primary key columns */
  collection_imports_by_pk?: Maybe<Collection_Imports>;
  /** An array relationship */
  contributions: Array<Contributions>;
  /** An aggregate relationship */
  contributions_aggregate: Contributions_Aggregate;
  /** fetch data from the table: "contributions" using primary key columns */
  contributions_by_pk?: Maybe<Contributions>;
  /** fetch data from the table: "countries" */
  countries: Array<Countries>;
  /** fetch data from the table: "countries" using primary key columns */
  countries_by_pk?: Maybe<Countries>;
  /** An array relationship */
  editions: Array<Editions>;
  /** fetch data from the table: "editions" using primary key columns */
  editions_by_pk?: Maybe<Editions>;
  /** fetch data from the table: "flag_statuses" */
  flag_statuses: Array<Flag_Statuses>;
  /** fetch data from the table: "flag_statuses" using primary key columns */
  flag_statuses_by_pk?: Maybe<Flag_Statuses>;
  /** An array relationship */
  followed_lists: Array<Followed_Lists>;
  /** fetch data from the table: "followed_lists" using primary key columns */
  followed_lists_by_pk?: Maybe<Followed_Lists>;
  /** An array relationship */
  followed_prompts: Array<Followed_Prompts>;
  /** fetch data from the table: "followed_prompts" using primary key columns */
  followed_prompts_by_pk?: Maybe<Followed_Prompts>;
  /** fetch data from the table: "followed_user_books" */
  followed_user_books: Array<Followed_User_Books>;
  /** fetch aggregated fields from the table: "followed_user_books" */
  followed_user_books_aggregate: Followed_User_Books_Aggregate;
  /** An array relationship */
  followed_users: Array<Followed_Users>;
  /** fetch data from the table: "followed_users" using primary key columns */
  followed_users_by_pk?: Maybe<Followed_Users>;
  /** fetch data from the table: "following_user_books" */
  following_user_books: Array<Following_User_Books>;
  /** fetch aggregated fields from the table: "following_user_books" */
  following_user_books_aggregate: Following_User_Books_Aggregate;
  /** An array relationship */
  goals: Array<Goals>;
  /** fetch data from the table: "goals" using primary key columns */
  goals_by_pk?: Maybe<Goals>;
  /** An array relationship */
  images: Array<Images>;
  /** fetch data from the table: "images" using primary key columns */
  images_by_pk?: Maybe<Images>;
  /** fetch data from the table: "languages" */
  languages: Array<Languages>;
  /** fetch data from the table: "languages" using primary key columns */
  languages_by_pk?: Maybe<Languages>;
  /** An array relationship */
  likes: Array<Likes>;
  /** fetch data from the table: "likes" using primary key columns */
  likes_by_pk?: Maybe<Likes>;
  /** An array relationship */
  list_books: Array<List_Books>;
  /** An aggregate relationship */
  list_books_aggregate: List_Books_Aggregate;
  /** fetch data from the table: "list_books" using primary key columns */
  list_books_by_pk?: Maybe<List_Books>;
  /** An array relationship */
  lists: Array<Lists>;
  /** An aggregate relationship */
  lists_aggregate: Lists_Aggregate;
  /** fetch data from the table: "lists" using primary key columns */
  lists_by_pk?: Maybe<Lists>;
  /** execute function "me" which returns "users" */
  me: Array<Users>;
  /** newsletter */
  newsletter?: Maybe<NewsletterStatusType>;
  /** fetch data from the table: "notification_channels" */
  notification_channels: Array<Notification_Channels>;
  /** fetch data from the table: "notification_channels" using primary key columns */
  notification_channels_by_pk?: Maybe<Notification_Channels>;
  /** An array relationship */
  notification_deliveries: Array<Notification_Deliveries>;
  /** An aggregate relationship */
  notification_deliveries_aggregate: Notification_Deliveries_Aggregate;
  /** fetch data from the table: "notification_deliveries" using primary key columns */
  notification_deliveries_by_pk?: Maybe<Notification_Deliveries>;
  /** fetch data from the table: "notification_settings" */
  notification_settings: Array<Notification_Settings>;
  /** fetch data from the table: "notification_settings" using primary key columns */
  notification_settings_by_pk?: Maybe<Notification_Settings>;
  /** fetch data from the table: "notification_types" */
  notification_types: Array<Notification_Types>;
  /** fetch data from the table: "notification_types" using primary key columns */
  notification_types_by_pk?: Maybe<Notification_Types>;
  /** fetch data from the table: "notifications" */
  notifications: Array<Notifications>;
  /** fetch data from the table: "notifications" using primary key columns */
  notifications_by_pk?: Maybe<Notifications>;
  /** fetch data from the table: "platforms" */
  platforms: Array<Platforms>;
  /** fetch data from the table: "platforms" using primary key columns */
  platforms_by_pk?: Maybe<Platforms>;
  /** fetch data from the table: "privacy_settings" */
  privacy_settings: Array<Privacy_Settings>;
  /** fetch data from the table: "privacy_settings" using primary key columns */
  privacy_settings_by_pk?: Maybe<Privacy_Settings>;
  /** An array relationship */
  prompt_answers: Array<Prompt_Answers>;
  /** An aggregate relationship */
  prompt_answers_aggregate: Prompt_Answers_Aggregate;
  /** fetch data from the table: "prompt_answers" using primary key columns */
  prompt_answers_by_pk?: Maybe<Prompt_Answers>;
  /** fetch data from the table: "prompt_books_summary" */
  prompt_books_summary: Array<Prompt_Books_Summary>;
  /** An array relationship */
  prompts: Array<Prompts>;
  /** fetch data from the table: "prompts" using primary key columns */
  prompts_by_pk?: Maybe<Prompts>;
  /** fetch data from the table: "publishers" */
  publishers: Array<Publishers>;
  /** fetch data from the table: "publishers" using primary key columns */
  publishers_by_pk?: Maybe<Publishers>;
  /** fetch data from the table: "reading_formats" */
  reading_formats: Array<Reading_Formats>;
  /** fetch data from the table: "reading_formats" using primary key columns */
  reading_formats_by_pk?: Maybe<Reading_Formats>;
  /** An array relationship */
  reading_journals: Array<Reading_Journals>;
  /** fetch data from the table: "reading_journals" using primary key columns */
  reading_journals_by_pk?: Maybe<Reading_Journals>;
  /** fetch data from the table: "reading_journals_summary" */
  reading_journals_summary: Array<Reading_Journals_Summary>;
  /** An array relationship */
  recommendations: Array<Recommendations>;
  /** fetch data from the table: "disco_recommendations" using primary key columns */
  recommendations_by_pk?: Maybe<Recommendations>;
  /** referrals_for_user */
  referrals_for_user?: Maybe<Array<Maybe<ReferralType>>>;
  search?: Maybe<SearchOutput>;
  /** fetch data from the table: "series" */
  series: Array<Series>;
  /** fetch data from the table: "series" using primary key columns */
  series_by_pk?: Maybe<Series>;
  /** subscriptions */
  subscriptions?: Maybe<SubscriptionsType>;
  /** fetch data from the table: "tag_categories" */
  tag_categories: Array<Tag_Categories>;
  /** fetch data from the table: "tag_categories" using primary key columns */
  tag_categories_by_pk?: Maybe<Tag_Categories>;
  /** An array relationship */
  taggable_counts: Array<Taggable_Counts>;
  /** fetch data from the table: "taggable_counts" using primary key columns */
  taggable_counts_by_pk?: Maybe<Taggable_Counts>;
  /** An array relationship */
  taggings: Array<Taggings>;
  /** An aggregate relationship */
  taggings_aggregate: Taggings_Aggregate;
  /** fetch data from the table: "taggings" using primary key columns */
  taggings_by_pk?: Maybe<Taggings>;
  /** An array relationship */
  tags: Array<Tags>;
  /** An aggregate relationship */
  tags_aggregate: Tags_Aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<Tags>;
  /** fetch data from the table: "user_blocks" */
  user_blocks: Array<User_Blocks>;
  /** fetch data from the table: "user_blocks" using primary key columns */
  user_blocks_by_pk?: Maybe<User_Blocks>;
  /** An array relationship */
  user_book_reads: Array<User_Book_Reads>;
  /** An aggregate relationship */
  user_book_reads_aggregate: User_Book_Reads_Aggregate;
  /** fetch data from the table: "user_book_reads" using primary key columns */
  user_book_reads_by_pk?: Maybe<User_Book_Reads>;
  /** fetch data from the table: "user_book_statuses" */
  user_book_statuses: Array<User_Book_Statuses>;
  /** fetch aggregated fields from the table: "user_book_statuses" */
  user_book_statuses_aggregate: User_Book_Statuses_Aggregate;
  /** fetch data from the table: "user_book_statuses" using primary key columns */
  user_book_statuses_by_pk?: Maybe<User_Book_Statuses>;
  /** An array relationship */
  user_books: Array<User_Books>;
  /** An aggregate relationship */
  user_books_aggregate: User_Books_Aggregate;
  /** fetch data from the table: "user_books" using primary key columns */
  user_books_by_pk?: Maybe<User_Books>;
  /** An array relationship */
  user_flags: Array<User_Flags>;
  /** fetch data from the table: "user_flags" using primary key columns */
  user_flags_by_pk?: Maybe<User_Flags>;
  /** fetch data from the table: "user_referrals" */
  user_referrals: Array<User_Referrals>;
  /** fetch data from the table: "user_referrals" using primary key columns */
  user_referrals_by_pk?: Maybe<User_Referrals>;
  /** fetch data from the table: "user_statuses" */
  user_statuses: Array<User_Statuses>;
  /** fetch data from the table: "user_statuses" using primary key columns */
  user_statuses_by_pk?: Maybe<User_Statuses>;
  /** An array relationship */
  users: Array<Users>;
  /** fetch data from the table: "users_aggregate_by_created_at_date" */
  users_aggregate_by_created_at_date: Array<Users_Aggregate_By_Created_At_Date>;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<Users>;
};

export type Query_RootActivitiesArgs = {
  distinct_on?: InputMaybe<Array<Activities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Activities_Order_By>>;
  where?: InputMaybe<Activities_Bool_Exp>;
};

export type Query_RootActivities_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootActivity_FeedArgs = {
  args: Activity_Feed_Args;
  distinct_on?: InputMaybe<Array<Activities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Activities_Order_By>>;
  where?: InputMaybe<Activities_Bool_Exp>;
};

export type Query_RootActivity_Foryou_FeedArgs = {
  args: Activity_Foryou_Feed_Args;
  distinct_on?: InputMaybe<Array<Activities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Activities_Order_By>>;
  where?: InputMaybe<Activities_Bool_Exp>;
};

export type Query_RootAuthorsArgs = {
  distinct_on?: InputMaybe<Array<Authors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authors_Order_By>>;
  where?: InputMaybe<Authors_Bool_Exp>;
};

export type Query_RootAuthors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootBook_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<Book_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Categories_Order_By>>;
  where?: InputMaybe<Book_Categories_Bool_Exp>;
};

export type Query_RootBook_Categories_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootBook_CharactersArgs = {
  distinct_on?: InputMaybe<Array<Book_Characters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Characters_Order_By>>;
  where?: InputMaybe<Book_Characters_Bool_Exp>;
};

export type Query_RootBook_Characters_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootBook_CollectionsArgs = {
  distinct_on?: InputMaybe<Array<Book_Collections_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Collections_Order_By>>;
  where?: InputMaybe<Book_Collections_Bool_Exp>;
};

export type Query_RootBook_Collections_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootBook_MappingsArgs = {
  distinct_on?: InputMaybe<Array<Book_Mappings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Mappings_Order_By>>;
  where?: InputMaybe<Book_Mappings_Bool_Exp>;
};

export type Query_RootBook_Mappings_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootBook_SeriesArgs = {
  distinct_on?: InputMaybe<Array<Book_Series_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Series_Order_By>>;
  where?: InputMaybe<Book_Series_Bool_Exp>;
};

export type Query_RootBook_Series_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Book_Series_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Series_Order_By>>;
  where?: InputMaybe<Book_Series_Bool_Exp>;
};

export type Query_RootBook_Series_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootBook_StatusesArgs = {
  distinct_on?: InputMaybe<Array<Book_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Statuses_Order_By>>;
  where?: InputMaybe<Book_Statuses_Bool_Exp>;
};

export type Query_RootBook_Statuses_By_PkArgs = {
  id: Scalars['smallint']['input'];
};

export type Query_RootBooklesArgs = {
  distinct_on?: InputMaybe<Array<Bookles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Bookles_Order_By>>;
  where?: InputMaybe<Bookles_Bool_Exp>;
};

export type Query_RootBookles_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootBooksArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};

export type Query_RootBooks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};

export type Query_RootBooks_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootBooks_TrendingArgs = {
  from: Scalars['date']['input'];
  limit: Scalars['Int']['input'];
  offset: Scalars['Int']['input'];
  to: Scalars['date']['input'];
};

export type Query_RootCharactersArgs = {
  distinct_on?: InputMaybe<Array<Characters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characters_Order_By>>;
  where?: InputMaybe<Characters_Bool_Exp>;
};

export type Query_RootCharacters_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootCollection_Import_ResultsArgs = {
  distinct_on?: InputMaybe<Array<Collection_Import_Results_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Collection_Import_Results_Order_By>>;
  where?: InputMaybe<Collection_Import_Results_Bool_Exp>;
};

export type Query_RootCollection_Import_Results_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootCollection_ImportsArgs = {
  distinct_on?: InputMaybe<Array<Collection_Imports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Collection_Imports_Order_By>>;
  where?: InputMaybe<Collection_Imports_Bool_Exp>;
};

export type Query_RootCollection_Imports_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootContributionsArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

export type Query_RootContributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

export type Query_RootContributions_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootCountriesArgs = {
  distinct_on?: InputMaybe<Array<Countries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Countries_Order_By>>;
  where?: InputMaybe<Countries_Bool_Exp>;
};

export type Query_RootCountries_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootEditionsArgs = {
  distinct_on?: InputMaybe<Array<Editions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Editions_Order_By>>;
  where?: InputMaybe<Editions_Bool_Exp>;
};

export type Query_RootEditions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootFlag_StatusesArgs = {
  distinct_on?: InputMaybe<Array<Flag_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Flag_Statuses_Order_By>>;
  where?: InputMaybe<Flag_Statuses_Bool_Exp>;
};

export type Query_RootFlag_Statuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootFollowed_ListsArgs = {
  distinct_on?: InputMaybe<Array<Followed_Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Lists_Order_By>>;
  where?: InputMaybe<Followed_Lists_Bool_Exp>;
};

export type Query_RootFollowed_Lists_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootFollowed_PromptsArgs = {
  distinct_on?: InputMaybe<Array<Followed_Prompts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Prompts_Order_By>>;
  where?: InputMaybe<Followed_Prompts_Bool_Exp>;
};

export type Query_RootFollowed_Prompts_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootFollowed_User_BooksArgs = {
  distinct_on?: InputMaybe<Array<Followed_User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_User_Books_Order_By>>;
  where?: InputMaybe<Followed_User_Books_Bool_Exp>;
};

export type Query_RootFollowed_User_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Followed_User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_User_Books_Order_By>>;
  where?: InputMaybe<Followed_User_Books_Bool_Exp>;
};

export type Query_RootFollowed_UsersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

export type Query_RootFollowed_Users_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootFollowing_User_BooksArgs = {
  distinct_on?: InputMaybe<Array<Following_User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Following_User_Books_Order_By>>;
  where?: InputMaybe<Following_User_Books_Bool_Exp>;
};

export type Query_RootFollowing_User_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Following_User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Following_User_Books_Order_By>>;
  where?: InputMaybe<Following_User_Books_Bool_Exp>;
};

export type Query_RootGoalsArgs = {
  distinct_on?: InputMaybe<Array<Goals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Goals_Order_By>>;
  where?: InputMaybe<Goals_Bool_Exp>;
};

export type Query_RootGoals_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootImagesArgs = {
  distinct_on?: InputMaybe<Array<Images_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Images_Order_By>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

export type Query_RootImages_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootLanguagesArgs = {
  distinct_on?: InputMaybe<Array<Languages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Languages_Order_By>>;
  where?: InputMaybe<Languages_Bool_Exp>;
};

export type Query_RootLanguages_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootLikesArgs = {
  distinct_on?: InputMaybe<Array<Likes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Likes_Order_By>>;
  where?: InputMaybe<Likes_Bool_Exp>;
};

export type Query_RootLikes_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootList_BooksArgs = {
  distinct_on?: InputMaybe<Array<List_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<List_Books_Order_By>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

export type Query_RootList_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<List_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<List_Books_Order_By>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

export type Query_RootList_Books_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootListsArgs = {
  distinct_on?: InputMaybe<Array<Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Lists_Order_By>>;
  where?: InputMaybe<Lists_Bool_Exp>;
};

export type Query_RootLists_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Lists_Order_By>>;
  where?: InputMaybe<Lists_Bool_Exp>;
};

export type Query_RootLists_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootMeArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};

export type Query_RootNotification_ChannelsArgs = {
  distinct_on?: InputMaybe<Array<Notification_Channels_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Channels_Order_By>>;
  where?: InputMaybe<Notification_Channels_Bool_Exp>;
};

export type Query_RootNotification_Channels_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootNotification_DeliveriesArgs = {
  distinct_on?: InputMaybe<Array<Notification_Deliveries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Deliveries_Order_By>>;
  where?: InputMaybe<Notification_Deliveries_Bool_Exp>;
};

export type Query_RootNotification_Deliveries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Notification_Deliveries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Deliveries_Order_By>>;
  where?: InputMaybe<Notification_Deliveries_Bool_Exp>;
};

export type Query_RootNotification_Deliveries_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootNotification_SettingsArgs = {
  distinct_on?: InputMaybe<Array<Notification_Settings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Settings_Order_By>>;
  where?: InputMaybe<Notification_Settings_Bool_Exp>;
};

export type Query_RootNotification_Settings_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootNotification_TypesArgs = {
  distinct_on?: InputMaybe<Array<Notification_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Types_Order_By>>;
  where?: InputMaybe<Notification_Types_Bool_Exp>;
};

export type Query_RootNotification_Types_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootNotificationsArgs = {
  distinct_on?: InputMaybe<Array<Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notifications_Order_By>>;
  where?: InputMaybe<Notifications_Bool_Exp>;
};

export type Query_RootNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPlatformsArgs = {
  distinct_on?: InputMaybe<Array<Platforms_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Platforms_Order_By>>;
  where?: InputMaybe<Platforms_Bool_Exp>;
};

export type Query_RootPlatforms_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPrivacy_SettingsArgs = {
  distinct_on?: InputMaybe<Array<Privacy_Settings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Privacy_Settings_Order_By>>;
  where?: InputMaybe<Privacy_Settings_Bool_Exp>;
};

export type Query_RootPrivacy_Settings_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPrompt_AnswersArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Answers_Order_By>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

export type Query_RootPrompt_Answers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Answers_Order_By>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

export type Query_RootPrompt_Answers_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPrompt_Books_SummaryArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Books_Summary_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Books_Summary_Order_By>>;
  where?: InputMaybe<Prompt_Books_Summary_Bool_Exp>;
};

export type Query_RootPromptsArgs = {
  distinct_on?: InputMaybe<Array<Prompts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompts_Order_By>>;
  where?: InputMaybe<Prompts_Bool_Exp>;
};

export type Query_RootPrompts_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPublishersArgs = {
  distinct_on?: InputMaybe<Array<Publishers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Publishers_Order_By>>;
  where?: InputMaybe<Publishers_Bool_Exp>;
};

export type Query_RootPublishers_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootReading_FormatsArgs = {
  distinct_on?: InputMaybe<Array<Reading_Formats_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reading_Formats_Order_By>>;
  where?: InputMaybe<Reading_Formats_Bool_Exp>;
};

export type Query_RootReading_Formats_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootReading_JournalsArgs = {
  distinct_on?: InputMaybe<Array<Reading_Journals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reading_Journals_Order_By>>;
  where?: InputMaybe<Reading_Journals_Bool_Exp>;
};

export type Query_RootReading_Journals_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootReading_Journals_SummaryArgs = {
  distinct_on?: InputMaybe<Array<Reading_Journals_Summary_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reading_Journals_Summary_Order_By>>;
  where?: InputMaybe<Reading_Journals_Summary_Bool_Exp>;
};

export type Query_RootRecommendationsArgs = {
  distinct_on?: InputMaybe<Array<Recommendations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Recommendations_Order_By>>;
  where?: InputMaybe<Recommendations_Bool_Exp>;
};

export type Query_RootRecommendations_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootReferrals_For_UserArgs = {
  end_date?: InputMaybe<Scalars['date']['input']>;
  limit: Scalars['Int']['input'];
  start_date?: InputMaybe<Scalars['date']['input']>;
  user_id: Scalars['Int']['input'];
};

export type Query_RootSearchArgs = {
  fields?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  per_page?: InputMaybe<Scalars['Int']['input']>;
  query: Scalars['String']['input'];
  query_type?: InputMaybe<Scalars['String']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  weights?: InputMaybe<Scalars['String']['input']>;
};

export type Query_RootSeriesArgs = {
  distinct_on?: InputMaybe<Array<Series_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Series_Order_By>>;
  where?: InputMaybe<Series_Bool_Exp>;
};

export type Query_RootSeries_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootSubscriptionsArgs = {
  default_payment_system_id: Scalars['Int']['input'];
};

export type Query_RootTag_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<Tag_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tag_Categories_Order_By>>;
  where?: InputMaybe<Tag_Categories_Bool_Exp>;
};

export type Query_RootTag_Categories_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootTaggable_CountsArgs = {
  distinct_on?: InputMaybe<Array<Taggable_Counts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggable_Counts_Order_By>>;
  where?: InputMaybe<Taggable_Counts_Bool_Exp>;
};

export type Query_RootTaggable_Counts_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootTaggingsArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

export type Query_RootTaggings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

export type Query_RootTaggings_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

export type Query_RootTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

export type Query_RootTags_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootUser_BlocksArgs = {
  distinct_on?: InputMaybe<Array<User_Blocks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Blocks_Order_By>>;
  where?: InputMaybe<User_Blocks_Bool_Exp>;
};

export type Query_RootUser_Blocks_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootUser_Book_ReadsArgs = {
  distinct_on?: InputMaybe<Array<User_Book_Reads_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Book_Reads_Order_By>>;
  where?: InputMaybe<User_Book_Reads_Bool_Exp>;
};

export type Query_RootUser_Book_Reads_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Book_Reads_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Book_Reads_Order_By>>;
  where?: InputMaybe<User_Book_Reads_Bool_Exp>;
};

export type Query_RootUser_Book_Reads_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootUser_Book_StatusesArgs = {
  distinct_on?: InputMaybe<Array<User_Book_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Book_Statuses_Order_By>>;
  where?: InputMaybe<User_Book_Statuses_Bool_Exp>;
};

export type Query_RootUser_Book_Statuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Book_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Book_Statuses_Order_By>>;
  where?: InputMaybe<User_Book_Statuses_Bool_Exp>;
};

export type Query_RootUser_Book_Statuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootUser_BooksArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

export type Query_RootUser_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

export type Query_RootUser_Books_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootUser_FlagsArgs = {
  distinct_on?: InputMaybe<Array<User_Flags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Flags_Order_By>>;
  where?: InputMaybe<User_Flags_Bool_Exp>;
};

export type Query_RootUser_Flags_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootUser_ReferralsArgs = {
  distinct_on?: InputMaybe<Array<User_Referrals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Referrals_Order_By>>;
  where?: InputMaybe<User_Referrals_Bool_Exp>;
};

export type Query_RootUser_Referrals_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Query_RootUser_StatusesArgs = {
  distinct_on?: InputMaybe<Array<User_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Statuses_Order_By>>;
  where?: InputMaybe<User_Statuses_Bool_Exp>;
};

export type Query_RootUser_Statuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};

export type Query_RootUsers_Aggregate_By_Created_At_DateArgs = {
  distinct_on?: InputMaybe<Array<Users_Aggregate_By_Created_At_Date_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Aggregate_By_Created_At_Date_Order_By>>;
  where?: InputMaybe<Users_Aggregate_By_Created_At_Date_Bool_Exp>;
};

export type Query_RootUsers_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** columns and relationships of "reading_formats" */
export type Reading_Formats = {
  __typename?: 'reading_formats';
  format: Scalars['String']['output'];
  id: Scalars['Int']['output'];
};

/** Boolean expression to filter rows from the table "reading_formats". All fields are combined with a logical 'AND'. */
export type Reading_Formats_Bool_Exp = {
  _and?: InputMaybe<Array<Reading_Formats_Bool_Exp>>;
  _not?: InputMaybe<Reading_Formats_Bool_Exp>;
  _or?: InputMaybe<Array<Reading_Formats_Bool_Exp>>;
  format?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
};

/** Ordering options when selecting data from "reading_formats". */
export type Reading_Formats_Order_By = {
  format?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** select columns of table "reading_formats" */
export enum Reading_Formats_Select_Column {
  /** column name */
  Format = 'format',
  /** column name */
  Id = 'id',
}

/** Streaming cursor of the table "reading_formats" */
export type Reading_Formats_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Reading_Formats_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Reading_Formats_Stream_Cursor_Value_Input = {
  format?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** columns and relationships of "reading_journals" */
export type Reading_Journals = {
  __typename?: 'reading_journals';
  /** An object relationship */
  book?: Maybe<Books>;
  book_id?: Maybe<Scalars['Int']['output']>;
  created_at: Scalars['timestamp']['output'];
  /** An object relationship */
  edition?: Maybe<Editions>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  entry?: Maybe<Scalars['String']['output']>;
  event?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  followers: Array<Followed_Users>;
  id: Scalars['bigint']['output'];
  /** An array relationship */
  likes: Array<Likes>;
  likes_count: Scalars['Int']['output'];
  metadata: Scalars['jsonb']['output'];
  object_type: Scalars['String']['output'];
  privacy_setting_id: Scalars['Int']['output'];
  /** An array relationship */
  taggings: Array<Taggings>;
  /** An aggregate relationship */
  taggings_aggregate: Taggings_Aggregate;
  updated_at: Scalars['timestamp']['output'];
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "reading_journals" */
export type Reading_JournalsFollowersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

/** columns and relationships of "reading_journals" */
export type Reading_JournalsLikesArgs = {
  distinct_on?: InputMaybe<Array<Likes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Likes_Order_By>>;
  where?: InputMaybe<Likes_Bool_Exp>;
};

/** columns and relationships of "reading_journals" */
export type Reading_JournalsMetadataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "reading_journals" */
export type Reading_JournalsTaggingsArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

/** columns and relationships of "reading_journals" */
export type Reading_JournalsTaggings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

/** order by aggregate values of table "reading_journals" */
export type Reading_Journals_Aggregate_Order_By = {
  avg?: InputMaybe<Reading_Journals_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Reading_Journals_Max_Order_By>;
  min?: InputMaybe<Reading_Journals_Min_Order_By>;
  stddev?: InputMaybe<Reading_Journals_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Reading_Journals_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Reading_Journals_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Reading_Journals_Sum_Order_By>;
  var_pop?: InputMaybe<Reading_Journals_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Reading_Journals_Var_Samp_Order_By>;
  variance?: InputMaybe<Reading_Journals_Variance_Order_By>;
};

/** order by avg() on columns of table "reading_journals" */
export type Reading_Journals_Avg_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "reading_journals". All fields are combined with a logical 'AND'. */
export type Reading_Journals_Bool_Exp = {
  _and?: InputMaybe<Array<Reading_Journals_Bool_Exp>>;
  _not?: InputMaybe<Reading_Journals_Bool_Exp>;
  _or?: InputMaybe<Array<Reading_Journals_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  edition?: InputMaybe<Editions_Bool_Exp>;
  edition_id?: InputMaybe<Int_Comparison_Exp>;
  entry?: InputMaybe<String_Comparison_Exp>;
  event?: InputMaybe<String_Comparison_Exp>;
  followers?: InputMaybe<Followed_Users_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  likes?: InputMaybe<Likes_Bool_Exp>;
  likes_count?: InputMaybe<Int_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  object_type?: InputMaybe<String_Comparison_Exp>;
  privacy_setting_id?: InputMaybe<Int_Comparison_Exp>;
  taggings?: InputMaybe<Taggings_Bool_Exp>;
  taggings_aggregate?: InputMaybe<Taggings_Aggregate_Bool_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** order by max() on columns of table "reading_journals" */
export type Reading_Journals_Max_Order_By = {
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  event?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "reading_journals" */
export type Reading_Journals_Min_Order_By = {
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  event?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "reading_journals". */
export type Reading_Journals_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  edition?: InputMaybe<Editions_Order_By>;
  edition_id?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  event?: InputMaybe<Order_By>;
  followers_aggregate?: InputMaybe<Followed_Users_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  likes_aggregate?: InputMaybe<Likes_Aggregate_Order_By>;
  likes_count?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  taggings_aggregate?: InputMaybe<Taggings_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "reading_journals" */
export enum Reading_Journals_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EditionId = 'edition_id',
  /** column name */
  Entry = 'entry',
  /** column name */
  Event = 'event',
  /** column name */
  Id = 'id',
  /** column name */
  LikesCount = 'likes_count',
  /** column name */
  Metadata = 'metadata',
  /** column name */
  ObjectType = 'object_type',
  /** column name */
  PrivacySettingId = 'privacy_setting_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
}

/** order by stddev() on columns of table "reading_journals" */
export type Reading_Journals_Stddev_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "reading_journals" */
export type Reading_Journals_Stddev_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "reading_journals" */
export type Reading_Journals_Stddev_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "reading_journals" */
export type Reading_Journals_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Reading_Journals_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Reading_Journals_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  entry?: InputMaybe<Scalars['String']['input']>;
  event?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  likes_count?: InputMaybe<Scalars['Int']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  object_type?: InputMaybe<Scalars['String']['input']>;
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "reading_journals" */
export type Reading_Journals_Sum_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "reading_journals_summary" */
export type Reading_Journals_Summary = {
  __typename?: 'reading_journals_summary';
  /** An object relationship */
  book?: Maybe<Books>;
  book_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  followers: Array<Followed_Users>;
  journals_count?: Maybe<Scalars['bigint']['output']>;
  last_updated_at?: Maybe<Scalars['timestamp']['output']>;
  /** An array relationship */
  reading_journals: Array<Reading_Journals>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "reading_journals_summary" */
export type Reading_Journals_SummaryFollowersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

/** columns and relationships of "reading_journals_summary" */
export type Reading_Journals_SummaryReading_JournalsArgs = {
  distinct_on?: InputMaybe<Array<Reading_Journals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reading_Journals_Order_By>>;
  where?: InputMaybe<Reading_Journals_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "reading_journals_summary". All fields are combined with a logical 'AND'. */
export type Reading_Journals_Summary_Bool_Exp = {
  _and?: InputMaybe<Array<Reading_Journals_Summary_Bool_Exp>>;
  _not?: InputMaybe<Reading_Journals_Summary_Bool_Exp>;
  _or?: InputMaybe<Array<Reading_Journals_Summary_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  followers?: InputMaybe<Followed_Users_Bool_Exp>;
  journals_count?: InputMaybe<Bigint_Comparison_Exp>;
  last_updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  reading_journals?: InputMaybe<Reading_Journals_Bool_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** Ordering options when selecting data from "reading_journals_summary". */
export type Reading_Journals_Summary_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  followers_aggregate?: InputMaybe<Followed_Users_Aggregate_Order_By>;
  journals_count?: InputMaybe<Order_By>;
  last_updated_at?: InputMaybe<Order_By>;
  reading_journals_aggregate?: InputMaybe<Reading_Journals_Aggregate_Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "reading_journals_summary" */
export enum Reading_Journals_Summary_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  JournalsCount = 'journals_count',
  /** column name */
  LastUpdatedAt = 'last_updated_at',
  /** column name */
  UserId = 'user_id',
}

/** Streaming cursor of the table "reading_journals_summary" */
export type Reading_Journals_Summary_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Reading_Journals_Summary_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Reading_Journals_Summary_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  journals_count?: InputMaybe<Scalars['bigint']['input']>;
  last_updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by var_pop() on columns of table "reading_journals" */
export type Reading_Journals_Var_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "reading_journals" */
export type Reading_Journals_Var_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "reading_journals" */
export type Reading_Journals_Variance_Order_By = {
  book_id?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "disco_recommendations" */
export type Recommendations = {
  __typename?: 'recommendations';
  context?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['timestamp']['output'];
  id: Scalars['bigint']['output'];
  /** An object relationship */
  item_book?: Maybe<Books>;
  item_id?: Maybe<Scalars['bigint']['output']>;
  item_type?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  item_user?: Maybe<Users>;
  score?: Maybe<Scalars['float8']['output']>;
  subject_id?: Maybe<Scalars['bigint']['output']>;
  subject_type?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  subject_user?: Maybe<Users>;
  updated_at: Scalars['timestamp']['output'];
};

/** order by aggregate values of table "disco_recommendations" */
export type Recommendations_Aggregate_Order_By = {
  avg?: InputMaybe<Recommendations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Recommendations_Max_Order_By>;
  min?: InputMaybe<Recommendations_Min_Order_By>;
  stddev?: InputMaybe<Recommendations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Recommendations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Recommendations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Recommendations_Sum_Order_By>;
  var_pop?: InputMaybe<Recommendations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Recommendations_Var_Samp_Order_By>;
  variance?: InputMaybe<Recommendations_Variance_Order_By>;
};

/** order by avg() on columns of table "disco_recommendations" */
export type Recommendations_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "disco_recommendations". All fields are combined with a logical 'AND'. */
export type Recommendations_Bool_Exp = {
  _and?: InputMaybe<Array<Recommendations_Bool_Exp>>;
  _not?: InputMaybe<Recommendations_Bool_Exp>;
  _or?: InputMaybe<Array<Recommendations_Bool_Exp>>;
  context?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  item_book?: InputMaybe<Books_Bool_Exp>;
  item_id?: InputMaybe<Bigint_Comparison_Exp>;
  item_type?: InputMaybe<String_Comparison_Exp>;
  item_user?: InputMaybe<Users_Bool_Exp>;
  score?: InputMaybe<Float8_Comparison_Exp>;
  subject_id?: InputMaybe<Bigint_Comparison_Exp>;
  subject_type?: InputMaybe<String_Comparison_Exp>;
  subject_user?: InputMaybe<Users_Bool_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** order by max() on columns of table "disco_recommendations" */
export type Recommendations_Max_Order_By = {
  context?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  item_type?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
  subject_type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "disco_recommendations" */
export type Recommendations_Min_Order_By = {
  context?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  item_type?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
  subject_type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "disco_recommendations". */
export type Recommendations_Order_By = {
  context?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_book?: InputMaybe<Books_Order_By>;
  item_id?: InputMaybe<Order_By>;
  item_type?: InputMaybe<Order_By>;
  item_user?: InputMaybe<Users_Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
  subject_type?: InputMaybe<Order_By>;
  subject_user?: InputMaybe<Users_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "disco_recommendations" */
export enum Recommendations_Select_Column {
  /** column name */
  Context = 'context',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  ItemType = 'item_type',
  /** column name */
  Score = 'score',
  /** column name */
  SubjectId = 'subject_id',
  /** column name */
  SubjectType = 'subject_type',
  /** column name */
  UpdatedAt = 'updated_at',
}

/** order by stddev() on columns of table "disco_recommendations" */
export type Recommendations_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "disco_recommendations" */
export type Recommendations_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "disco_recommendations" */
export type Recommendations_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "recommendations" */
export type Recommendations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Recommendations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Recommendations_Stream_Cursor_Value_Input = {
  context?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  item_id?: InputMaybe<Scalars['bigint']['input']>;
  item_type?: InputMaybe<Scalars['String']['input']>;
  score?: InputMaybe<Scalars['float8']['input']>;
  subject_id?: InputMaybe<Scalars['bigint']['input']>;
  subject_type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** order by sum() on columns of table "disco_recommendations" */
export type Recommendations_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "disco_recommendations" */
export type Recommendations_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "disco_recommendations" */
export type Recommendations_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "disco_recommendations" */
export type Recommendations_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  subject_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "series" */
export type Series = {
  __typename?: 'series';
  /** An object relationship */
  author?: Maybe<Authors>;
  author_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  book_series: Array<Book_Series>;
  /** An aggregate relationship */
  book_series_aggregate: Book_Series_Aggregate;
  books_count: Scalars['Int']['output'];
  /** An object relationship */
  canonical?: Maybe<Series>;
  canonical_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  creator?: Maybe<Users>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  identifiers: Scalars['jsonb']['output'];
  is_completed?: Maybe<Scalars['Boolean']['output']>;
  locked: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  primary_books_count?: Maybe<Scalars['Int']['output']>;
  slug: Scalars['String']['output'];
  state: Scalars['String']['output'];
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "series" */
export type SeriesBook_SeriesArgs = {
  distinct_on?: InputMaybe<Array<Book_Series_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Series_Order_By>>;
  where?: InputMaybe<Book_Series_Bool_Exp>;
};

/** columns and relationships of "series" */
export type SeriesBook_Series_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Book_Series_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Series_Order_By>>;
  where?: InputMaybe<Book_Series_Bool_Exp>;
};

/** columns and relationships of "series" */
export type SeriesIdentifiersArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** Boolean expression to filter rows from the table "series". All fields are combined with a logical 'AND'. */
export type Series_Bool_Exp = {
  _and?: InputMaybe<Array<Series_Bool_Exp>>;
  _not?: InputMaybe<Series_Bool_Exp>;
  _or?: InputMaybe<Array<Series_Bool_Exp>>;
  author?: InputMaybe<Authors_Bool_Exp>;
  author_id?: InputMaybe<Int_Comparison_Exp>;
  book_series?: InputMaybe<Book_Series_Bool_Exp>;
  book_series_aggregate?: InputMaybe<Book_Series_Aggregate_Bool_Exp>;
  books_count?: InputMaybe<Int_Comparison_Exp>;
  canonical?: InputMaybe<Series_Bool_Exp>;
  canonical_id?: InputMaybe<Int_Comparison_Exp>;
  creator?: InputMaybe<Users_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  identifiers?: InputMaybe<Jsonb_Comparison_Exp>;
  is_completed?: InputMaybe<Boolean_Comparison_Exp>;
  locked?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  primary_books_count?: InputMaybe<Int_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** Ordering options when selecting data from "series". */
export type Series_Order_By = {
  author?: InputMaybe<Authors_Order_By>;
  author_id?: InputMaybe<Order_By>;
  book_series_aggregate?: InputMaybe<Book_Series_Aggregate_Order_By>;
  books_count?: InputMaybe<Order_By>;
  canonical?: InputMaybe<Series_Order_By>;
  canonical_id?: InputMaybe<Order_By>;
  creator?: InputMaybe<Users_Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  identifiers?: InputMaybe<Order_By>;
  is_completed?: InputMaybe<Order_By>;
  locked?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  primary_books_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "series" */
export enum Series_Select_Column {
  /** column name */
  AuthorId = 'author_id',
  /** column name */
  BooksCount = 'books_count',
  /** column name */
  CanonicalId = 'canonical_id',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Identifiers = 'identifiers',
  /** column name */
  IsCompleted = 'is_completed',
  /** column name */
  Locked = 'locked',
  /** column name */
  Name = 'name',
  /** column name */
  PrimaryBooksCount = 'primary_books_count',
  /** column name */
  Slug = 'slug',
  /** column name */
  State = 'state',
  /** column name */
  UserId = 'user_id',
}

/** Streaming cursor of the table "series" */
export type Series_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Series_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Series_Stream_Cursor_Value_Input = {
  author_id?: InputMaybe<Scalars['Int']['input']>;
  books_count?: InputMaybe<Scalars['Int']['input']>;
  canonical_id?: InputMaybe<Scalars['Int']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  identifiers?: InputMaybe<Scalars['jsonb']['input']>;
  is_completed?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  primary_books_count?: InputMaybe<Scalars['Int']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'. */
export type Smallint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['smallint']['input']>;
  _gt?: InputMaybe<Scalars['smallint']['input']>;
  _gte?: InputMaybe<Scalars['smallint']['input']>;
  _in?: InputMaybe<Array<Scalars['smallint']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['smallint']['input']>;
  _lte?: InputMaybe<Scalars['smallint']['input']>;
  _neq?: InputMaybe<Scalars['smallint']['input']>;
  _nin?: InputMaybe<Array<Scalars['smallint']['input']>>;
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** An array relationship */
  activities: Array<Activities>;
  /** fetch data from the table: "activities" using primary key columns */
  activities_by_pk?: Maybe<Activities>;
  /** fetch data from the table in a streaming manner: "activities" */
  activities_stream: Array<Activities>;
  /** execute function "activity_feed" which returns "activities" */
  activity_feed: Array<Activities>;
  /** execute function "activity_foryou_feed" which returns "activities" */
  activity_foryou_feed: Array<Activities>;
  /** fetch data from the table: "authors" */
  authors: Array<Authors>;
  /** fetch data from the table: "authors" using primary key columns */
  authors_by_pk?: Maybe<Authors>;
  /** fetch data from the table in a streaming manner: "authors" */
  authors_stream: Array<Authors>;
  /** fetch data from the table: "book_categories" */
  book_categories: Array<Book_Categories>;
  /** fetch data from the table: "book_categories" using primary key columns */
  book_categories_by_pk?: Maybe<Book_Categories>;
  /** fetch data from the table in a streaming manner: "book_categories" */
  book_categories_stream: Array<Book_Categories>;
  /** An array relationship */
  book_characters: Array<Book_Characters>;
  /** fetch data from the table: "book_characters" using primary key columns */
  book_characters_by_pk?: Maybe<Book_Characters>;
  /** fetch data from the table in a streaming manner: "book_characters" */
  book_characters_stream: Array<Book_Characters>;
  /** fetch data from the table: "book_collections" */
  book_collections: Array<Book_Collections>;
  /** fetch data from the table: "book_collections" using primary key columns */
  book_collections_by_pk?: Maybe<Book_Collections>;
  /** fetch data from the table in a streaming manner: "book_collections" */
  book_collections_stream: Array<Book_Collections>;
  /** An array relationship */
  book_mappings: Array<Book_Mappings>;
  /** fetch data from the table: "book_mappings" using primary key columns */
  book_mappings_by_pk?: Maybe<Book_Mappings>;
  /** fetch data from the table in a streaming manner: "book_mappings" */
  book_mappings_stream: Array<Book_Mappings>;
  /** An array relationship */
  book_series: Array<Book_Series>;
  /** An aggregate relationship */
  book_series_aggregate: Book_Series_Aggregate;
  /** fetch data from the table: "book_series" using primary key columns */
  book_series_by_pk?: Maybe<Book_Series>;
  /** fetch data from the table in a streaming manner: "book_series" */
  book_series_stream: Array<Book_Series>;
  /** fetch data from the table: "book_statuses" */
  book_statuses: Array<Book_Statuses>;
  /** fetch data from the table: "book_statuses" using primary key columns */
  book_statuses_by_pk?: Maybe<Book_Statuses>;
  /** fetch data from the table in a streaming manner: "book_statuses" */
  book_statuses_stream: Array<Book_Statuses>;
  /** fetch data from the table: "bookles" */
  bookles: Array<Bookles>;
  /** fetch data from the table: "bookles" using primary key columns */
  bookles_by_pk?: Maybe<Bookles>;
  /** fetch data from the table in a streaming manner: "bookles" */
  bookles_stream: Array<Bookles>;
  /** An array relationship */
  books: Array<Books>;
  /** An aggregate relationship */
  books_aggregate: Books_Aggregate;
  /** fetch data from the table: "books" using primary key columns */
  books_by_pk?: Maybe<Books>;
  /** fetch data from the table in a streaming manner: "books" */
  books_stream: Array<Books>;
  /** fetch data from the table: "characters" */
  characters: Array<Characters>;
  /** fetch data from the table: "characters" using primary key columns */
  characters_by_pk?: Maybe<Characters>;
  /** fetch data from the table in a streaming manner: "characters" */
  characters_stream: Array<Characters>;
  /** An array relationship */
  collection_import_results: Array<Collection_Import_Results>;
  /** fetch data from the table: "collection_import_results" using primary key columns */
  collection_import_results_by_pk?: Maybe<Collection_Import_Results>;
  /** fetch data from the table in a streaming manner: "collection_import_results" */
  collection_import_results_stream: Array<Collection_Import_Results>;
  /** An array relationship */
  collection_imports: Array<Collection_Imports>;
  /** fetch data from the table: "collection_imports" using primary key columns */
  collection_imports_by_pk?: Maybe<Collection_Imports>;
  /** fetch data from the table in a streaming manner: "collection_imports" */
  collection_imports_stream: Array<Collection_Imports>;
  /** An array relationship */
  contributions: Array<Contributions>;
  /** An aggregate relationship */
  contributions_aggregate: Contributions_Aggregate;
  /** fetch data from the table: "contributions" using primary key columns */
  contributions_by_pk?: Maybe<Contributions>;
  /** fetch data from the table in a streaming manner: "contributions" */
  contributions_stream: Array<Contributions>;
  /** fetch data from the table: "countries" */
  countries: Array<Countries>;
  /** fetch data from the table: "countries" using primary key columns */
  countries_by_pk?: Maybe<Countries>;
  /** fetch data from the table in a streaming manner: "countries" */
  countries_stream: Array<Countries>;
  /** An array relationship */
  editions: Array<Editions>;
  /** fetch data from the table: "editions" using primary key columns */
  editions_by_pk?: Maybe<Editions>;
  /** fetch data from the table in a streaming manner: "editions" */
  editions_stream: Array<Editions>;
  /** fetch data from the table: "flag_statuses" */
  flag_statuses: Array<Flag_Statuses>;
  /** fetch data from the table: "flag_statuses" using primary key columns */
  flag_statuses_by_pk?: Maybe<Flag_Statuses>;
  /** fetch data from the table in a streaming manner: "flag_statuses" */
  flag_statuses_stream: Array<Flag_Statuses>;
  /** An array relationship */
  followed_lists: Array<Followed_Lists>;
  /** fetch data from the table: "followed_lists" using primary key columns */
  followed_lists_by_pk?: Maybe<Followed_Lists>;
  /** fetch data from the table in a streaming manner: "followed_lists" */
  followed_lists_stream: Array<Followed_Lists>;
  /** An array relationship */
  followed_prompts: Array<Followed_Prompts>;
  /** fetch data from the table: "followed_prompts" using primary key columns */
  followed_prompts_by_pk?: Maybe<Followed_Prompts>;
  /** fetch data from the table in a streaming manner: "followed_prompts" */
  followed_prompts_stream: Array<Followed_Prompts>;
  /** fetch data from the table: "followed_user_books" */
  followed_user_books: Array<Followed_User_Books>;
  /** fetch aggregated fields from the table: "followed_user_books" */
  followed_user_books_aggregate: Followed_User_Books_Aggregate;
  /** fetch data from the table in a streaming manner: "followed_user_books" */
  followed_user_books_stream: Array<Followed_User_Books>;
  /** An array relationship */
  followed_users: Array<Followed_Users>;
  /** fetch data from the table: "followed_users" using primary key columns */
  followed_users_by_pk?: Maybe<Followed_Users>;
  /** fetch data from the table in a streaming manner: "followed_users" */
  followed_users_stream: Array<Followed_Users>;
  /** fetch data from the table: "following_user_books" */
  following_user_books: Array<Following_User_Books>;
  /** fetch aggregated fields from the table: "following_user_books" */
  following_user_books_aggregate: Following_User_Books_Aggregate;
  /** fetch data from the table in a streaming manner: "following_user_books" */
  following_user_books_stream: Array<Following_User_Books>;
  /** An array relationship */
  goals: Array<Goals>;
  /** fetch data from the table: "goals" using primary key columns */
  goals_by_pk?: Maybe<Goals>;
  /** fetch data from the table in a streaming manner: "goals" */
  goals_stream: Array<Goals>;
  /** An array relationship */
  images: Array<Images>;
  /** fetch data from the table: "images" using primary key columns */
  images_by_pk?: Maybe<Images>;
  /** fetch data from the table in a streaming manner: "images" */
  images_stream: Array<Images>;
  /** fetch data from the table: "languages" */
  languages: Array<Languages>;
  /** fetch data from the table: "languages" using primary key columns */
  languages_by_pk?: Maybe<Languages>;
  /** fetch data from the table in a streaming manner: "languages" */
  languages_stream: Array<Languages>;
  /** An array relationship */
  likes: Array<Likes>;
  /** fetch data from the table: "likes" using primary key columns */
  likes_by_pk?: Maybe<Likes>;
  /** fetch data from the table in a streaming manner: "likes" */
  likes_stream: Array<Likes>;
  /** An array relationship */
  list_books: Array<List_Books>;
  /** An aggregate relationship */
  list_books_aggregate: List_Books_Aggregate;
  /** fetch data from the table: "list_books" using primary key columns */
  list_books_by_pk?: Maybe<List_Books>;
  /** fetch data from the table in a streaming manner: "list_books" */
  list_books_stream: Array<List_Books>;
  /** An array relationship */
  lists: Array<Lists>;
  /** An aggregate relationship */
  lists_aggregate: Lists_Aggregate;
  /** fetch data from the table: "lists" using primary key columns */
  lists_by_pk?: Maybe<Lists>;
  /** fetch data from the table in a streaming manner: "lists" */
  lists_stream: Array<Lists>;
  /** execute function "me" which returns "users" */
  me: Array<Users>;
  /** fetch data from the table: "notification_channels" */
  notification_channels: Array<Notification_Channels>;
  /** fetch data from the table: "notification_channels" using primary key columns */
  notification_channels_by_pk?: Maybe<Notification_Channels>;
  /** fetch data from the table in a streaming manner: "notification_channels" */
  notification_channels_stream: Array<Notification_Channels>;
  /** An array relationship */
  notification_deliveries: Array<Notification_Deliveries>;
  /** An aggregate relationship */
  notification_deliveries_aggregate: Notification_Deliveries_Aggregate;
  /** fetch data from the table: "notification_deliveries" using primary key columns */
  notification_deliveries_by_pk?: Maybe<Notification_Deliveries>;
  /** fetch data from the table in a streaming manner: "notification_deliveries" */
  notification_deliveries_stream: Array<Notification_Deliveries>;
  /** fetch data from the table: "notification_settings" */
  notification_settings: Array<Notification_Settings>;
  /** fetch data from the table: "notification_settings" using primary key columns */
  notification_settings_by_pk?: Maybe<Notification_Settings>;
  /** fetch data from the table in a streaming manner: "notification_settings" */
  notification_settings_stream: Array<Notification_Settings>;
  /** fetch data from the table: "notification_types" */
  notification_types: Array<Notification_Types>;
  /** fetch data from the table: "notification_types" using primary key columns */
  notification_types_by_pk?: Maybe<Notification_Types>;
  /** fetch data from the table in a streaming manner: "notification_types" */
  notification_types_stream: Array<Notification_Types>;
  /** fetch data from the table: "notifications" */
  notifications: Array<Notifications>;
  /** fetch data from the table: "notifications" using primary key columns */
  notifications_by_pk?: Maybe<Notifications>;
  /** fetch data from the table in a streaming manner: "notifications" */
  notifications_stream: Array<Notifications>;
  /** fetch data from the table: "platforms" */
  platforms: Array<Platforms>;
  /** fetch data from the table: "platforms" using primary key columns */
  platforms_by_pk?: Maybe<Platforms>;
  /** fetch data from the table in a streaming manner: "platforms" */
  platforms_stream: Array<Platforms>;
  /** fetch data from the table: "privacy_settings" */
  privacy_settings: Array<Privacy_Settings>;
  /** fetch data from the table: "privacy_settings" using primary key columns */
  privacy_settings_by_pk?: Maybe<Privacy_Settings>;
  /** fetch data from the table in a streaming manner: "privacy_settings" */
  privacy_settings_stream: Array<Privacy_Settings>;
  /** An array relationship */
  prompt_answers: Array<Prompt_Answers>;
  /** An aggregate relationship */
  prompt_answers_aggregate: Prompt_Answers_Aggregate;
  /** fetch data from the table: "prompt_answers" using primary key columns */
  prompt_answers_by_pk?: Maybe<Prompt_Answers>;
  /** fetch data from the table in a streaming manner: "prompt_answers" */
  prompt_answers_stream: Array<Prompt_Answers>;
  /** fetch data from the table: "prompt_books_summary" */
  prompt_books_summary: Array<Prompt_Books_Summary>;
  /** fetch data from the table in a streaming manner: "prompt_books_summary" */
  prompt_books_summary_stream: Array<Prompt_Books_Summary>;
  /** An array relationship */
  prompts: Array<Prompts>;
  /** fetch data from the table: "prompts" using primary key columns */
  prompts_by_pk?: Maybe<Prompts>;
  /** fetch data from the table in a streaming manner: "prompts" */
  prompts_stream: Array<Prompts>;
  /** fetch data from the table: "publishers" */
  publishers: Array<Publishers>;
  /** fetch data from the table: "publishers" using primary key columns */
  publishers_by_pk?: Maybe<Publishers>;
  /** fetch data from the table in a streaming manner: "publishers" */
  publishers_stream: Array<Publishers>;
  /** fetch data from the table: "reading_formats" */
  reading_formats: Array<Reading_Formats>;
  /** fetch data from the table: "reading_formats" using primary key columns */
  reading_formats_by_pk?: Maybe<Reading_Formats>;
  /** fetch data from the table in a streaming manner: "reading_formats" */
  reading_formats_stream: Array<Reading_Formats>;
  /** An array relationship */
  reading_journals: Array<Reading_Journals>;
  /** fetch data from the table: "reading_journals" using primary key columns */
  reading_journals_by_pk?: Maybe<Reading_Journals>;
  /** fetch data from the table in a streaming manner: "reading_journals" */
  reading_journals_stream: Array<Reading_Journals>;
  /** fetch data from the table: "reading_journals_summary" */
  reading_journals_summary: Array<Reading_Journals_Summary>;
  /** fetch data from the table in a streaming manner: "reading_journals_summary" */
  reading_journals_summary_stream: Array<Reading_Journals_Summary>;
  /** An array relationship */
  recommendations: Array<Recommendations>;
  /** fetch data from the table: "disco_recommendations" using primary key columns */
  recommendations_by_pk?: Maybe<Recommendations>;
  /** fetch data from the table in a streaming manner: "disco_recommendations" */
  recommendations_stream: Array<Recommendations>;
  /** fetch data from the table: "series" */
  series: Array<Series>;
  /** fetch data from the table: "series" using primary key columns */
  series_by_pk?: Maybe<Series>;
  /** fetch data from the table in a streaming manner: "series" */
  series_stream: Array<Series>;
  /** fetch data from the table: "tag_categories" */
  tag_categories: Array<Tag_Categories>;
  /** fetch data from the table: "tag_categories" using primary key columns */
  tag_categories_by_pk?: Maybe<Tag_Categories>;
  /** fetch data from the table in a streaming manner: "tag_categories" */
  tag_categories_stream: Array<Tag_Categories>;
  /** An array relationship */
  taggable_counts: Array<Taggable_Counts>;
  /** fetch data from the table: "taggable_counts" using primary key columns */
  taggable_counts_by_pk?: Maybe<Taggable_Counts>;
  /** fetch data from the table in a streaming manner: "taggable_counts" */
  taggable_counts_stream: Array<Taggable_Counts>;
  /** An array relationship */
  taggings: Array<Taggings>;
  /** An aggregate relationship */
  taggings_aggregate: Taggings_Aggregate;
  /** fetch data from the table: "taggings" using primary key columns */
  taggings_by_pk?: Maybe<Taggings>;
  /** fetch data from the table in a streaming manner: "taggings" */
  taggings_stream: Array<Taggings>;
  /** An array relationship */
  tags: Array<Tags>;
  /** An aggregate relationship */
  tags_aggregate: Tags_Aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<Tags>;
  /** fetch data from the table in a streaming manner: "tags" */
  tags_stream: Array<Tags>;
  /** fetch data from the table: "user_blocks" */
  user_blocks: Array<User_Blocks>;
  /** fetch data from the table: "user_blocks" using primary key columns */
  user_blocks_by_pk?: Maybe<User_Blocks>;
  /** fetch data from the table in a streaming manner: "user_blocks" */
  user_blocks_stream: Array<User_Blocks>;
  /** An array relationship */
  user_book_reads: Array<User_Book_Reads>;
  /** An aggregate relationship */
  user_book_reads_aggregate: User_Book_Reads_Aggregate;
  /** fetch data from the table: "user_book_reads" using primary key columns */
  user_book_reads_by_pk?: Maybe<User_Book_Reads>;
  /** fetch data from the table in a streaming manner: "user_book_reads" */
  user_book_reads_stream: Array<User_Book_Reads>;
  /** fetch data from the table: "user_book_statuses" */
  user_book_statuses: Array<User_Book_Statuses>;
  /** fetch aggregated fields from the table: "user_book_statuses" */
  user_book_statuses_aggregate: User_Book_Statuses_Aggregate;
  /** fetch data from the table: "user_book_statuses" using primary key columns */
  user_book_statuses_by_pk?: Maybe<User_Book_Statuses>;
  /** fetch data from the table in a streaming manner: "user_book_statuses" */
  user_book_statuses_stream: Array<User_Book_Statuses>;
  /** An array relationship */
  user_books: Array<User_Books>;
  /** An aggregate relationship */
  user_books_aggregate: User_Books_Aggregate;
  /** fetch data from the table: "user_books" using primary key columns */
  user_books_by_pk?: Maybe<User_Books>;
  /** fetch data from the table in a streaming manner: "user_books" */
  user_books_stream: Array<User_Books>;
  /** An array relationship */
  user_flags: Array<User_Flags>;
  /** fetch data from the table: "user_flags" using primary key columns */
  user_flags_by_pk?: Maybe<User_Flags>;
  /** fetch data from the table in a streaming manner: "user_flags" */
  user_flags_stream: Array<User_Flags>;
  /** fetch data from the table: "user_referrals" */
  user_referrals: Array<User_Referrals>;
  /** fetch data from the table: "user_referrals" using primary key columns */
  user_referrals_by_pk?: Maybe<User_Referrals>;
  /** fetch data from the table in a streaming manner: "user_referrals" */
  user_referrals_stream: Array<User_Referrals>;
  /** fetch data from the table: "user_statuses" */
  user_statuses: Array<User_Statuses>;
  /** fetch data from the table: "user_statuses" using primary key columns */
  user_statuses_by_pk?: Maybe<User_Statuses>;
  /** fetch data from the table in a streaming manner: "user_statuses" */
  user_statuses_stream: Array<User_Statuses>;
  /** An array relationship */
  users: Array<Users>;
  /** fetch data from the table: "users_aggregate_by_created_at_date" */
  users_aggregate_by_created_at_date: Array<Users_Aggregate_By_Created_At_Date>;
  /** fetch data from the table in a streaming manner: "users_aggregate_by_created_at_date" */
  users_aggregate_by_created_at_date_stream: Array<Users_Aggregate_By_Created_At_Date>;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<Users>;
  /** fetch data from the table in a streaming manner: "users" */
  users_stream: Array<Users>;
};

export type Subscription_RootActivitiesArgs = {
  distinct_on?: InputMaybe<Array<Activities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Activities_Order_By>>;
  where?: InputMaybe<Activities_Bool_Exp>;
};

export type Subscription_RootActivities_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootActivities_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Activities_Stream_Cursor_Input>>;
  where?: InputMaybe<Activities_Bool_Exp>;
};

export type Subscription_RootActivity_FeedArgs = {
  args: Activity_Feed_Args;
  distinct_on?: InputMaybe<Array<Activities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Activities_Order_By>>;
  where?: InputMaybe<Activities_Bool_Exp>;
};

export type Subscription_RootActivity_Foryou_FeedArgs = {
  args: Activity_Foryou_Feed_Args;
  distinct_on?: InputMaybe<Array<Activities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Activities_Order_By>>;
  where?: InputMaybe<Activities_Bool_Exp>;
};

export type Subscription_RootAuthorsArgs = {
  distinct_on?: InputMaybe<Array<Authors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authors_Order_By>>;
  where?: InputMaybe<Authors_Bool_Exp>;
};

export type Subscription_RootAuthors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootAuthors_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Authors_Stream_Cursor_Input>>;
  where?: InputMaybe<Authors_Bool_Exp>;
};

export type Subscription_RootBook_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<Book_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Categories_Order_By>>;
  where?: InputMaybe<Book_Categories_Bool_Exp>;
};

export type Subscription_RootBook_Categories_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootBook_Categories_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Book_Categories_Stream_Cursor_Input>>;
  where?: InputMaybe<Book_Categories_Bool_Exp>;
};

export type Subscription_RootBook_CharactersArgs = {
  distinct_on?: InputMaybe<Array<Book_Characters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Characters_Order_By>>;
  where?: InputMaybe<Book_Characters_Bool_Exp>;
};

export type Subscription_RootBook_Characters_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootBook_Characters_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Book_Characters_Stream_Cursor_Input>>;
  where?: InputMaybe<Book_Characters_Bool_Exp>;
};

export type Subscription_RootBook_CollectionsArgs = {
  distinct_on?: InputMaybe<Array<Book_Collections_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Collections_Order_By>>;
  where?: InputMaybe<Book_Collections_Bool_Exp>;
};

export type Subscription_RootBook_Collections_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootBook_Collections_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Book_Collections_Stream_Cursor_Input>>;
  where?: InputMaybe<Book_Collections_Bool_Exp>;
};

export type Subscription_RootBook_MappingsArgs = {
  distinct_on?: InputMaybe<Array<Book_Mappings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Mappings_Order_By>>;
  where?: InputMaybe<Book_Mappings_Bool_Exp>;
};

export type Subscription_RootBook_Mappings_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootBook_Mappings_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Book_Mappings_Stream_Cursor_Input>>;
  where?: InputMaybe<Book_Mappings_Bool_Exp>;
};

export type Subscription_RootBook_SeriesArgs = {
  distinct_on?: InputMaybe<Array<Book_Series_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Series_Order_By>>;
  where?: InputMaybe<Book_Series_Bool_Exp>;
};

export type Subscription_RootBook_Series_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Book_Series_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Series_Order_By>>;
  where?: InputMaybe<Book_Series_Bool_Exp>;
};

export type Subscription_RootBook_Series_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootBook_Series_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Book_Series_Stream_Cursor_Input>>;
  where?: InputMaybe<Book_Series_Bool_Exp>;
};

export type Subscription_RootBook_StatusesArgs = {
  distinct_on?: InputMaybe<Array<Book_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Book_Statuses_Order_By>>;
  where?: InputMaybe<Book_Statuses_Bool_Exp>;
};

export type Subscription_RootBook_Statuses_By_PkArgs = {
  id: Scalars['smallint']['input'];
};

export type Subscription_RootBook_Statuses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Book_Statuses_Stream_Cursor_Input>>;
  where?: InputMaybe<Book_Statuses_Bool_Exp>;
};

export type Subscription_RootBooklesArgs = {
  distinct_on?: InputMaybe<Array<Bookles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Bookles_Order_By>>;
  where?: InputMaybe<Bookles_Bool_Exp>;
};

export type Subscription_RootBookles_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootBookles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Bookles_Stream_Cursor_Input>>;
  where?: InputMaybe<Bookles_Bool_Exp>;
};

export type Subscription_RootBooksArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};

export type Subscription_RootBooks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};

export type Subscription_RootBooks_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootBooks_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Books_Stream_Cursor_Input>>;
  where?: InputMaybe<Books_Bool_Exp>;
};

export type Subscription_RootCharactersArgs = {
  distinct_on?: InputMaybe<Array<Characters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characters_Order_By>>;
  where?: InputMaybe<Characters_Bool_Exp>;
};

export type Subscription_RootCharacters_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootCharacters_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Characters_Stream_Cursor_Input>>;
  where?: InputMaybe<Characters_Bool_Exp>;
};

export type Subscription_RootCollection_Import_ResultsArgs = {
  distinct_on?: InputMaybe<Array<Collection_Import_Results_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Collection_Import_Results_Order_By>>;
  where?: InputMaybe<Collection_Import_Results_Bool_Exp>;
};

export type Subscription_RootCollection_Import_Results_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootCollection_Import_Results_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Collection_Import_Results_Stream_Cursor_Input>>;
  where?: InputMaybe<Collection_Import_Results_Bool_Exp>;
};

export type Subscription_RootCollection_ImportsArgs = {
  distinct_on?: InputMaybe<Array<Collection_Imports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Collection_Imports_Order_By>>;
  where?: InputMaybe<Collection_Imports_Bool_Exp>;
};

export type Subscription_RootCollection_Imports_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootCollection_Imports_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Collection_Imports_Stream_Cursor_Input>>;
  where?: InputMaybe<Collection_Imports_Bool_Exp>;
};

export type Subscription_RootContributionsArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

export type Subscription_RootContributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contributions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contributions_Order_By>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

export type Subscription_RootContributions_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootContributions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Contributions_Stream_Cursor_Input>>;
  where?: InputMaybe<Contributions_Bool_Exp>;
};

export type Subscription_RootCountriesArgs = {
  distinct_on?: InputMaybe<Array<Countries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Countries_Order_By>>;
  where?: InputMaybe<Countries_Bool_Exp>;
};

export type Subscription_RootCountries_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootCountries_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Countries_Stream_Cursor_Input>>;
  where?: InputMaybe<Countries_Bool_Exp>;
};

export type Subscription_RootEditionsArgs = {
  distinct_on?: InputMaybe<Array<Editions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Editions_Order_By>>;
  where?: InputMaybe<Editions_Bool_Exp>;
};

export type Subscription_RootEditions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootEditions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Editions_Stream_Cursor_Input>>;
  where?: InputMaybe<Editions_Bool_Exp>;
};

export type Subscription_RootFlag_StatusesArgs = {
  distinct_on?: InputMaybe<Array<Flag_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Flag_Statuses_Order_By>>;
  where?: InputMaybe<Flag_Statuses_Bool_Exp>;
};

export type Subscription_RootFlag_Statuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootFlag_Statuses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Flag_Statuses_Stream_Cursor_Input>>;
  where?: InputMaybe<Flag_Statuses_Bool_Exp>;
};

export type Subscription_RootFollowed_ListsArgs = {
  distinct_on?: InputMaybe<Array<Followed_Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Lists_Order_By>>;
  where?: InputMaybe<Followed_Lists_Bool_Exp>;
};

export type Subscription_RootFollowed_Lists_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootFollowed_Lists_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Followed_Lists_Stream_Cursor_Input>>;
  where?: InputMaybe<Followed_Lists_Bool_Exp>;
};

export type Subscription_RootFollowed_PromptsArgs = {
  distinct_on?: InputMaybe<Array<Followed_Prompts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Prompts_Order_By>>;
  where?: InputMaybe<Followed_Prompts_Bool_Exp>;
};

export type Subscription_RootFollowed_Prompts_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootFollowed_Prompts_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Followed_Prompts_Stream_Cursor_Input>>;
  where?: InputMaybe<Followed_Prompts_Bool_Exp>;
};

export type Subscription_RootFollowed_User_BooksArgs = {
  distinct_on?: InputMaybe<Array<Followed_User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_User_Books_Order_By>>;
  where?: InputMaybe<Followed_User_Books_Bool_Exp>;
};

export type Subscription_RootFollowed_User_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Followed_User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_User_Books_Order_By>>;
  where?: InputMaybe<Followed_User_Books_Bool_Exp>;
};

export type Subscription_RootFollowed_User_Books_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Followed_User_Books_Stream_Cursor_Input>>;
  where?: InputMaybe<Followed_User_Books_Bool_Exp>;
};

export type Subscription_RootFollowed_UsersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

export type Subscription_RootFollowed_Users_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootFollowed_Users_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Followed_Users_Stream_Cursor_Input>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

export type Subscription_RootFollowing_User_BooksArgs = {
  distinct_on?: InputMaybe<Array<Following_User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Following_User_Books_Order_By>>;
  where?: InputMaybe<Following_User_Books_Bool_Exp>;
};

export type Subscription_RootFollowing_User_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Following_User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Following_User_Books_Order_By>>;
  where?: InputMaybe<Following_User_Books_Bool_Exp>;
};

export type Subscription_RootFollowing_User_Books_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Following_User_Books_Stream_Cursor_Input>>;
  where?: InputMaybe<Following_User_Books_Bool_Exp>;
};

export type Subscription_RootGoalsArgs = {
  distinct_on?: InputMaybe<Array<Goals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Goals_Order_By>>;
  where?: InputMaybe<Goals_Bool_Exp>;
};

export type Subscription_RootGoals_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootGoals_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Goals_Stream_Cursor_Input>>;
  where?: InputMaybe<Goals_Bool_Exp>;
};

export type Subscription_RootImagesArgs = {
  distinct_on?: InputMaybe<Array<Images_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Images_Order_By>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

export type Subscription_RootImages_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootImages_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Images_Stream_Cursor_Input>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

export type Subscription_RootLanguagesArgs = {
  distinct_on?: InputMaybe<Array<Languages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Languages_Order_By>>;
  where?: InputMaybe<Languages_Bool_Exp>;
};

export type Subscription_RootLanguages_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootLanguages_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Languages_Stream_Cursor_Input>>;
  where?: InputMaybe<Languages_Bool_Exp>;
};

export type Subscription_RootLikesArgs = {
  distinct_on?: InputMaybe<Array<Likes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Likes_Order_By>>;
  where?: InputMaybe<Likes_Bool_Exp>;
};

export type Subscription_RootLikes_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootLikes_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Likes_Stream_Cursor_Input>>;
  where?: InputMaybe<Likes_Bool_Exp>;
};

export type Subscription_RootList_BooksArgs = {
  distinct_on?: InputMaybe<Array<List_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<List_Books_Order_By>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

export type Subscription_RootList_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<List_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<List_Books_Order_By>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

export type Subscription_RootList_Books_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootList_Books_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<List_Books_Stream_Cursor_Input>>;
  where?: InputMaybe<List_Books_Bool_Exp>;
};

export type Subscription_RootListsArgs = {
  distinct_on?: InputMaybe<Array<Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Lists_Order_By>>;
  where?: InputMaybe<Lists_Bool_Exp>;
};

export type Subscription_RootLists_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Lists_Order_By>>;
  where?: InputMaybe<Lists_Bool_Exp>;
};

export type Subscription_RootLists_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootLists_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Lists_Stream_Cursor_Input>>;
  where?: InputMaybe<Lists_Bool_Exp>;
};

export type Subscription_RootMeArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};

export type Subscription_RootNotification_ChannelsArgs = {
  distinct_on?: InputMaybe<Array<Notification_Channels_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Channels_Order_By>>;
  where?: InputMaybe<Notification_Channels_Bool_Exp>;
};

export type Subscription_RootNotification_Channels_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootNotification_Channels_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Notification_Channels_Stream_Cursor_Input>>;
  where?: InputMaybe<Notification_Channels_Bool_Exp>;
};

export type Subscription_RootNotification_DeliveriesArgs = {
  distinct_on?: InputMaybe<Array<Notification_Deliveries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Deliveries_Order_By>>;
  where?: InputMaybe<Notification_Deliveries_Bool_Exp>;
};

export type Subscription_RootNotification_Deliveries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Notification_Deliveries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Deliveries_Order_By>>;
  where?: InputMaybe<Notification_Deliveries_Bool_Exp>;
};

export type Subscription_RootNotification_Deliveries_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootNotification_Deliveries_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Notification_Deliveries_Stream_Cursor_Input>>;
  where?: InputMaybe<Notification_Deliveries_Bool_Exp>;
};

export type Subscription_RootNotification_SettingsArgs = {
  distinct_on?: InputMaybe<Array<Notification_Settings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Settings_Order_By>>;
  where?: InputMaybe<Notification_Settings_Bool_Exp>;
};

export type Subscription_RootNotification_Settings_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootNotification_Settings_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Notification_Settings_Stream_Cursor_Input>>;
  where?: InputMaybe<Notification_Settings_Bool_Exp>;
};

export type Subscription_RootNotification_TypesArgs = {
  distinct_on?: InputMaybe<Array<Notification_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Types_Order_By>>;
  where?: InputMaybe<Notification_Types_Bool_Exp>;
};

export type Subscription_RootNotification_Types_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootNotification_Types_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Notification_Types_Stream_Cursor_Input>>;
  where?: InputMaybe<Notification_Types_Bool_Exp>;
};

export type Subscription_RootNotificationsArgs = {
  distinct_on?: InputMaybe<Array<Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notifications_Order_By>>;
  where?: InputMaybe<Notifications_Bool_Exp>;
};

export type Subscription_RootNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootNotifications_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Notifications_Stream_Cursor_Input>>;
  where?: InputMaybe<Notifications_Bool_Exp>;
};

export type Subscription_RootPlatformsArgs = {
  distinct_on?: InputMaybe<Array<Platforms_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Platforms_Order_By>>;
  where?: InputMaybe<Platforms_Bool_Exp>;
};

export type Subscription_RootPlatforms_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootPlatforms_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Platforms_Stream_Cursor_Input>>;
  where?: InputMaybe<Platforms_Bool_Exp>;
};

export type Subscription_RootPrivacy_SettingsArgs = {
  distinct_on?: InputMaybe<Array<Privacy_Settings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Privacy_Settings_Order_By>>;
  where?: InputMaybe<Privacy_Settings_Bool_Exp>;
};

export type Subscription_RootPrivacy_Settings_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootPrivacy_Settings_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Privacy_Settings_Stream_Cursor_Input>>;
  where?: InputMaybe<Privacy_Settings_Bool_Exp>;
};

export type Subscription_RootPrompt_AnswersArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Answers_Order_By>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

export type Subscription_RootPrompt_Answers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Answers_Order_By>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

export type Subscription_RootPrompt_Answers_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootPrompt_Answers_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Prompt_Answers_Stream_Cursor_Input>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

export type Subscription_RootPrompt_Books_SummaryArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Books_Summary_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Books_Summary_Order_By>>;
  where?: InputMaybe<Prompt_Books_Summary_Bool_Exp>;
};

export type Subscription_RootPrompt_Books_Summary_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Prompt_Books_Summary_Stream_Cursor_Input>>;
  where?: InputMaybe<Prompt_Books_Summary_Bool_Exp>;
};

export type Subscription_RootPromptsArgs = {
  distinct_on?: InputMaybe<Array<Prompts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompts_Order_By>>;
  where?: InputMaybe<Prompts_Bool_Exp>;
};

export type Subscription_RootPrompts_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootPrompts_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Prompts_Stream_Cursor_Input>>;
  where?: InputMaybe<Prompts_Bool_Exp>;
};

export type Subscription_RootPublishersArgs = {
  distinct_on?: InputMaybe<Array<Publishers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Publishers_Order_By>>;
  where?: InputMaybe<Publishers_Bool_Exp>;
};

export type Subscription_RootPublishers_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootPublishers_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Publishers_Stream_Cursor_Input>>;
  where?: InputMaybe<Publishers_Bool_Exp>;
};

export type Subscription_RootReading_FormatsArgs = {
  distinct_on?: InputMaybe<Array<Reading_Formats_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reading_Formats_Order_By>>;
  where?: InputMaybe<Reading_Formats_Bool_Exp>;
};

export type Subscription_RootReading_Formats_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootReading_Formats_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Reading_Formats_Stream_Cursor_Input>>;
  where?: InputMaybe<Reading_Formats_Bool_Exp>;
};

export type Subscription_RootReading_JournalsArgs = {
  distinct_on?: InputMaybe<Array<Reading_Journals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reading_Journals_Order_By>>;
  where?: InputMaybe<Reading_Journals_Bool_Exp>;
};

export type Subscription_RootReading_Journals_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootReading_Journals_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Reading_Journals_Stream_Cursor_Input>>;
  where?: InputMaybe<Reading_Journals_Bool_Exp>;
};

export type Subscription_RootReading_Journals_SummaryArgs = {
  distinct_on?: InputMaybe<Array<Reading_Journals_Summary_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reading_Journals_Summary_Order_By>>;
  where?: InputMaybe<Reading_Journals_Summary_Bool_Exp>;
};

export type Subscription_RootReading_Journals_Summary_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Reading_Journals_Summary_Stream_Cursor_Input>>;
  where?: InputMaybe<Reading_Journals_Summary_Bool_Exp>;
};

export type Subscription_RootRecommendationsArgs = {
  distinct_on?: InputMaybe<Array<Recommendations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Recommendations_Order_By>>;
  where?: InputMaybe<Recommendations_Bool_Exp>;
};

export type Subscription_RootRecommendations_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootRecommendations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Recommendations_Stream_Cursor_Input>>;
  where?: InputMaybe<Recommendations_Bool_Exp>;
};

export type Subscription_RootSeriesArgs = {
  distinct_on?: InputMaybe<Array<Series_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Series_Order_By>>;
  where?: InputMaybe<Series_Bool_Exp>;
};

export type Subscription_RootSeries_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootSeries_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Series_Stream_Cursor_Input>>;
  where?: InputMaybe<Series_Bool_Exp>;
};

export type Subscription_RootTag_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<Tag_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tag_Categories_Order_By>>;
  where?: InputMaybe<Tag_Categories_Bool_Exp>;
};

export type Subscription_RootTag_Categories_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootTag_Categories_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Tag_Categories_Stream_Cursor_Input>>;
  where?: InputMaybe<Tag_Categories_Bool_Exp>;
};

export type Subscription_RootTaggable_CountsArgs = {
  distinct_on?: InputMaybe<Array<Taggable_Counts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggable_Counts_Order_By>>;
  where?: InputMaybe<Taggable_Counts_Bool_Exp>;
};

export type Subscription_RootTaggable_Counts_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootTaggable_Counts_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Taggable_Counts_Stream_Cursor_Input>>;
  where?: InputMaybe<Taggable_Counts_Bool_Exp>;
};

export type Subscription_RootTaggingsArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

export type Subscription_RootTaggings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

export type Subscription_RootTaggings_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootTaggings_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Taggings_Stream_Cursor_Input>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

export type Subscription_RootTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

export type Subscription_RootTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

export type Subscription_RootTags_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootTags_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Tags_Stream_Cursor_Input>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

export type Subscription_RootUser_BlocksArgs = {
  distinct_on?: InputMaybe<Array<User_Blocks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Blocks_Order_By>>;
  where?: InputMaybe<User_Blocks_Bool_Exp>;
};

export type Subscription_RootUser_Blocks_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootUser_Blocks_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<User_Blocks_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Blocks_Bool_Exp>;
};

export type Subscription_RootUser_Book_ReadsArgs = {
  distinct_on?: InputMaybe<Array<User_Book_Reads_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Book_Reads_Order_By>>;
  where?: InputMaybe<User_Book_Reads_Bool_Exp>;
};

export type Subscription_RootUser_Book_Reads_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Book_Reads_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Book_Reads_Order_By>>;
  where?: InputMaybe<User_Book_Reads_Bool_Exp>;
};

export type Subscription_RootUser_Book_Reads_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootUser_Book_Reads_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<User_Book_Reads_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Book_Reads_Bool_Exp>;
};

export type Subscription_RootUser_Book_StatusesArgs = {
  distinct_on?: InputMaybe<Array<User_Book_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Book_Statuses_Order_By>>;
  where?: InputMaybe<User_Book_Statuses_Bool_Exp>;
};

export type Subscription_RootUser_Book_Statuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Book_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Book_Statuses_Order_By>>;
  where?: InputMaybe<User_Book_Statuses_Bool_Exp>;
};

export type Subscription_RootUser_Book_Statuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootUser_Book_Statuses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<User_Book_Statuses_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Book_Statuses_Bool_Exp>;
};

export type Subscription_RootUser_BooksArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

export type Subscription_RootUser_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

export type Subscription_RootUser_Books_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootUser_Books_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<User_Books_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

export type Subscription_RootUser_FlagsArgs = {
  distinct_on?: InputMaybe<Array<User_Flags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Flags_Order_By>>;
  where?: InputMaybe<User_Flags_Bool_Exp>;
};

export type Subscription_RootUser_Flags_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootUser_Flags_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<User_Flags_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Flags_Bool_Exp>;
};

export type Subscription_RootUser_ReferralsArgs = {
  distinct_on?: InputMaybe<Array<User_Referrals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Referrals_Order_By>>;
  where?: InputMaybe<User_Referrals_Bool_Exp>;
};

export type Subscription_RootUser_Referrals_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

export type Subscription_RootUser_Referrals_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<User_Referrals_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Referrals_Bool_Exp>;
};

export type Subscription_RootUser_StatusesArgs = {
  distinct_on?: InputMaybe<Array<User_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Statuses_Order_By>>;
  where?: InputMaybe<User_Statuses_Bool_Exp>;
};

export type Subscription_RootUser_Statuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootUser_Statuses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<User_Statuses_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Statuses_Bool_Exp>;
};

export type Subscription_RootUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};

export type Subscription_RootUsers_Aggregate_By_Created_At_DateArgs = {
  distinct_on?: InputMaybe<Array<Users_Aggregate_By_Created_At_Date_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Aggregate_By_Created_At_Date_Order_By>>;
  where?: InputMaybe<Users_Aggregate_By_Created_At_Date_Bool_Exp>;
};

export type Subscription_RootUsers_Aggregate_By_Created_At_Date_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Users_Aggregate_By_Created_At_Date_Stream_Cursor_Input>>;
  where?: InputMaybe<Users_Aggregate_By_Created_At_Date_Bool_Exp>;
};

export type Subscription_RootUsers_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootUsers_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Users_Stream_Cursor_Input>>;
  where?: InputMaybe<Users_Bool_Exp>;
};

/** columns and relationships of "tag_categories" */
export type Tag_Categories = {
  __typename?: 'tag_categories';
  category?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id: Scalars['bigint']['output'];
  slug?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  tags: Array<Tags>;
  /** An aggregate relationship */
  tags_aggregate: Tags_Aggregate;
};

/** columns and relationships of "tag_categories" */
export type Tag_CategoriesTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

/** columns and relationships of "tag_categories" */
export type Tag_CategoriesTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "tag_categories". All fields are combined with a logical 'AND'. */
export type Tag_Categories_Bool_Exp = {
  _and?: InputMaybe<Array<Tag_Categories_Bool_Exp>>;
  _not?: InputMaybe<Tag_Categories_Bool_Exp>;
  _or?: InputMaybe<Array<Tag_Categories_Bool_Exp>>;
  category?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  tags?: InputMaybe<Tags_Bool_Exp>;
  tags_aggregate?: InputMaybe<Tags_Aggregate_Bool_Exp>;
};

/** Ordering options when selecting data from "tag_categories". */
export type Tag_Categories_Order_By = {
  category?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  tags_aggregate?: InputMaybe<Tags_Aggregate_Order_By>;
};

/** select columns of table "tag_categories" */
export enum Tag_Categories_Select_Column {
  /** column name */
  Category = 'category',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
}

/** Streaming cursor of the table "tag_categories" */
export type Tag_Categories_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Tag_Categories_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Tag_Categories_Stream_Cursor_Value_Input = {
  category?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "taggable_counts" */
export type Taggable_Counts = {
  __typename?: 'taggable_counts';
  /** An object relationship */
  book?: Maybe<Books>;
  count: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  hardcover_tagged: Scalars['Boolean']['output'];
  id: Scalars['bigint']['output'];
  spoiler_ratio?: Maybe<Scalars['float8']['output']>;
  /** An object relationship */
  tag?: Maybe<Tags>;
  tag_id: Scalars['Int']['output'];
  taggable_id: Scalars['bigint']['output'];
  taggable_type: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** order by aggregate values of table "taggable_counts" */
export type Taggable_Counts_Aggregate_Order_By = {
  avg?: InputMaybe<Taggable_Counts_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Taggable_Counts_Max_Order_By>;
  min?: InputMaybe<Taggable_Counts_Min_Order_By>;
  stddev?: InputMaybe<Taggable_Counts_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Taggable_Counts_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Taggable_Counts_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Taggable_Counts_Sum_Order_By>;
  var_pop?: InputMaybe<Taggable_Counts_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Taggable_Counts_Var_Samp_Order_By>;
  variance?: InputMaybe<Taggable_Counts_Variance_Order_By>;
};

/** order by avg() on columns of table "taggable_counts" */
export type Taggable_Counts_Avg_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "taggable_counts". All fields are combined with a logical 'AND'. */
export type Taggable_Counts_Bool_Exp = {
  _and?: InputMaybe<Array<Taggable_Counts_Bool_Exp>>;
  _not?: InputMaybe<Taggable_Counts_Bool_Exp>;
  _or?: InputMaybe<Array<Taggable_Counts_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  count?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  hardcover_tagged?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  spoiler_ratio?: InputMaybe<Float8_Comparison_Exp>;
  tag?: InputMaybe<Tags_Bool_Exp>;
  tag_id?: InputMaybe<Int_Comparison_Exp>;
  taggable_id?: InputMaybe<Bigint_Comparison_Exp>;
  taggable_type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** order by max() on columns of table "taggable_counts" */
export type Taggable_Counts_Max_Order_By = {
  count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  taggable_type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "taggable_counts" */
export type Taggable_Counts_Min_Order_By = {
  count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  taggable_type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "taggable_counts". */
export type Taggable_Counts_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  hardcover_tagged?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag?: InputMaybe<Tags_Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  taggable_type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "taggable_counts" */
export enum Taggable_Counts_Select_Column {
  /** column name */
  Count = 'count',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  HardcoverTagged = 'hardcover_tagged',
  /** column name */
  Id = 'id',
  /** column name */
  SpoilerRatio = 'spoiler_ratio',
  /** column name */
  TagId = 'tag_id',
  /** column name */
  TaggableId = 'taggable_id',
  /** column name */
  TaggableType = 'taggable_type',
  /** column name */
  UpdatedAt = 'updated_at',
}

/** order by stddev() on columns of table "taggable_counts" */
export type Taggable_Counts_Stddev_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "taggable_counts" */
export type Taggable_Counts_Stddev_Pop_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "taggable_counts" */
export type Taggable_Counts_Stddev_Samp_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "taggable_counts" */
export type Taggable_Counts_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Taggable_Counts_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Taggable_Counts_Stream_Cursor_Value_Input = {
  count?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  hardcover_tagged?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  spoiler_ratio?: InputMaybe<Scalars['float8']['input']>;
  tag_id?: InputMaybe<Scalars['Int']['input']>;
  taggable_id?: InputMaybe<Scalars['bigint']['input']>;
  taggable_type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** order by sum() on columns of table "taggable_counts" */
export type Taggable_Counts_Sum_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "taggable_counts" */
export type Taggable_Counts_Var_Pop_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "taggable_counts" */
export type Taggable_Counts_Var_Samp_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "taggable_counts" */
export type Taggable_Counts_Variance_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler_ratio?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "taggings" */
export type Taggings = {
  __typename?: 'taggings';
  /** An object relationship */
  book?: Maybe<Books>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id: Scalars['bigint']['output'];
  spoiler: Scalars['Boolean']['output'];
  /** An object relationship */
  tag: Tags;
  tag_id: Scalars['Int']['output'];
  taggable_id?: Maybe<Scalars['bigint']['output']>;
  taggable_type?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
};

/** aggregated selection of "taggings" */
export type Taggings_Aggregate = {
  __typename?: 'taggings_aggregate';
  aggregate?: Maybe<Taggings_Aggregate_Fields>;
  nodes: Array<Taggings>;
};

export type Taggings_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Taggings_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Taggings_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Taggings_Aggregate_Bool_Exp_Count>;
};

export type Taggings_Aggregate_Bool_Exp_Bool_And = {
  arguments: Taggings_Select_Column_Taggings_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Taggings_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Taggings_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Taggings_Select_Column_Taggings_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Taggings_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Taggings_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Taggings_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Taggings_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "taggings" */
export type Taggings_Aggregate_Fields = {
  __typename?: 'taggings_aggregate_fields';
  avg?: Maybe<Taggings_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Taggings_Max_Fields>;
  min?: Maybe<Taggings_Min_Fields>;
  stddev?: Maybe<Taggings_Stddev_Fields>;
  stddev_pop?: Maybe<Taggings_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Taggings_Stddev_Samp_Fields>;
  sum?: Maybe<Taggings_Sum_Fields>;
  var_pop?: Maybe<Taggings_Var_Pop_Fields>;
  var_samp?: Maybe<Taggings_Var_Samp_Fields>;
  variance?: Maybe<Taggings_Variance_Fields>;
};

/** aggregate fields of "taggings" */
export type Taggings_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Taggings_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "taggings" */
export type Taggings_Aggregate_Order_By = {
  avg?: InputMaybe<Taggings_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Taggings_Max_Order_By>;
  min?: InputMaybe<Taggings_Min_Order_By>;
  stddev?: InputMaybe<Taggings_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Taggings_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Taggings_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Taggings_Sum_Order_By>;
  var_pop?: InputMaybe<Taggings_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Taggings_Var_Samp_Order_By>;
  variance?: InputMaybe<Taggings_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Taggings_Avg_Fields = {
  __typename?: 'taggings_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
  taggable_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "taggings" */
export type Taggings_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "taggings". All fields are combined with a logical 'AND'. */
export type Taggings_Bool_Exp = {
  _and?: InputMaybe<Array<Taggings_Bool_Exp>>;
  _not?: InputMaybe<Taggings_Bool_Exp>;
  _or?: InputMaybe<Array<Taggings_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  spoiler?: InputMaybe<Boolean_Comparison_Exp>;
  tag?: InputMaybe<Tags_Bool_Exp>;
  tag_id?: InputMaybe<Int_Comparison_Exp>;
  taggable_id?: InputMaybe<Bigint_Comparison_Exp>;
  taggable_type?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Taggings_Max_Fields = {
  __typename?: 'taggings_max_fields';
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tag_id?: Maybe<Scalars['Int']['output']>;
  taggable_id?: Maybe<Scalars['bigint']['output']>;
  taggable_type?: Maybe<Scalars['String']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "taggings" */
export type Taggings_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  taggable_type?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Taggings_Min_Fields = {
  __typename?: 'taggings_min_fields';
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tag_id?: Maybe<Scalars['Int']['output']>;
  taggable_id?: Maybe<Scalars['bigint']['output']>;
  taggable_type?: Maybe<Scalars['String']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "taggings" */
export type Taggings_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  taggable_type?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "taggings". */
export type Taggings_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  spoiler?: InputMaybe<Order_By>;
  tag?: InputMaybe<Tags_Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  taggable_type?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "taggings" */
export enum Taggings_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Spoiler = 'spoiler',
  /** column name */
  TagId = 'tag_id',
  /** column name */
  TaggableId = 'taggable_id',
  /** column name */
  TaggableType = 'taggable_type',
  /** column name */
  UserId = 'user_id',
}

/** select "taggings_aggregate_bool_exp_bool_and_arguments_columns" columns of table "taggings" */
export enum Taggings_Select_Column_Taggings_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Spoiler = 'spoiler',
}

/** select "taggings_aggregate_bool_exp_bool_or_arguments_columns" columns of table "taggings" */
export enum Taggings_Select_Column_Taggings_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Spoiler = 'spoiler',
}

/** aggregate stddev on columns */
export type Taggings_Stddev_Fields = {
  __typename?: 'taggings_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
  taggable_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "taggings" */
export type Taggings_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Taggings_Stddev_Pop_Fields = {
  __typename?: 'taggings_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
  taggable_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "taggings" */
export type Taggings_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Taggings_Stddev_Samp_Fields = {
  __typename?: 'taggings_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
  taggable_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "taggings" */
export type Taggings_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "taggings" */
export type Taggings_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Taggings_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Taggings_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  spoiler?: InputMaybe<Scalars['Boolean']['input']>;
  tag_id?: InputMaybe<Scalars['Int']['input']>;
  taggable_id?: InputMaybe<Scalars['bigint']['input']>;
  taggable_type?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Taggings_Sum_Fields = {
  __typename?: 'taggings_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  tag_id?: Maybe<Scalars['Int']['output']>;
  taggable_id?: Maybe<Scalars['bigint']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "taggings" */
export type Taggings_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Taggings_Var_Pop_Fields = {
  __typename?: 'taggings_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
  taggable_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "taggings" */
export type Taggings_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Taggings_Var_Samp_Fields = {
  __typename?: 'taggings_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
  taggable_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "taggings" */
export type Taggings_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Taggings_Variance_Fields = {
  __typename?: 'taggings_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
  taggable_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "taggings" */
export type Taggings_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggable_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "tags" */
export type Tags = {
  __typename?: 'tags';
  count: Scalars['Int']['output'];
  id: Scalars['bigint']['output'];
  slug: Scalars['String']['output'];
  tag: Scalars['String']['output'];
  /** An object relationship */
  tag_category: Tag_Categories;
  tag_category_id: Scalars['Int']['output'];
  /** An array relationship */
  taggings: Array<Taggings>;
  /** An aggregate relationship */
  taggings_aggregate: Taggings_Aggregate;
};

/** columns and relationships of "tags" */
export type TagsTaggingsArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

/** columns and relationships of "tags" */
export type TagsTaggings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

/** aggregated selection of "tags" */
export type Tags_Aggregate = {
  __typename?: 'tags_aggregate';
  aggregate?: Maybe<Tags_Aggregate_Fields>;
  nodes: Array<Tags>;
};

export type Tags_Aggregate_Bool_Exp = {
  count?: InputMaybe<Tags_Aggregate_Bool_Exp_Count>;
};

export type Tags_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Tags_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "tags" */
export type Tags_Aggregate_Fields = {
  __typename?: 'tags_aggregate_fields';
  avg?: Maybe<Tags_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Tags_Max_Fields>;
  min?: Maybe<Tags_Min_Fields>;
  stddev?: Maybe<Tags_Stddev_Fields>;
  stddev_pop?: Maybe<Tags_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tags_Stddev_Samp_Fields>;
  sum?: Maybe<Tags_Sum_Fields>;
  var_pop?: Maybe<Tags_Var_Pop_Fields>;
  var_samp?: Maybe<Tags_Var_Samp_Fields>;
  variance?: Maybe<Tags_Variance_Fields>;
};

/** aggregate fields of "tags" */
export type Tags_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "tags" */
export type Tags_Aggregate_Order_By = {
  avg?: InputMaybe<Tags_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Tags_Max_Order_By>;
  min?: InputMaybe<Tags_Min_Order_By>;
  stddev?: InputMaybe<Tags_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Tags_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Tags_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Tags_Sum_Order_By>;
  var_pop?: InputMaybe<Tags_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Tags_Var_Samp_Order_By>;
  variance?: InputMaybe<Tags_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Tags_Avg_Fields = {
  __typename?: 'tags_avg_fields';
  count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tag_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "tags" */
export type Tags_Avg_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tags". All fields are combined with a logical 'AND'. */
export type Tags_Bool_Exp = {
  _and?: InputMaybe<Array<Tags_Bool_Exp>>;
  _not?: InputMaybe<Tags_Bool_Exp>;
  _or?: InputMaybe<Array<Tags_Bool_Exp>>;
  count?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  tag?: InputMaybe<String_Comparison_Exp>;
  tag_category?: InputMaybe<Tag_Categories_Bool_Exp>;
  tag_category_id?: InputMaybe<Int_Comparison_Exp>;
  taggings?: InputMaybe<Taggings_Bool_Exp>;
  taggings_aggregate?: InputMaybe<Taggings_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Tags_Max_Fields = {
  __typename?: 'tags_max_fields';
  count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tag?: Maybe<Scalars['String']['output']>;
  tag_category_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "tags" */
export type Tags_Max_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  tag?: InputMaybe<Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Tags_Min_Fields = {
  __typename?: 'tags_min_fields';
  count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tag?: Maybe<Scalars['String']['output']>;
  tag_category_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "tags" */
export type Tags_Min_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  tag?: InputMaybe<Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "tags". */
export type Tags_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  tag?: InputMaybe<Order_By>;
  tag_category?: InputMaybe<Tag_Categories_Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
  taggings_aggregate?: InputMaybe<Taggings_Aggregate_Order_By>;
};

/** select columns of table "tags" */
export enum Tags_Select_Column {
  /** column name */
  Count = 'count',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Tag = 'tag',
  /** column name */
  TagCategoryId = 'tag_category_id',
}

/** aggregate stddev on columns */
export type Tags_Stddev_Fields = {
  __typename?: 'tags_stddev_fields';
  count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tag_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "tags" */
export type Tags_Stddev_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Tags_Stddev_Pop_Fields = {
  __typename?: 'tags_stddev_pop_fields';
  count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tag_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "tags" */
export type Tags_Stddev_Pop_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Tags_Stddev_Samp_Fields = {
  __typename?: 'tags_stddev_samp_fields';
  count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tag_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "tags" */
export type Tags_Stddev_Samp_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "tags" */
export type Tags_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Tags_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Tags_Stream_Cursor_Value_Input = {
  count?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tag?: InputMaybe<Scalars['String']['input']>;
  tag_category_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Tags_Sum_Fields = {
  __typename?: 'tags_sum_fields';
  count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tag_category_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "tags" */
export type Tags_Sum_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Tags_Var_Pop_Fields = {
  __typename?: 'tags_var_pop_fields';
  count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tag_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "tags" */
export type Tags_Var_Pop_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Tags_Var_Samp_Fields = {
  __typename?: 'tags_var_samp_fields';
  count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tag_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "tags" */
export type Tags_Var_Samp_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Tags_Variance_Fields = {
  __typename?: 'tags_variance_fields';
  count?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tag_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "tags" */
export type Tags_Variance_Order_By = {
  count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tag_category_id?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
export type Timestamp_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamp']['input']>;
  _gt?: InputMaybe<Scalars['timestamp']['input']>;
  _gte?: InputMaybe<Scalars['timestamp']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamp']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamp']['input']>;
  _lte?: InputMaybe<Scalars['timestamp']['input']>;
  _neq?: InputMaybe<Scalars['timestamp']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamp']['input']>>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']['input']>;
  _gt?: InputMaybe<Scalars['timestamptz']['input']>;
  _gte?: InputMaybe<Scalars['timestamptz']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamptz']['input']>;
  _lte?: InputMaybe<Scalars['timestamptz']['input']>;
  _neq?: InputMaybe<Scalars['timestamptz']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
};

export type Update_User_Input = {
  account_privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  activity_privacy_settings_id?: InputMaybe<Scalars['Int']['input']>;
  bio?: InputMaybe<Scalars['String']['input']>;
  birthdate?: InputMaybe<Scalars['date']['input']>;
  cover?: InputMaybe<Scalars['String']['input']>;
  current_password?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  onboarded?: InputMaybe<Scalars['Boolean']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  password_confirmation?: InputMaybe<Scalars['String']['input']>;
  pronoun_personal?: InputMaybe<Scalars['String']['input']>;
  pronoun_possessive?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "user_blocks" */
export type User_Blocks = {
  __typename?: 'user_blocks';
  /** An object relationship */
  blocked_user?: Maybe<Users>;
  blocked_user_id?: Maybe<Scalars['Int']['output']>;
  created_at: Scalars['timestamp']['output'];
  id: Scalars['bigint']['output'];
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by aggregate values of table "user_blocks" */
export type User_Blocks_Aggregate_Order_By = {
  avg?: InputMaybe<User_Blocks_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Blocks_Max_Order_By>;
  min?: InputMaybe<User_Blocks_Min_Order_By>;
  stddev?: InputMaybe<User_Blocks_Stddev_Order_By>;
  stddev_pop?: InputMaybe<User_Blocks_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<User_Blocks_Stddev_Samp_Order_By>;
  sum?: InputMaybe<User_Blocks_Sum_Order_By>;
  var_pop?: InputMaybe<User_Blocks_Var_Pop_Order_By>;
  var_samp?: InputMaybe<User_Blocks_Var_Samp_Order_By>;
  variance?: InputMaybe<User_Blocks_Variance_Order_By>;
};

/** order by avg() on columns of table "user_blocks" */
export type User_Blocks_Avg_Order_By = {
  blocked_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "user_blocks". All fields are combined with a logical 'AND'. */
export type User_Blocks_Bool_Exp = {
  _and?: InputMaybe<Array<User_Blocks_Bool_Exp>>;
  _not?: InputMaybe<User_Blocks_Bool_Exp>;
  _or?: InputMaybe<Array<User_Blocks_Bool_Exp>>;
  blocked_user?: InputMaybe<Users_Bool_Exp>;
  blocked_user_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_blocks" */
export enum User_Blocks_Constraint {
  /** unique or primary key constraint on columns "user_id", "blocked_user_id" */
  IndexUserBlocksOnUserIdAndBlockedUserId = 'index_user_blocks_on_user_id_and_blocked_user_id',
  /** unique or primary key constraint on columns "id" */
  UserBlocksPkey = 'user_blocks_pkey',
}

/** input type for inserting data into table "user_blocks" */
export type User_Blocks_Insert_Input = {
  blocked_user_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by max() on columns of table "user_blocks" */
export type User_Blocks_Max_Order_By = {
  blocked_user_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "user_blocks" */
export type User_Blocks_Min_Order_By = {
  blocked_user_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_blocks" */
export type User_Blocks_Mutation_Response = {
  __typename?: 'user_blocks_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Blocks>;
};

/** on_conflict condition type for table "user_blocks" */
export type User_Blocks_On_Conflict = {
  constraint: User_Blocks_Constraint;
  update_columns?: Array<User_Blocks_Update_Column>;
  where?: InputMaybe<User_Blocks_Bool_Exp>;
};

/** Ordering options when selecting data from "user_blocks". */
export type User_Blocks_Order_By = {
  blocked_user?: InputMaybe<Users_Order_By>;
  blocked_user_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "user_blocks" */
export enum User_Blocks_Select_Column {
  /** column name */
  BlockedUserId = 'blocked_user_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  UserId = 'user_id',
}

/** order by stddev() on columns of table "user_blocks" */
export type User_Blocks_Stddev_Order_By = {
  blocked_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "user_blocks" */
export type User_Blocks_Stddev_Pop_Order_By = {
  blocked_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "user_blocks" */
export type User_Blocks_Stddev_Samp_Order_By = {
  blocked_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "user_blocks" */
export type User_Blocks_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Blocks_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Blocks_Stream_Cursor_Value_Input = {
  blocked_user_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "user_blocks" */
export type User_Blocks_Sum_Order_By = {
  blocked_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** placeholder for update columns of table "user_blocks" (current role has no relevant permissions) */
export enum User_Blocks_Update_Column {
  /** placeholder (do not use) */
  Placeholder = '_PLACEHOLDER',
}

/** order by var_pop() on columns of table "user_blocks" */
export type User_Blocks_Var_Pop_Order_By = {
  blocked_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "user_blocks" */
export type User_Blocks_Var_Samp_Order_By = {
  blocked_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "user_blocks" */
export type User_Blocks_Variance_Order_By = {
  blocked_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "user_book_reads" */
export type User_Book_Reads = {
  __typename?: 'user_book_reads';
  /** An object relationship */
  edition?: Maybe<Editions>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  finished_at?: Maybe<Scalars['date']['output']>;
  id: Scalars['Int']['output'];
  paused_at?: Maybe<Scalars['date']['output']>;
  progress?: Maybe<Scalars['float8']['output']>;
  progress_pages?: Maybe<Scalars['Int']['output']>;
  progress_seconds?: Maybe<Scalars['Int']['output']>;
  started_at?: Maybe<Scalars['date']['output']>;
  /** An object relationship */
  user_book?: Maybe<User_Books>;
  user_book_id: Scalars['Int']['output'];
};

/** aggregated selection of "user_book_reads" */
export type User_Book_Reads_Aggregate = {
  __typename?: 'user_book_reads_aggregate';
  aggregate?: Maybe<User_Book_Reads_Aggregate_Fields>;
  nodes: Array<User_Book_Reads>;
};

export type User_Book_Reads_Aggregate_Bool_Exp = {
  avg?: InputMaybe<User_Book_Reads_Aggregate_Bool_Exp_Avg>;
  corr?: InputMaybe<User_Book_Reads_Aggregate_Bool_Exp_Corr>;
  count?: InputMaybe<User_Book_Reads_Aggregate_Bool_Exp_Count>;
  covar_samp?: InputMaybe<User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp>;
  max?: InputMaybe<User_Book_Reads_Aggregate_Bool_Exp_Max>;
  min?: InputMaybe<User_Book_Reads_Aggregate_Bool_Exp_Min>;
  stddev_samp?: InputMaybe<User_Book_Reads_Aggregate_Bool_Exp_Stddev_Samp>;
  sum?: InputMaybe<User_Book_Reads_Aggregate_Bool_Exp_Sum>;
  var_samp?: InputMaybe<User_Book_Reads_Aggregate_Bool_Exp_Var_Samp>;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Avg = {
  arguments: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Avg_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Book_Reads_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Corr = {
  arguments: User_Book_Reads_Aggregate_Bool_Exp_Corr_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Book_Reads_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Corr_Arguments = {
  X: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Corr_Arguments_Columns;
  Y: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Corr_Arguments_Columns;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<User_Book_Reads_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Book_Reads_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp = {
  arguments: User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Book_Reads_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp_Arguments = {
  X: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
  Y: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Max = {
  arguments: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Max_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Book_Reads_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Min = {
  arguments: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Min_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Book_Reads_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Stddev_Samp = {
  arguments: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Book_Reads_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Sum = {
  arguments: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Sum_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Book_Reads_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Book_Reads_Aggregate_Bool_Exp_Var_Samp = {
  arguments: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Book_Reads_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

/** aggregate fields of "user_book_reads" */
export type User_Book_Reads_Aggregate_Fields = {
  __typename?: 'user_book_reads_aggregate_fields';
  avg?: Maybe<User_Book_Reads_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<User_Book_Reads_Max_Fields>;
  min?: Maybe<User_Book_Reads_Min_Fields>;
  stddev?: Maybe<User_Book_Reads_Stddev_Fields>;
  stddev_pop?: Maybe<User_Book_Reads_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<User_Book_Reads_Stddev_Samp_Fields>;
  sum?: Maybe<User_Book_Reads_Sum_Fields>;
  var_pop?: Maybe<User_Book_Reads_Var_Pop_Fields>;
  var_samp?: Maybe<User_Book_Reads_Var_Samp_Fields>;
  variance?: Maybe<User_Book_Reads_Variance_Fields>;
};

/** aggregate fields of "user_book_reads" */
export type User_Book_Reads_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Book_Reads_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "user_book_reads" */
export type User_Book_Reads_Aggregate_Order_By = {
  avg?: InputMaybe<User_Book_Reads_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Book_Reads_Max_Order_By>;
  min?: InputMaybe<User_Book_Reads_Min_Order_By>;
  stddev?: InputMaybe<User_Book_Reads_Stddev_Order_By>;
  stddev_pop?: InputMaybe<User_Book_Reads_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<User_Book_Reads_Stddev_Samp_Order_By>;
  sum?: InputMaybe<User_Book_Reads_Sum_Order_By>;
  var_pop?: InputMaybe<User_Book_Reads_Var_Pop_Order_By>;
  var_samp?: InputMaybe<User_Book_Reads_Var_Samp_Order_By>;
  variance?: InputMaybe<User_Book_Reads_Variance_Order_By>;
};

/** aggregate avg on columns */
export type User_Book_Reads_Avg_Fields = {
  __typename?: 'user_book_reads_avg_fields';
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  progress?: Maybe<Scalars['Float']['output']>;
  progress_pages?: Maybe<Scalars['Float']['output']>;
  progress_seconds?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "user_book_reads" */
export type User_Book_Reads_Avg_Order_By = {
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "user_book_reads". All fields are combined with a logical 'AND'. */
export type User_Book_Reads_Bool_Exp = {
  _and?: InputMaybe<Array<User_Book_Reads_Bool_Exp>>;
  _not?: InputMaybe<User_Book_Reads_Bool_Exp>;
  _or?: InputMaybe<Array<User_Book_Reads_Bool_Exp>>;
  edition?: InputMaybe<Editions_Bool_Exp>;
  edition_id?: InputMaybe<Int_Comparison_Exp>;
  finished_at?: InputMaybe<Date_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  paused_at?: InputMaybe<Date_Comparison_Exp>;
  progress?: InputMaybe<Float8_Comparison_Exp>;
  progress_pages?: InputMaybe<Int_Comparison_Exp>;
  progress_seconds?: InputMaybe<Int_Comparison_Exp>;
  started_at?: InputMaybe<Date_Comparison_Exp>;
  user_book?: InputMaybe<User_Books_Bool_Exp>;
  user_book_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type User_Book_Reads_Max_Fields = {
  __typename?: 'user_book_reads_max_fields';
  edition_id?: Maybe<Scalars['Int']['output']>;
  finished_at?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  paused_at?: Maybe<Scalars['date']['output']>;
  progress?: Maybe<Scalars['float8']['output']>;
  progress_pages?: Maybe<Scalars['Int']['output']>;
  progress_seconds?: Maybe<Scalars['Int']['output']>;
  started_at?: Maybe<Scalars['date']['output']>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "user_book_reads" */
export type User_Book_Reads_Max_Order_By = {
  edition_id?: InputMaybe<Order_By>;
  finished_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paused_at?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  started_at?: InputMaybe<Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Book_Reads_Min_Fields = {
  __typename?: 'user_book_reads_min_fields';
  edition_id?: Maybe<Scalars['Int']['output']>;
  finished_at?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  paused_at?: Maybe<Scalars['date']['output']>;
  progress?: Maybe<Scalars['float8']['output']>;
  progress_pages?: Maybe<Scalars['Int']['output']>;
  progress_seconds?: Maybe<Scalars['Int']['output']>;
  started_at?: Maybe<Scalars['date']['output']>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "user_book_reads" */
export type User_Book_Reads_Min_Order_By = {
  edition_id?: InputMaybe<Order_By>;
  finished_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paused_at?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  started_at?: InputMaybe<Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "user_book_reads". */
export type User_Book_Reads_Order_By = {
  edition?: InputMaybe<Editions_Order_By>;
  edition_id?: InputMaybe<Order_By>;
  finished_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paused_at?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  started_at?: InputMaybe<Order_By>;
  user_book?: InputMaybe<User_Books_Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** select columns of table "user_book_reads" */
export enum User_Book_Reads_Select_Column {
  /** column name */
  EditionId = 'edition_id',
  /** column name */
  FinishedAt = 'finished_at',
  /** column name */
  Id = 'id',
  /** column name */
  PausedAt = 'paused_at',
  /** column name */
  Progress = 'progress',
  /** column name */
  ProgressPages = 'progress_pages',
  /** column name */
  ProgressSeconds = 'progress_seconds',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  UserBookId = 'user_book_id',
}

/** select "user_book_reads_aggregate_bool_exp_avg_arguments_columns" columns of table "user_book_reads" */
export enum User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Avg_Arguments_Columns {
  /** column name */
  Progress = 'progress',
}

/** select "user_book_reads_aggregate_bool_exp_corr_arguments_columns" columns of table "user_book_reads" */
export enum User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Corr_Arguments_Columns {
  /** column name */
  Progress = 'progress',
}

/** select "user_book_reads_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "user_book_reads" */
export enum User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns {
  /** column name */
  Progress = 'progress',
}

/** select "user_book_reads_aggregate_bool_exp_max_arguments_columns" columns of table "user_book_reads" */
export enum User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Max_Arguments_Columns {
  /** column name */
  Progress = 'progress',
}

/** select "user_book_reads_aggregate_bool_exp_min_arguments_columns" columns of table "user_book_reads" */
export enum User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Min_Arguments_Columns {
  /** column name */
  Progress = 'progress',
}

/** select "user_book_reads_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "user_book_reads" */
export enum User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns {
  /** column name */
  Progress = 'progress',
}

/** select "user_book_reads_aggregate_bool_exp_sum_arguments_columns" columns of table "user_book_reads" */
export enum User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Sum_Arguments_Columns {
  /** column name */
  Progress = 'progress',
}

/** select "user_book_reads_aggregate_bool_exp_var_samp_arguments_columns" columns of table "user_book_reads" */
export enum User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns {
  /** column name */
  Progress = 'progress',
}

/** aggregate stddev on columns */
export type User_Book_Reads_Stddev_Fields = {
  __typename?: 'user_book_reads_stddev_fields';
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  progress?: Maybe<Scalars['Float']['output']>;
  progress_pages?: Maybe<Scalars['Float']['output']>;
  progress_seconds?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "user_book_reads" */
export type User_Book_Reads_Stddev_Order_By = {
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type User_Book_Reads_Stddev_Pop_Fields = {
  __typename?: 'user_book_reads_stddev_pop_fields';
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  progress?: Maybe<Scalars['Float']['output']>;
  progress_pages?: Maybe<Scalars['Float']['output']>;
  progress_seconds?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "user_book_reads" */
export type User_Book_Reads_Stddev_Pop_Order_By = {
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type User_Book_Reads_Stddev_Samp_Fields = {
  __typename?: 'user_book_reads_stddev_samp_fields';
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  progress?: Maybe<Scalars['Float']['output']>;
  progress_pages?: Maybe<Scalars['Float']['output']>;
  progress_seconds?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "user_book_reads" */
export type User_Book_Reads_Stddev_Samp_Order_By = {
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "user_book_reads" */
export type User_Book_Reads_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Book_Reads_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Book_Reads_Stream_Cursor_Value_Input = {
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  finished_at?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paused_at?: InputMaybe<Scalars['date']['input']>;
  progress?: InputMaybe<Scalars['float8']['input']>;
  progress_pages?: InputMaybe<Scalars['Int']['input']>;
  progress_seconds?: InputMaybe<Scalars['Int']['input']>;
  started_at?: InputMaybe<Scalars['date']['input']>;
  user_book_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type User_Book_Reads_Sum_Fields = {
  __typename?: 'user_book_reads_sum_fields';
  edition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  progress?: Maybe<Scalars['float8']['output']>;
  progress_pages?: Maybe<Scalars['Int']['output']>;
  progress_seconds?: Maybe<Scalars['Int']['output']>;
  user_book_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "user_book_reads" */
export type User_Book_Reads_Sum_Order_By = {
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type User_Book_Reads_Var_Pop_Fields = {
  __typename?: 'user_book_reads_var_pop_fields';
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  progress?: Maybe<Scalars['Float']['output']>;
  progress_pages?: Maybe<Scalars['Float']['output']>;
  progress_seconds?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "user_book_reads" */
export type User_Book_Reads_Var_Pop_Order_By = {
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type User_Book_Reads_Var_Samp_Fields = {
  __typename?: 'user_book_reads_var_samp_fields';
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  progress?: Maybe<Scalars['Float']['output']>;
  progress_pages?: Maybe<Scalars['Float']['output']>;
  progress_seconds?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "user_book_reads" */
export type User_Book_Reads_Var_Samp_Order_By = {
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type User_Book_Reads_Variance_Fields = {
  __typename?: 'user_book_reads_variance_fields';
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  progress?: Maybe<Scalars['Float']['output']>;
  progress_pages?: Maybe<Scalars['Float']['output']>;
  progress_seconds?: Maybe<Scalars['Float']['output']>;
  user_book_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "user_book_reads" */
export type User_Book_Reads_Variance_Order_By = {
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  progress?: InputMaybe<Order_By>;
  progress_pages?: InputMaybe<Order_By>;
  progress_seconds?: InputMaybe<Order_By>;
  user_book_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "user_book_statuses" */
export type User_Book_Statuses = {
  __typename?: 'user_book_statuses';
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  slug?: Maybe<Scalars['String']['output']>;
  status: Scalars['String']['output'];
  /** An array relationship */
  user_books: Array<User_Books>;
  /** An aggregate relationship */
  user_books_aggregate: User_Books_Aggregate;
};

/** columns and relationships of "user_book_statuses" */
export type User_Book_StatusesUser_BooksArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** columns and relationships of "user_book_statuses" */
export type User_Book_StatusesUser_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** aggregated selection of "user_book_statuses" */
export type User_Book_Statuses_Aggregate = {
  __typename?: 'user_book_statuses_aggregate';
  aggregate?: Maybe<User_Book_Statuses_Aggregate_Fields>;
  nodes: Array<User_Book_Statuses>;
};

/** aggregate fields of "user_book_statuses" */
export type User_Book_Statuses_Aggregate_Fields = {
  __typename?: 'user_book_statuses_aggregate_fields';
  avg?: Maybe<User_Book_Statuses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<User_Book_Statuses_Max_Fields>;
  min?: Maybe<User_Book_Statuses_Min_Fields>;
  stddev?: Maybe<User_Book_Statuses_Stddev_Fields>;
  stddev_pop?: Maybe<User_Book_Statuses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<User_Book_Statuses_Stddev_Samp_Fields>;
  sum?: Maybe<User_Book_Statuses_Sum_Fields>;
  var_pop?: Maybe<User_Book_Statuses_Var_Pop_Fields>;
  var_samp?: Maybe<User_Book_Statuses_Var_Samp_Fields>;
  variance?: Maybe<User_Book_Statuses_Variance_Fields>;
};

/** aggregate fields of "user_book_statuses" */
export type User_Book_Statuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Book_Statuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type User_Book_Statuses_Avg_Fields = {
  __typename?: 'user_book_statuses_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "user_book_statuses". All fields are combined with a logical 'AND'. */
export type User_Book_Statuses_Bool_Exp = {
  _and?: InputMaybe<Array<User_Book_Statuses_Bool_Exp>>;
  _not?: InputMaybe<User_Book_Statuses_Bool_Exp>;
  _or?: InputMaybe<Array<User_Book_Statuses_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  user_books?: InputMaybe<User_Books_Bool_Exp>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type User_Book_Statuses_Max_Fields = {
  __typename?: 'user_book_statuses_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type User_Book_Statuses_Min_Fields = {
  __typename?: 'user_book_statuses_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "user_book_statuses". */
export type User_Book_Statuses_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Order_By>;
};

/** select columns of table "user_book_statuses" */
export enum User_Book_Statuses_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Status = 'status',
}

/** aggregate stddev on columns */
export type User_Book_Statuses_Stddev_Fields = {
  __typename?: 'user_book_statuses_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type User_Book_Statuses_Stddev_Pop_Fields = {
  __typename?: 'user_book_statuses_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type User_Book_Statuses_Stddev_Samp_Fields = {
  __typename?: 'user_book_statuses_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "user_book_statuses" */
export type User_Book_Statuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Book_Statuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Book_Statuses_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type User_Book_Statuses_Sum_Fields = {
  __typename?: 'user_book_statuses_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type User_Book_Statuses_Var_Pop_Fields = {
  __typename?: 'user_book_statuses_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type User_Book_Statuses_Var_Samp_Fields = {
  __typename?: 'user_book_statuses_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type User_Book_Statuses_Variance_Fields = {
  __typename?: 'user_book_statuses_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "user_books" */
export type User_Books = {
  __typename?: 'user_books';
  /** An object relationship */
  book: Books;
  book_id: Scalars['Int']['output'];
  cached_match_score?: Maybe<Scalars['float8']['output']>;
  created_at: Scalars['timestamptz']['output'];
  date_added: Scalars['date']['output'];
  /** An object relationship */
  edition?: Maybe<Editions>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  first_read_date?: Maybe<Scalars['date']['output']>;
  first_started_reading_date?: Maybe<Scalars['date']['output']>;
  /** An array relationship */
  followers: Array<Followed_Users>;
  has_review: Scalars['Boolean']['output'];
  id: Scalars['Int']['output'];
  imported?: Maybe<Scalars['Boolean']['output']>;
  last_read_date?: Maybe<Scalars['date']['output']>;
  /** An array relationship */
  likes: Array<Likes>;
  likes_count: Scalars['Int']['output'];
  media_url?: Maybe<Scalars['String']['output']>;
  merged_at?: Maybe<Scalars['timestamp']['output']>;
  object_type: Scalars['String']['output'];
  original_book_id?: Maybe<Scalars['Int']['output']>;
  original_edition_id?: Maybe<Scalars['Int']['output']>;
  owned: Scalars['Boolean']['output'];
  owned_copies?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  privacy_setting: Privacy_Settings;
  privacy_setting_id: Scalars['Int']['output'];
  private_notes?: Maybe<Scalars['String']['output']>;
  rating?: Maybe<Scalars['numeric']['output']>;
  read_count: Scalars['Int']['output'];
  /** An object relationship */
  reading_format?: Maybe<Reading_Formats>;
  reading_format_id: Scalars['Int']['output'];
  /** An object relationship */
  reading_journal_summary?: Maybe<Reading_Journals_Summary>;
  /** An array relationship */
  reading_journals: Array<Reading_Journals>;
  recommended_by?: Maybe<Scalars['String']['output']>;
  recommended_for?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  referrer?: Maybe<Users>;
  referrer_user_id?: Maybe<Scalars['Int']['output']>;
  review?: Maybe<Scalars['String']['output']>;
  review_has_spoilers: Scalars['Boolean']['output'];
  review_html?: Maybe<Scalars['String']['output']>;
  review_length: Scalars['Int']['output'];
  review_migrated?: Maybe<Scalars['Boolean']['output']>;
  review_object: Scalars['jsonb']['output'];
  review_raw?: Maybe<Scalars['String']['output']>;
  review_slate: Scalars['jsonb']['output'];
  reviewed_at?: Maybe<Scalars['timestamp']['output']>;
  sponsored_review: Scalars['Boolean']['output'];
  starred: Scalars['Boolean']['output'];
  status_id: Scalars['Int']['output'];
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  user: Users;
  /** An array relationship */
  user_book_reads: Array<User_Book_Reads>;
  /** An aggregate relationship */
  user_book_reads_aggregate: User_Book_Reads_Aggregate;
  /** An object relationship */
  user_book_status: User_Book_Statuses;
  /** An array relationship */
  user_books: Array<User_Books>;
  /** An aggregate relationship */
  user_books_aggregate: User_Books_Aggregate;
  user_id: Scalars['Int']['output'];
};

/** columns and relationships of "user_books" */
export type User_BooksFollowersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

/** columns and relationships of "user_books" */
export type User_BooksLikesArgs = {
  distinct_on?: InputMaybe<Array<Likes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Likes_Order_By>>;
  where?: InputMaybe<Likes_Bool_Exp>;
};

/** columns and relationships of "user_books" */
export type User_BooksReading_JournalsArgs = {
  distinct_on?: InputMaybe<Array<Reading_Journals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reading_Journals_Order_By>>;
  where?: InputMaybe<Reading_Journals_Bool_Exp>;
};

/** columns and relationships of "user_books" */
export type User_BooksReview_ObjectArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "user_books" */
export type User_BooksReview_SlateArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "user_books" */
export type User_BooksUser_Book_ReadsArgs = {
  distinct_on?: InputMaybe<Array<User_Book_Reads_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Book_Reads_Order_By>>;
  where?: InputMaybe<User_Book_Reads_Bool_Exp>;
};

/** columns and relationships of "user_books" */
export type User_BooksUser_Book_Reads_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Book_Reads_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Book_Reads_Order_By>>;
  where?: InputMaybe<User_Book_Reads_Bool_Exp>;
};

/** columns and relationships of "user_books" */
export type User_BooksUser_BooksArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** columns and relationships of "user_books" */
export type User_BooksUser_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** aggregated selection of "user_books" */
export type User_Books_Aggregate = {
  __typename?: 'user_books_aggregate';
  aggregate?: Maybe<User_Books_Aggregate_Fields>;
  nodes: Array<User_Books>;
};

export type User_Books_Aggregate_Bool_Exp = {
  avg?: InputMaybe<User_Books_Aggregate_Bool_Exp_Avg>;
  bool_and?: InputMaybe<User_Books_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<User_Books_Aggregate_Bool_Exp_Bool_Or>;
  corr?: InputMaybe<User_Books_Aggregate_Bool_Exp_Corr>;
  count?: InputMaybe<User_Books_Aggregate_Bool_Exp_Count>;
  covar_samp?: InputMaybe<User_Books_Aggregate_Bool_Exp_Covar_Samp>;
  max?: InputMaybe<User_Books_Aggregate_Bool_Exp_Max>;
  min?: InputMaybe<User_Books_Aggregate_Bool_Exp_Min>;
  stddev_samp?: InputMaybe<User_Books_Aggregate_Bool_Exp_Stddev_Samp>;
  sum?: InputMaybe<User_Books_Aggregate_Bool_Exp_Sum>;
  var_samp?: InputMaybe<User_Books_Aggregate_Bool_Exp_Var_Samp>;
};

export type User_Books_Aggregate_Bool_Exp_Avg = {
  arguments: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Avg_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Books_Aggregate_Bool_Exp_Bool_And = {
  arguments: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type User_Books_Aggregate_Bool_Exp_Bool_Or = {
  arguments: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type User_Books_Aggregate_Bool_Exp_Corr = {
  arguments: User_Books_Aggregate_Bool_Exp_Corr_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Books_Aggregate_Bool_Exp_Corr_Arguments = {
  X: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Corr_Arguments_Columns;
  Y: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Corr_Arguments_Columns;
};

export type User_Books_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<User_Books_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

export type User_Books_Aggregate_Bool_Exp_Covar_Samp = {
  arguments: User_Books_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Books_Aggregate_Bool_Exp_Covar_Samp_Arguments = {
  X: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
  Y: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
};

export type User_Books_Aggregate_Bool_Exp_Max = {
  arguments: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Max_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Books_Aggregate_Bool_Exp_Min = {
  arguments: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Min_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Books_Aggregate_Bool_Exp_Stddev_Samp = {
  arguments: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Books_Aggregate_Bool_Exp_Sum = {
  arguments: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Sum_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type User_Books_Aggregate_Bool_Exp_Var_Samp = {
  arguments: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Books_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

/** aggregate fields of "user_books" */
export type User_Books_Aggregate_Fields = {
  __typename?: 'user_books_aggregate_fields';
  avg?: Maybe<User_Books_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<User_Books_Max_Fields>;
  min?: Maybe<User_Books_Min_Fields>;
  stddev?: Maybe<User_Books_Stddev_Fields>;
  stddev_pop?: Maybe<User_Books_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<User_Books_Stddev_Samp_Fields>;
  sum?: Maybe<User_Books_Sum_Fields>;
  var_pop?: Maybe<User_Books_Var_Pop_Fields>;
  var_samp?: Maybe<User_Books_Var_Samp_Fields>;
  variance?: Maybe<User_Books_Variance_Fields>;
};

/** aggregate fields of "user_books" */
export type User_Books_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Books_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "user_books" */
export type User_Books_Aggregate_Order_By = {
  avg?: InputMaybe<User_Books_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Books_Max_Order_By>;
  min?: InputMaybe<User_Books_Min_Order_By>;
  stddev?: InputMaybe<User_Books_Stddev_Order_By>;
  stddev_pop?: InputMaybe<User_Books_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<User_Books_Stddev_Samp_Order_By>;
  sum?: InputMaybe<User_Books_Sum_Order_By>;
  var_pop?: InputMaybe<User_Books_Var_Pop_Order_By>;
  var_samp?: InputMaybe<User_Books_Var_Samp_Order_By>;
  variance?: InputMaybe<User_Books_Variance_Order_By>;
};

/** aggregate avg on columns */
export type User_Books_Avg_Fields = {
  __typename?: 'user_books_avg_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  cached_match_score?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  owned_copies?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  read_count?: Maybe<Scalars['Float']['output']>;
  reading_format_id?: Maybe<Scalars['Float']['output']>;
  referrer_user_id?: Maybe<Scalars['Float']['output']>;
  review_length?: Maybe<Scalars['Float']['output']>;
  status_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "user_books" */
export type User_Books_Avg_Order_By = {
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "user_books". All fields are combined with a logical 'AND'. */
export type User_Books_Bool_Exp = {
  _and?: InputMaybe<Array<User_Books_Bool_Exp>>;
  _not?: InputMaybe<User_Books_Bool_Exp>;
  _or?: InputMaybe<Array<User_Books_Bool_Exp>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<Int_Comparison_Exp>;
  cached_match_score?: InputMaybe<Float8_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  date_added?: InputMaybe<Date_Comparison_Exp>;
  edition?: InputMaybe<Editions_Bool_Exp>;
  edition_id?: InputMaybe<Int_Comparison_Exp>;
  first_read_date?: InputMaybe<Date_Comparison_Exp>;
  first_started_reading_date?: InputMaybe<Date_Comparison_Exp>;
  followers?: InputMaybe<Followed_Users_Bool_Exp>;
  has_review?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  imported?: InputMaybe<Boolean_Comparison_Exp>;
  last_read_date?: InputMaybe<Date_Comparison_Exp>;
  likes?: InputMaybe<Likes_Bool_Exp>;
  likes_count?: InputMaybe<Int_Comparison_Exp>;
  media_url?: InputMaybe<String_Comparison_Exp>;
  merged_at?: InputMaybe<Timestamp_Comparison_Exp>;
  object_type?: InputMaybe<String_Comparison_Exp>;
  original_book_id?: InputMaybe<Int_Comparison_Exp>;
  original_edition_id?: InputMaybe<Int_Comparison_Exp>;
  owned?: InputMaybe<Boolean_Comparison_Exp>;
  owned_copies?: InputMaybe<Int_Comparison_Exp>;
  privacy_setting?: InputMaybe<Privacy_Settings_Bool_Exp>;
  privacy_setting_id?: InputMaybe<Int_Comparison_Exp>;
  private_notes?: InputMaybe<String_Comparison_Exp>;
  rating?: InputMaybe<Numeric_Comparison_Exp>;
  read_count?: InputMaybe<Int_Comparison_Exp>;
  reading_format?: InputMaybe<Reading_Formats_Bool_Exp>;
  reading_format_id?: InputMaybe<Int_Comparison_Exp>;
  reading_journal_summary?: InputMaybe<Reading_Journals_Summary_Bool_Exp>;
  reading_journals?: InputMaybe<Reading_Journals_Bool_Exp>;
  recommended_by?: InputMaybe<String_Comparison_Exp>;
  recommended_for?: InputMaybe<String_Comparison_Exp>;
  referrer?: InputMaybe<Users_Bool_Exp>;
  referrer_user_id?: InputMaybe<Int_Comparison_Exp>;
  review?: InputMaybe<String_Comparison_Exp>;
  review_has_spoilers?: InputMaybe<Boolean_Comparison_Exp>;
  review_html?: InputMaybe<String_Comparison_Exp>;
  review_length?: InputMaybe<Int_Comparison_Exp>;
  review_migrated?: InputMaybe<Boolean_Comparison_Exp>;
  review_object?: InputMaybe<Jsonb_Comparison_Exp>;
  review_raw?: InputMaybe<String_Comparison_Exp>;
  review_slate?: InputMaybe<Jsonb_Comparison_Exp>;
  reviewed_at?: InputMaybe<Timestamp_Comparison_Exp>;
  sponsored_review?: InputMaybe<Boolean_Comparison_Exp>;
  starred?: InputMaybe<Boolean_Comparison_Exp>;
  status_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_book_reads?: InputMaybe<User_Book_Reads_Bool_Exp>;
  user_book_reads_aggregate?: InputMaybe<User_Book_Reads_Aggregate_Bool_Exp>;
  user_book_status?: InputMaybe<User_Book_Statuses_Bool_Exp>;
  user_books?: InputMaybe<User_Books_Bool_Exp>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type User_Books_Max_Fields = {
  __typename?: 'user_books_max_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  cached_match_score?: Maybe<Scalars['float8']['output']>;
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  date_added?: Maybe<Scalars['date']['output']>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  first_read_date?: Maybe<Scalars['date']['output']>;
  first_started_reading_date?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  last_read_date?: Maybe<Scalars['date']['output']>;
  likes_count?: Maybe<Scalars['Int']['output']>;
  media_url?: Maybe<Scalars['String']['output']>;
  merged_at?: Maybe<Scalars['timestamp']['output']>;
  object_type?: Maybe<Scalars['String']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  original_edition_id?: Maybe<Scalars['Int']['output']>;
  owned_copies?: Maybe<Scalars['Int']['output']>;
  privacy_setting_id?: Maybe<Scalars['Int']['output']>;
  private_notes?: Maybe<Scalars['String']['output']>;
  rating?: Maybe<Scalars['numeric']['output']>;
  read_count?: Maybe<Scalars['Int']['output']>;
  reading_format_id?: Maybe<Scalars['Int']['output']>;
  recommended_by?: Maybe<Scalars['String']['output']>;
  recommended_for?: Maybe<Scalars['String']['output']>;
  referrer_user_id?: Maybe<Scalars['Int']['output']>;
  review?: Maybe<Scalars['String']['output']>;
  review_html?: Maybe<Scalars['String']['output']>;
  review_length?: Maybe<Scalars['Int']['output']>;
  review_raw?: Maybe<Scalars['String']['output']>;
  reviewed_at?: Maybe<Scalars['timestamp']['output']>;
  status_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "user_books" */
export type User_Books_Max_Order_By = {
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date_added?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  first_read_date?: InputMaybe<Order_By>;
  first_started_reading_date?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  last_read_date?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  media_url?: InputMaybe<Order_By>;
  merged_at?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  private_notes?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  recommended_by?: InputMaybe<Order_By>;
  recommended_for?: InputMaybe<Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review?: InputMaybe<Order_By>;
  review_html?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  review_raw?: InputMaybe<Order_By>;
  reviewed_at?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Books_Min_Fields = {
  __typename?: 'user_books_min_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  cached_match_score?: Maybe<Scalars['float8']['output']>;
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  date_added?: Maybe<Scalars['date']['output']>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  first_read_date?: Maybe<Scalars['date']['output']>;
  first_started_reading_date?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  last_read_date?: Maybe<Scalars['date']['output']>;
  likes_count?: Maybe<Scalars['Int']['output']>;
  media_url?: Maybe<Scalars['String']['output']>;
  merged_at?: Maybe<Scalars['timestamp']['output']>;
  object_type?: Maybe<Scalars['String']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  original_edition_id?: Maybe<Scalars['Int']['output']>;
  owned_copies?: Maybe<Scalars['Int']['output']>;
  privacy_setting_id?: Maybe<Scalars['Int']['output']>;
  private_notes?: Maybe<Scalars['String']['output']>;
  rating?: Maybe<Scalars['numeric']['output']>;
  read_count?: Maybe<Scalars['Int']['output']>;
  reading_format_id?: Maybe<Scalars['Int']['output']>;
  recommended_by?: Maybe<Scalars['String']['output']>;
  recommended_for?: Maybe<Scalars['String']['output']>;
  referrer_user_id?: Maybe<Scalars['Int']['output']>;
  review?: Maybe<Scalars['String']['output']>;
  review_html?: Maybe<Scalars['String']['output']>;
  review_length?: Maybe<Scalars['Int']['output']>;
  review_raw?: Maybe<Scalars['String']['output']>;
  reviewed_at?: Maybe<Scalars['timestamp']['output']>;
  status_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "user_books" */
export type User_Books_Min_Order_By = {
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date_added?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  first_read_date?: InputMaybe<Order_By>;
  first_started_reading_date?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  last_read_date?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  media_url?: InputMaybe<Order_By>;
  merged_at?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  private_notes?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  recommended_by?: InputMaybe<Order_By>;
  recommended_for?: InputMaybe<Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review?: InputMaybe<Order_By>;
  review_html?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  review_raw?: InputMaybe<Order_By>;
  reviewed_at?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "user_books". */
export type User_Books_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date_added?: InputMaybe<Order_By>;
  edition?: InputMaybe<Editions_Order_By>;
  edition_id?: InputMaybe<Order_By>;
  first_read_date?: InputMaybe<Order_By>;
  first_started_reading_date?: InputMaybe<Order_By>;
  followers_aggregate?: InputMaybe<Followed_Users_Aggregate_Order_By>;
  has_review?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imported?: InputMaybe<Order_By>;
  last_read_date?: InputMaybe<Order_By>;
  likes_aggregate?: InputMaybe<Likes_Aggregate_Order_By>;
  likes_count?: InputMaybe<Order_By>;
  media_url?: InputMaybe<Order_By>;
  merged_at?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting?: InputMaybe<Privacy_Settings_Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  private_notes?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format?: InputMaybe<Reading_Formats_Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  reading_journal_summary?: InputMaybe<Reading_Journals_Summary_Order_By>;
  reading_journals_aggregate?: InputMaybe<Reading_Journals_Aggregate_Order_By>;
  recommended_by?: InputMaybe<Order_By>;
  recommended_for?: InputMaybe<Order_By>;
  referrer?: InputMaybe<Users_Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review?: InputMaybe<Order_By>;
  review_has_spoilers?: InputMaybe<Order_By>;
  review_html?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  review_migrated?: InputMaybe<Order_By>;
  review_object?: InputMaybe<Order_By>;
  review_raw?: InputMaybe<Order_By>;
  review_slate?: InputMaybe<Order_By>;
  reviewed_at?: InputMaybe<Order_By>;
  sponsored_review?: InputMaybe<Order_By>;
  starred?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_book_reads_aggregate?: InputMaybe<User_Book_Reads_Aggregate_Order_By>;
  user_book_status?: InputMaybe<User_Book_Statuses_Order_By>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "user_books" */
export enum User_Books_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CachedMatchScore = 'cached_match_score',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DateAdded = 'date_added',
  /** column name */
  EditionId = 'edition_id',
  /** column name */
  FirstReadDate = 'first_read_date',
  /** column name */
  FirstStartedReadingDate = 'first_started_reading_date',
  /** column name */
  HasReview = 'has_review',
  /** column name */
  Id = 'id',
  /** column name */
  Imported = 'imported',
  /** column name */
  LastReadDate = 'last_read_date',
  /** column name */
  LikesCount = 'likes_count',
  /** column name */
  MediaUrl = 'media_url',
  /** column name */
  MergedAt = 'merged_at',
  /** column name */
  ObjectType = 'object_type',
  /** column name */
  OriginalBookId = 'original_book_id',
  /** column name */
  OriginalEditionId = 'original_edition_id',
  /** column name */
  Owned = 'owned',
  /** column name */
  OwnedCopies = 'owned_copies',
  /** column name */
  PrivacySettingId = 'privacy_setting_id',
  /** column name */
  PrivateNotes = 'private_notes',
  /** column name */
  Rating = 'rating',
  /** column name */
  ReadCount = 'read_count',
  /** column name */
  ReadingFormatId = 'reading_format_id',
  /** column name */
  RecommendedBy = 'recommended_by',
  /** column name */
  RecommendedFor = 'recommended_for',
  /** column name */
  ReferrerUserId = 'referrer_user_id',
  /** column name */
  Review = 'review',
  /** column name */
  ReviewHasSpoilers = 'review_has_spoilers',
  /** column name */
  ReviewHtml = 'review_html',
  /** column name */
  ReviewLength = 'review_length',
  /** column name */
  ReviewMigrated = 'review_migrated',
  /** column name */
  ReviewObject = 'review_object',
  /** column name */
  ReviewRaw = 'review_raw',
  /** column name */
  ReviewSlate = 'review_slate',
  /** column name */
  ReviewedAt = 'reviewed_at',
  /** column name */
  SponsoredReview = 'sponsored_review',
  /** column name */
  Starred = 'starred',
  /** column name */
  StatusId = 'status_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Url = 'url',
  /** column name */
  UserId = 'user_id',
}

/** select "user_books_aggregate_bool_exp_avg_arguments_columns" columns of table "user_books" */
export enum User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Avg_Arguments_Columns {
  /** column name */
  CachedMatchScore = 'cached_match_score',
}

/** select "user_books_aggregate_bool_exp_bool_and_arguments_columns" columns of table "user_books" */
export enum User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  HasReview = 'has_review',
  /** column name */
  Imported = 'imported',
  /** column name */
  Owned = 'owned',
  /** column name */
  ReviewHasSpoilers = 'review_has_spoilers',
  /** column name */
  ReviewMigrated = 'review_migrated',
  /** column name */
  SponsoredReview = 'sponsored_review',
  /** column name */
  Starred = 'starred',
}

/** select "user_books_aggregate_bool_exp_bool_or_arguments_columns" columns of table "user_books" */
export enum User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  HasReview = 'has_review',
  /** column name */
  Imported = 'imported',
  /** column name */
  Owned = 'owned',
  /** column name */
  ReviewHasSpoilers = 'review_has_spoilers',
  /** column name */
  ReviewMigrated = 'review_migrated',
  /** column name */
  SponsoredReview = 'sponsored_review',
  /** column name */
  Starred = 'starred',
}

/** select "user_books_aggregate_bool_exp_corr_arguments_columns" columns of table "user_books" */
export enum User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Corr_Arguments_Columns {
  /** column name */
  CachedMatchScore = 'cached_match_score',
}

/** select "user_books_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "user_books" */
export enum User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns {
  /** column name */
  CachedMatchScore = 'cached_match_score',
}

/** select "user_books_aggregate_bool_exp_max_arguments_columns" columns of table "user_books" */
export enum User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Max_Arguments_Columns {
  /** column name */
  CachedMatchScore = 'cached_match_score',
}

/** select "user_books_aggregate_bool_exp_min_arguments_columns" columns of table "user_books" */
export enum User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Min_Arguments_Columns {
  /** column name */
  CachedMatchScore = 'cached_match_score',
}

/** select "user_books_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "user_books" */
export enum User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns {
  /** column name */
  CachedMatchScore = 'cached_match_score',
}

/** select "user_books_aggregate_bool_exp_sum_arguments_columns" columns of table "user_books" */
export enum User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Sum_Arguments_Columns {
  /** column name */
  CachedMatchScore = 'cached_match_score',
}

/** select "user_books_aggregate_bool_exp_var_samp_arguments_columns" columns of table "user_books" */
export enum User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns {
  /** column name */
  CachedMatchScore = 'cached_match_score',
}

/** aggregate stddev on columns */
export type User_Books_Stddev_Fields = {
  __typename?: 'user_books_stddev_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  cached_match_score?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  owned_copies?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  read_count?: Maybe<Scalars['Float']['output']>;
  reading_format_id?: Maybe<Scalars['Float']['output']>;
  referrer_user_id?: Maybe<Scalars['Float']['output']>;
  review_length?: Maybe<Scalars['Float']['output']>;
  status_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "user_books" */
export type User_Books_Stddev_Order_By = {
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type User_Books_Stddev_Pop_Fields = {
  __typename?: 'user_books_stddev_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  cached_match_score?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  owned_copies?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  read_count?: Maybe<Scalars['Float']['output']>;
  reading_format_id?: Maybe<Scalars['Float']['output']>;
  referrer_user_id?: Maybe<Scalars['Float']['output']>;
  review_length?: Maybe<Scalars['Float']['output']>;
  status_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "user_books" */
export type User_Books_Stddev_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type User_Books_Stddev_Samp_Fields = {
  __typename?: 'user_books_stddev_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  cached_match_score?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  owned_copies?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  read_count?: Maybe<Scalars['Float']['output']>;
  reading_format_id?: Maybe<Scalars['Float']['output']>;
  referrer_user_id?: Maybe<Scalars['Float']['output']>;
  review_length?: Maybe<Scalars['Float']['output']>;
  status_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "user_books" */
export type User_Books_Stddev_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "user_books" */
export type User_Books_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Books_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Books_Stream_Cursor_Value_Input = {
  book_id?: InputMaybe<Scalars['Int']['input']>;
  cached_match_score?: InputMaybe<Scalars['float8']['input']>;
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  date_added?: InputMaybe<Scalars['date']['input']>;
  edition_id?: InputMaybe<Scalars['Int']['input']>;
  first_read_date?: InputMaybe<Scalars['date']['input']>;
  first_started_reading_date?: InputMaybe<Scalars['date']['input']>;
  has_review?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  imported?: InputMaybe<Scalars['Boolean']['input']>;
  last_read_date?: InputMaybe<Scalars['date']['input']>;
  likes_count?: InputMaybe<Scalars['Int']['input']>;
  media_url?: InputMaybe<Scalars['String']['input']>;
  merged_at?: InputMaybe<Scalars['timestamp']['input']>;
  object_type?: InputMaybe<Scalars['String']['input']>;
  original_book_id?: InputMaybe<Scalars['Int']['input']>;
  original_edition_id?: InputMaybe<Scalars['Int']['input']>;
  owned?: InputMaybe<Scalars['Boolean']['input']>;
  owned_copies?: InputMaybe<Scalars['Int']['input']>;
  privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  private_notes?: InputMaybe<Scalars['String']['input']>;
  rating?: InputMaybe<Scalars['numeric']['input']>;
  read_count?: InputMaybe<Scalars['Int']['input']>;
  reading_format_id?: InputMaybe<Scalars['Int']['input']>;
  recommended_by?: InputMaybe<Scalars['String']['input']>;
  recommended_for?: InputMaybe<Scalars['String']['input']>;
  referrer_user_id?: InputMaybe<Scalars['Int']['input']>;
  review?: InputMaybe<Scalars['String']['input']>;
  review_has_spoilers?: InputMaybe<Scalars['Boolean']['input']>;
  review_html?: InputMaybe<Scalars['String']['input']>;
  review_length?: InputMaybe<Scalars['Int']['input']>;
  review_migrated?: InputMaybe<Scalars['Boolean']['input']>;
  review_object?: InputMaybe<Scalars['jsonb']['input']>;
  review_raw?: InputMaybe<Scalars['String']['input']>;
  review_slate?: InputMaybe<Scalars['jsonb']['input']>;
  reviewed_at?: InputMaybe<Scalars['timestamp']['input']>;
  sponsored_review?: InputMaybe<Scalars['Boolean']['input']>;
  starred?: InputMaybe<Scalars['Boolean']['input']>;
  status_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type User_Books_Sum_Fields = {
  __typename?: 'user_books_sum_fields';
  book_id?: Maybe<Scalars['Int']['output']>;
  cached_match_score?: Maybe<Scalars['float8']['output']>;
  edition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  likes_count?: Maybe<Scalars['Int']['output']>;
  original_book_id?: Maybe<Scalars['Int']['output']>;
  original_edition_id?: Maybe<Scalars['Int']['output']>;
  owned_copies?: Maybe<Scalars['Int']['output']>;
  privacy_setting_id?: Maybe<Scalars['Int']['output']>;
  rating?: Maybe<Scalars['numeric']['output']>;
  read_count?: Maybe<Scalars['Int']['output']>;
  reading_format_id?: Maybe<Scalars['Int']['output']>;
  referrer_user_id?: Maybe<Scalars['Int']['output']>;
  review_length?: Maybe<Scalars['Int']['output']>;
  status_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "user_books" */
export type User_Books_Sum_Order_By = {
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type User_Books_Var_Pop_Fields = {
  __typename?: 'user_books_var_pop_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  cached_match_score?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  owned_copies?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  read_count?: Maybe<Scalars['Float']['output']>;
  reading_format_id?: Maybe<Scalars['Float']['output']>;
  referrer_user_id?: Maybe<Scalars['Float']['output']>;
  review_length?: Maybe<Scalars['Float']['output']>;
  status_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "user_books" */
export type User_Books_Var_Pop_Order_By = {
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type User_Books_Var_Samp_Fields = {
  __typename?: 'user_books_var_samp_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  cached_match_score?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  owned_copies?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  read_count?: Maybe<Scalars['Float']['output']>;
  reading_format_id?: Maybe<Scalars['Float']['output']>;
  referrer_user_id?: Maybe<Scalars['Float']['output']>;
  review_length?: Maybe<Scalars['Float']['output']>;
  status_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "user_books" */
export type User_Books_Var_Samp_Order_By = {
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type User_Books_Variance_Fields = {
  __typename?: 'user_books_variance_fields';
  book_id?: Maybe<Scalars['Float']['output']>;
  cached_match_score?: Maybe<Scalars['Float']['output']>;
  edition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  likes_count?: Maybe<Scalars['Float']['output']>;
  original_book_id?: Maybe<Scalars['Float']['output']>;
  original_edition_id?: Maybe<Scalars['Float']['output']>;
  owned_copies?: Maybe<Scalars['Float']['output']>;
  privacy_setting_id?: Maybe<Scalars['Float']['output']>;
  rating?: Maybe<Scalars['Float']['output']>;
  read_count?: Maybe<Scalars['Float']['output']>;
  reading_format_id?: Maybe<Scalars['Float']['output']>;
  referrer_user_id?: Maybe<Scalars['Float']['output']>;
  review_length?: Maybe<Scalars['Float']['output']>;
  status_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "user_books" */
export type User_Books_Variance_Order_By = {
  book_id?: InputMaybe<Order_By>;
  cached_match_score?: InputMaybe<Order_By>;
  edition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  likes_count?: InputMaybe<Order_By>;
  original_book_id?: InputMaybe<Order_By>;
  original_edition_id?: InputMaybe<Order_By>;
  owned_copies?: InputMaybe<Order_By>;
  privacy_setting_id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  read_count?: InputMaybe<Order_By>;
  reading_format_id?: InputMaybe<Order_By>;
  referrer_user_id?: InputMaybe<Order_By>;
  review_length?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "user_flags" */
export type User_Flags = {
  __typename?: 'user_flags';
  action_id?: Maybe<Scalars['Int']['output']>;
  action_type?: Maybe<Scalars['String']['output']>;
  category: Scalars['String']['output'];
  created_at?: Maybe<Scalars['timestamptz']['output']>;
  details: Scalars['String']['output'];
  /** An object relationship */
  flag_status: Flag_Statuses;
  flag_status_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  reported_user_id: Scalars['Int']['output'];
  user_id: Scalars['Int']['output'];
  /** An object relationship */
  user_reported: Users;
  /** An object relationship */
  user_submitted: Users;
};

/** order by aggregate values of table "user_flags" */
export type User_Flags_Aggregate_Order_By = {
  avg?: InputMaybe<User_Flags_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Flags_Max_Order_By>;
  min?: InputMaybe<User_Flags_Min_Order_By>;
  stddev?: InputMaybe<User_Flags_Stddev_Order_By>;
  stddev_pop?: InputMaybe<User_Flags_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<User_Flags_Stddev_Samp_Order_By>;
  sum?: InputMaybe<User_Flags_Sum_Order_By>;
  var_pop?: InputMaybe<User_Flags_Var_Pop_Order_By>;
  var_samp?: InputMaybe<User_Flags_Var_Samp_Order_By>;
  variance?: InputMaybe<User_Flags_Variance_Order_By>;
};

/** order by avg() on columns of table "user_flags" */
export type User_Flags_Avg_Order_By = {
  action_id?: InputMaybe<Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "user_flags". All fields are combined with a logical 'AND'. */
export type User_Flags_Bool_Exp = {
  _and?: InputMaybe<Array<User_Flags_Bool_Exp>>;
  _not?: InputMaybe<User_Flags_Bool_Exp>;
  _or?: InputMaybe<Array<User_Flags_Bool_Exp>>;
  action_id?: InputMaybe<Int_Comparison_Exp>;
  action_type?: InputMaybe<String_Comparison_Exp>;
  category?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  details?: InputMaybe<String_Comparison_Exp>;
  flag_status?: InputMaybe<Flag_Statuses_Bool_Exp>;
  flag_status_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  reported_user_id?: InputMaybe<Int_Comparison_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
  user_reported?: InputMaybe<Users_Bool_Exp>;
  user_submitted?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "user_flags" */
export enum User_Flags_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserFlagsIdKey = 'user_flags_id_key',
  /** unique or primary key constraint on columns "id" */
  UserFlagsPkey = 'user_flags_pkey',
}

/** input type for inserting data into table "user_flags" */
export type User_Flags_Insert_Input = {
  action_id?: InputMaybe<Scalars['Int']['input']>;
  action_type?: InputMaybe<Scalars['String']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  details?: InputMaybe<Scalars['String']['input']>;
  reported_user_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by max() on columns of table "user_flags" */
export type User_Flags_Max_Order_By = {
  action_id?: InputMaybe<Order_By>;
  action_type?: InputMaybe<Order_By>;
  category?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  details?: InputMaybe<Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "user_flags" */
export type User_Flags_Min_Order_By = {
  action_id?: InputMaybe<Order_By>;
  action_type?: InputMaybe<Order_By>;
  category?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  details?: InputMaybe<Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_flags" */
export type User_Flags_Mutation_Response = {
  __typename?: 'user_flags_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Flags>;
};

/** on_conflict condition type for table "user_flags" */
export type User_Flags_On_Conflict = {
  constraint: User_Flags_Constraint;
  update_columns?: Array<User_Flags_Update_Column>;
  where?: InputMaybe<User_Flags_Bool_Exp>;
};

/** Ordering options when selecting data from "user_flags". */
export type User_Flags_Order_By = {
  action_id?: InputMaybe<Order_By>;
  action_type?: InputMaybe<Order_By>;
  category?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  details?: InputMaybe<Order_By>;
  flag_status?: InputMaybe<Flag_Statuses_Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  user_reported?: InputMaybe<Users_Order_By>;
  user_submitted?: InputMaybe<Users_Order_By>;
};

/** select columns of table "user_flags" */
export enum User_Flags_Select_Column {
  /** column name */
  ActionId = 'action_id',
  /** column name */
  ActionType = 'action_type',
  /** column name */
  Category = 'category',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Details = 'details',
  /** column name */
  FlagStatusId = 'flag_status_id',
  /** column name */
  Id = 'id',
  /** column name */
  ReportedUserId = 'reported_user_id',
  /** column name */
  UserId = 'user_id',
}

/** order by stddev() on columns of table "user_flags" */
export type User_Flags_Stddev_Order_By = {
  action_id?: InputMaybe<Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "user_flags" */
export type User_Flags_Stddev_Pop_Order_By = {
  action_id?: InputMaybe<Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "user_flags" */
export type User_Flags_Stddev_Samp_Order_By = {
  action_id?: InputMaybe<Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "user_flags" */
export type User_Flags_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Flags_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Flags_Stream_Cursor_Value_Input = {
  action_id?: InputMaybe<Scalars['Int']['input']>;
  action_type?: InputMaybe<Scalars['String']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  details?: InputMaybe<Scalars['String']['input']>;
  flag_status_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  reported_user_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** order by sum() on columns of table "user_flags" */
export type User_Flags_Sum_Order_By = {
  action_id?: InputMaybe<Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** placeholder for update columns of table "user_flags" (current role has no relevant permissions) */
export enum User_Flags_Update_Column {
  /** placeholder (do not use) */
  Placeholder = '_PLACEHOLDER',
}

/** order by var_pop() on columns of table "user_flags" */
export type User_Flags_Var_Pop_Order_By = {
  action_id?: InputMaybe<Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "user_flags" */
export type User_Flags_Var_Samp_Order_By = {
  action_id?: InputMaybe<Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "user_flags" */
export type User_Flags_Variance_Order_By = {
  action_id?: InputMaybe<Order_By>;
  flag_status_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reported_user_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "user_referrals" */
export type User_Referrals = {
  __typename?: 'user_referrals';
  created_at: Scalars['timestamp']['output'];
  id: Scalars['bigint']['output'];
  /** An object relationship */
  referrer?: Maybe<Users>;
  referrer_id?: Maybe<Scalars['Int']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** Boolean expression to filter rows from the table "user_referrals". All fields are combined with a logical 'AND'. */
export type User_Referrals_Bool_Exp = {
  _and?: InputMaybe<Array<User_Referrals_Bool_Exp>>;
  _not?: InputMaybe<User_Referrals_Bool_Exp>;
  _or?: InputMaybe<Array<User_Referrals_Bool_Exp>>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  referrer?: InputMaybe<Users_Bool_Exp>;
  referrer_id?: InputMaybe<Int_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** Ordering options when selecting data from "user_referrals". */
export type User_Referrals_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  referrer?: InputMaybe<Users_Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "user_referrals" */
export enum User_Referrals_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ReferrerId = 'referrer_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
}

/** Streaming cursor of the table "user_referrals" */
export type User_Referrals_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Referrals_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Referrals_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  referrer_id?: InputMaybe<Scalars['Int']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** columns and relationships of "user_statuses" */
export type User_Statuses = {
  __typename?: 'user_statuses';
  id: Scalars['Int']['output'];
  status: Scalars['String']['output'];
  /** An array relationship */
  users: Array<Users>;
};

/** columns and relationships of "user_statuses" */
export type User_StatusesUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "user_statuses". All fields are combined with a logical 'AND'. */
export type User_Statuses_Bool_Exp = {
  _and?: InputMaybe<Array<User_Statuses_Bool_Exp>>;
  _not?: InputMaybe<User_Statuses_Bool_Exp>;
  _or?: InputMaybe<Array<User_Statuses_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  users?: InputMaybe<Users_Bool_Exp>;
};

/** Ordering options when selecting data from "user_statuses". */
export type User_Statuses_Order_By = {
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  users_aggregate?: InputMaybe<Users_Aggregate_Order_By>;
};

/** select columns of table "user_statuses" */
export enum User_Statuses_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Status = 'status',
}

/** Streaming cursor of the table "user_statuses" */
export type User_Statuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Statuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Statuses_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "users" */
export type Users = {
  __typename?: 'users';
  access_level?: Maybe<Scalars['Int']['output']>;
  account_privacy_setting_id: Scalars['Int']['output'];
  /** An array relationship */
  activities: Array<Activities>;
  activity_privacy_settings_id: Scalars['Int']['output'];
  admin: Scalars['Boolean']['output'];
  bio?: Maybe<Scalars['String']['output']>;
  birthdate?: Maybe<Scalars['date']['output']>;
  /** An array relationship */
  blocked_users: Array<User_Blocks>;
  books_count: Scalars['Int']['output'];
  cached_cover: Scalars['jsonb']['output'];
  cached_genres: Scalars['jsonb']['output'];
  cached_image: Scalars['jsonb']['output'];
  /** An array relationship */
  collection_imports: Array<Collection_Imports>;
  confirmation_sent_at?: Maybe<Scalars['timestamp']['output']>;
  confirmed_at?: Maybe<Scalars['timestamp']['output']>;
  created_at: Scalars['timestamptz']['output'];
  current_sign_in_at?: Maybe<Scalars['timestamp']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  email_verified?: Maybe<Scalars['timestamptz']['output']>;
  flair?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  followed_by_users: Array<Followed_Users>;
  /** An array relationship */
  followed_lists: Array<Followed_Lists>;
  /** An array relationship */
  followed_prompts: Array<Followed_Prompts>;
  /** An array relationship */
  followed_users: Array<Followed_Users>;
  followed_users_count: Scalars['Int']['output'];
  followers_count: Scalars['Int']['output'];
  /** An array relationship */
  goals: Array<Goals>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  image?: Maybe<Images>;
  image_id?: Maybe<Scalars['Int']['output']>;
  last_activity_at?: Maybe<Scalars['timestamp']['output']>;
  last_sign_in_at?: Maybe<Scalars['timestamp']['output']>;
  librarian_roles: Scalars['jsonb']['output'];
  link?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  lists: Array<Lists>;
  /** An aggregate relationship */
  lists_aggregate: Lists_Aggregate;
  location?: Maybe<Scalars['String']['output']>;
  locked_at?: Maybe<Scalars['timestamp']['output']>;
  match_updated_at?: Maybe<Scalars['timestamp']['output']>;
  membership?: Maybe<Scalars['String']['output']>;
  membership_ends_at?: Maybe<Scalars['timestamp']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  notification_deliveries: Array<Notification_Deliveries>;
  /** An aggregate relationship */
  notification_deliveries_aggregate: Notification_Deliveries_Aggregate;
  object_type?: Maybe<Scalars['String']['output']>;
  onboarded: Scalars['Boolean']['output'];
  payment_system_id?: Maybe<Scalars['Int']['output']>;
  pro: Scalars['Boolean']['output'];
  /** An array relationship */
  prompt_answers: Array<Prompt_Answers>;
  /** An aggregate relationship */
  prompt_answers_aggregate: Prompt_Answers_Aggregate;
  /** An array relationship */
  prompts: Array<Prompts>;
  pronoun_personal: Scalars['String']['output'];
  pronoun_possessive: Scalars['String']['output'];
  /** An array relationship */
  recommendations: Array<Recommendations>;
  /** An array relationship */
  recommended: Array<Recommendations>;
  referrer_id?: Maybe<Scalars['Int']['output']>;
  referrer_url?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  referrered_users: Array<User_Books>;
  /** An aggregate relationship */
  referrered_users_aggregate: User_Books_Aggregate;
  remember_created_at?: Maybe<Scalars['timestamp']['output']>;
  /** An array relationship */
  reported_user_flags: Array<User_Flags>;
  reset_password_sent_at?: Maybe<Scalars['timestamp']['output']>;
  sign_in_count?: Maybe<Scalars['Int']['output']>;
  status_id: Scalars['Int']['output'];
  /** An array relationship */
  taggings: Array<Taggings>;
  /** An aggregate relationship */
  taggings_aggregate: Taggings_Aggregate;
  unconfirmed_email?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamptz']['output'];
  /** An array relationship */
  user_books: Array<User_Books>;
  /** An aggregate relationship */
  user_books_aggregate: User_Books_Aggregate;
  /** An array relationship */
  user_flags: Array<User_Flags>;
  username?: Maybe<Scalars['citext']['output']>;
};

/** columns and relationships of "users" */
export type UsersActivitiesArgs = {
  distinct_on?: InputMaybe<Array<Activities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Activities_Order_By>>;
  where?: InputMaybe<Activities_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersBlocked_UsersArgs = {
  distinct_on?: InputMaybe<Array<User_Blocks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Blocks_Order_By>>;
  where?: InputMaybe<User_Blocks_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersCached_CoverArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "users" */
export type UsersCached_GenresArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "users" */
export type UsersCached_ImageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "users" */
export type UsersCollection_ImportsArgs = {
  distinct_on?: InputMaybe<Array<Collection_Imports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Collection_Imports_Order_By>>;
  where?: InputMaybe<Collection_Imports_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersFollowed_By_UsersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersFollowed_ListsArgs = {
  distinct_on?: InputMaybe<Array<Followed_Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Lists_Order_By>>;
  where?: InputMaybe<Followed_Lists_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersFollowed_PromptsArgs = {
  distinct_on?: InputMaybe<Array<Followed_Prompts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Prompts_Order_By>>;
  where?: InputMaybe<Followed_Prompts_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersFollowed_UsersArgs = {
  distinct_on?: InputMaybe<Array<Followed_Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Followed_Users_Order_By>>;
  where?: InputMaybe<Followed_Users_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersGoalsArgs = {
  distinct_on?: InputMaybe<Array<Goals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Goals_Order_By>>;
  where?: InputMaybe<Goals_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersLibrarian_RolesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "users" */
export type UsersListsArgs = {
  distinct_on?: InputMaybe<Array<Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Lists_Order_By>>;
  where?: InputMaybe<Lists_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersLists_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Lists_Order_By>>;
  where?: InputMaybe<Lists_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersNotification_DeliveriesArgs = {
  distinct_on?: InputMaybe<Array<Notification_Deliveries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Deliveries_Order_By>>;
  where?: InputMaybe<Notification_Deliveries_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersNotification_Deliveries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Notification_Deliveries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notification_Deliveries_Order_By>>;
  where?: InputMaybe<Notification_Deliveries_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersPrompt_AnswersArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Answers_Order_By>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersPrompt_Answers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Prompt_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompt_Answers_Order_By>>;
  where?: InputMaybe<Prompt_Answers_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersPromptsArgs = {
  distinct_on?: InputMaybe<Array<Prompts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Prompts_Order_By>>;
  where?: InputMaybe<Prompts_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersRecommendationsArgs = {
  distinct_on?: InputMaybe<Array<Recommendations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Recommendations_Order_By>>;
  where?: InputMaybe<Recommendations_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersRecommendedArgs = {
  distinct_on?: InputMaybe<Array<Recommendations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Recommendations_Order_By>>;
  where?: InputMaybe<Recommendations_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersReferrered_UsersArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersReferrered_Users_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersReported_User_FlagsArgs = {
  distinct_on?: InputMaybe<Array<User_Flags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Flags_Order_By>>;
  where?: InputMaybe<User_Flags_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersTaggingsArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersTaggings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Taggings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Taggings_Order_By>>;
  where?: InputMaybe<Taggings_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersUser_BooksArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersUser_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Books_Order_By>>;
  where?: InputMaybe<User_Books_Bool_Exp>;
};

/** columns and relationships of "users" */
export type UsersUser_FlagsArgs = {
  distinct_on?: InputMaybe<Array<User_Flags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Flags_Order_By>>;
  where?: InputMaybe<User_Flags_Bool_Exp>;
};

/** columns and relationships of "users_aggregate_by_created_at_date" */
export type Users_Aggregate_By_Created_At_Date = {
  __typename?: 'users_aggregate_by_created_at_date';
  count?: Maybe<Scalars['bigint']['output']>;
  created_at?: Maybe<Scalars['date']['output']>;
};

/** Boolean expression to filter rows from the table "users_aggregate_by_created_at_date". All fields are combined with a logical 'AND'. */
export type Users_Aggregate_By_Created_At_Date_Bool_Exp = {
  _and?: InputMaybe<Array<Users_Aggregate_By_Created_At_Date_Bool_Exp>>;
  _not?: InputMaybe<Users_Aggregate_By_Created_At_Date_Bool_Exp>;
  _or?: InputMaybe<Array<Users_Aggregate_By_Created_At_Date_Bool_Exp>>;
  count?: InputMaybe<Bigint_Comparison_Exp>;
  created_at?: InputMaybe<Date_Comparison_Exp>;
};

/** Ordering options when selecting data from "users_aggregate_by_created_at_date". */
export type Users_Aggregate_By_Created_At_Date_Order_By = {
  count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
};

/** select columns of table "users_aggregate_by_created_at_date" */
export enum Users_Aggregate_By_Created_At_Date_Select_Column {
  /** column name */
  Count = 'count',
  /** column name */
  CreatedAt = 'created_at',
}

/** Streaming cursor of the table "users_aggregate_by_created_at_date" */
export type Users_Aggregate_By_Created_At_Date_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Users_Aggregate_By_Created_At_Date_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Users_Aggregate_By_Created_At_Date_Stream_Cursor_Value_Input = {
  count?: InputMaybe<Scalars['bigint']['input']>;
  created_at?: InputMaybe<Scalars['date']['input']>;
};

/** order by aggregate values of table "users" */
export type Users_Aggregate_Order_By = {
  avg?: InputMaybe<Users_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Users_Max_Order_By>;
  min?: InputMaybe<Users_Min_Order_By>;
  stddev?: InputMaybe<Users_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Users_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Users_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Users_Sum_Order_By>;
  var_pop?: InputMaybe<Users_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Users_Var_Samp_Order_By>;
  variance?: InputMaybe<Users_Variance_Order_By>;
};

/** order by avg() on columns of table "users" */
export type Users_Avg_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
export type Users_Bool_Exp = {
  _and?: InputMaybe<Array<Users_Bool_Exp>>;
  _not?: InputMaybe<Users_Bool_Exp>;
  _or?: InputMaybe<Array<Users_Bool_Exp>>;
  access_level?: InputMaybe<Int_Comparison_Exp>;
  account_privacy_setting_id?: InputMaybe<Int_Comparison_Exp>;
  activities?: InputMaybe<Activities_Bool_Exp>;
  activity_privacy_settings_id?: InputMaybe<Int_Comparison_Exp>;
  admin?: InputMaybe<Boolean_Comparison_Exp>;
  bio?: InputMaybe<String_Comparison_Exp>;
  birthdate?: InputMaybe<Date_Comparison_Exp>;
  blocked_users?: InputMaybe<User_Blocks_Bool_Exp>;
  books_count?: InputMaybe<Int_Comparison_Exp>;
  cached_cover?: InputMaybe<Jsonb_Comparison_Exp>;
  cached_genres?: InputMaybe<Jsonb_Comparison_Exp>;
  cached_image?: InputMaybe<Jsonb_Comparison_Exp>;
  collection_imports?: InputMaybe<Collection_Imports_Bool_Exp>;
  confirmation_sent_at?: InputMaybe<Timestamp_Comparison_Exp>;
  confirmed_at?: InputMaybe<Timestamp_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  current_sign_in_at?: InputMaybe<Timestamp_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  email_verified?: InputMaybe<Timestamptz_Comparison_Exp>;
  flair?: InputMaybe<String_Comparison_Exp>;
  followed_by_users?: InputMaybe<Followed_Users_Bool_Exp>;
  followed_lists?: InputMaybe<Followed_Lists_Bool_Exp>;
  followed_prompts?: InputMaybe<Followed_Prompts_Bool_Exp>;
  followed_users?: InputMaybe<Followed_Users_Bool_Exp>;
  followed_users_count?: InputMaybe<Int_Comparison_Exp>;
  followers_count?: InputMaybe<Int_Comparison_Exp>;
  goals?: InputMaybe<Goals_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  image?: InputMaybe<Images_Bool_Exp>;
  image_id?: InputMaybe<Int_Comparison_Exp>;
  last_activity_at?: InputMaybe<Timestamp_Comparison_Exp>;
  last_sign_in_at?: InputMaybe<Timestamp_Comparison_Exp>;
  librarian_roles?: InputMaybe<Jsonb_Comparison_Exp>;
  link?: InputMaybe<String_Comparison_Exp>;
  lists?: InputMaybe<Lists_Bool_Exp>;
  lists_aggregate?: InputMaybe<Lists_Aggregate_Bool_Exp>;
  location?: InputMaybe<String_Comparison_Exp>;
  locked_at?: InputMaybe<Timestamp_Comparison_Exp>;
  match_updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  membership?: InputMaybe<String_Comparison_Exp>;
  membership_ends_at?: InputMaybe<Timestamp_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  notification_deliveries?: InputMaybe<Notification_Deliveries_Bool_Exp>;
  notification_deliveries_aggregate?: InputMaybe<Notification_Deliveries_Aggregate_Bool_Exp>;
  object_type?: InputMaybe<String_Comparison_Exp>;
  onboarded?: InputMaybe<Boolean_Comparison_Exp>;
  payment_system_id?: InputMaybe<Int_Comparison_Exp>;
  pro?: InputMaybe<Boolean_Comparison_Exp>;
  prompt_answers?: InputMaybe<Prompt_Answers_Bool_Exp>;
  prompt_answers_aggregate?: InputMaybe<Prompt_Answers_Aggregate_Bool_Exp>;
  prompts?: InputMaybe<Prompts_Bool_Exp>;
  pronoun_personal?: InputMaybe<String_Comparison_Exp>;
  pronoun_possessive?: InputMaybe<String_Comparison_Exp>;
  recommendations?: InputMaybe<Recommendations_Bool_Exp>;
  recommended?: InputMaybe<Recommendations_Bool_Exp>;
  referrer_id?: InputMaybe<Int_Comparison_Exp>;
  referrer_url?: InputMaybe<String_Comparison_Exp>;
  referrered_users?: InputMaybe<User_Books_Bool_Exp>;
  referrered_users_aggregate?: InputMaybe<User_Books_Aggregate_Bool_Exp>;
  remember_created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  reported_user_flags?: InputMaybe<User_Flags_Bool_Exp>;
  reset_password_sent_at?: InputMaybe<Timestamp_Comparison_Exp>;
  sign_in_count?: InputMaybe<Int_Comparison_Exp>;
  status_id?: InputMaybe<Int_Comparison_Exp>;
  taggings?: InputMaybe<Taggings_Bool_Exp>;
  taggings_aggregate?: InputMaybe<Taggings_Aggregate_Bool_Exp>;
  unconfirmed_email?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_books?: InputMaybe<User_Books_Bool_Exp>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Bool_Exp>;
  user_flags?: InputMaybe<User_Flags_Bool_Exp>;
  username?: InputMaybe<Citext_Comparison_Exp>;
};

/** order by max() on columns of table "users" */
export type Users_Max_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  bio?: InputMaybe<Order_By>;
  birthdate?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  confirmation_sent_at?: InputMaybe<Order_By>;
  confirmed_at?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_sign_in_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  email_verified?: InputMaybe<Order_By>;
  flair?: InputMaybe<Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  last_activity_at?: InputMaybe<Order_By>;
  last_sign_in_at?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  location?: InputMaybe<Order_By>;
  locked_at?: InputMaybe<Order_By>;
  match_updated_at?: InputMaybe<Order_By>;
  membership?: InputMaybe<Order_By>;
  membership_ends_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  pronoun_personal?: InputMaybe<Order_By>;
  pronoun_possessive?: InputMaybe<Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  referrer_url?: InputMaybe<Order_By>;
  remember_created_at?: InputMaybe<Order_By>;
  reset_password_sent_at?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  unconfirmed_email?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  username?: InputMaybe<Order_By>;
};

/** order by min() on columns of table "users" */
export type Users_Min_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  bio?: InputMaybe<Order_By>;
  birthdate?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  confirmation_sent_at?: InputMaybe<Order_By>;
  confirmed_at?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_sign_in_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  email_verified?: InputMaybe<Order_By>;
  flair?: InputMaybe<Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  last_activity_at?: InputMaybe<Order_By>;
  last_sign_in_at?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  location?: InputMaybe<Order_By>;
  locked_at?: InputMaybe<Order_By>;
  match_updated_at?: InputMaybe<Order_By>;
  membership?: InputMaybe<Order_By>;
  membership_ends_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  object_type?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  pronoun_personal?: InputMaybe<Order_By>;
  pronoun_possessive?: InputMaybe<Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  referrer_url?: InputMaybe<Order_By>;
  remember_created_at?: InputMaybe<Order_By>;
  reset_password_sent_at?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  unconfirmed_email?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  username?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "users". */
export type Users_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activities_aggregate?: InputMaybe<Activities_Aggregate_Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  admin?: InputMaybe<Order_By>;
  bio?: InputMaybe<Order_By>;
  birthdate?: InputMaybe<Order_By>;
  blocked_users_aggregate?: InputMaybe<User_Blocks_Aggregate_Order_By>;
  books_count?: InputMaybe<Order_By>;
  cached_cover?: InputMaybe<Order_By>;
  cached_genres?: InputMaybe<Order_By>;
  cached_image?: InputMaybe<Order_By>;
  collection_imports_aggregate?: InputMaybe<Collection_Imports_Aggregate_Order_By>;
  confirmation_sent_at?: InputMaybe<Order_By>;
  confirmed_at?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_sign_in_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  email_verified?: InputMaybe<Order_By>;
  flair?: InputMaybe<Order_By>;
  followed_by_users_aggregate?: InputMaybe<Followed_Users_Aggregate_Order_By>;
  followed_lists_aggregate?: InputMaybe<Followed_Lists_Aggregate_Order_By>;
  followed_prompts_aggregate?: InputMaybe<Followed_Prompts_Aggregate_Order_By>;
  followed_users_aggregate?: InputMaybe<Followed_Users_Aggregate_Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  goals_aggregate?: InputMaybe<Goals_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  image?: InputMaybe<Images_Order_By>;
  image_id?: InputMaybe<Order_By>;
  last_activity_at?: InputMaybe<Order_By>;
  last_sign_in_at?: InputMaybe<Order_By>;
  librarian_roles?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  lists_aggregate?: InputMaybe<Lists_Aggregate_Order_By>;
  location?: InputMaybe<Order_By>;
  locked_at?: InputMaybe<Order_By>;
  match_updated_at?: InputMaybe<Order_By>;
  membership?: InputMaybe<Order_By>;
  membership_ends_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  notification_deliveries_aggregate?: InputMaybe<Notification_Deliveries_Aggregate_Order_By>;
  object_type?: InputMaybe<Order_By>;
  onboarded?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  pro?: InputMaybe<Order_By>;
  prompt_answers_aggregate?: InputMaybe<Prompt_Answers_Aggregate_Order_By>;
  prompts_aggregate?: InputMaybe<Prompts_Aggregate_Order_By>;
  pronoun_personal?: InputMaybe<Order_By>;
  pronoun_possessive?: InputMaybe<Order_By>;
  recommendations_aggregate?: InputMaybe<Recommendations_Aggregate_Order_By>;
  recommended_aggregate?: InputMaybe<Recommendations_Aggregate_Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  referrer_url?: InputMaybe<Order_By>;
  referrered_users_aggregate?: InputMaybe<User_Books_Aggregate_Order_By>;
  remember_created_at?: InputMaybe<Order_By>;
  reported_user_flags_aggregate?: InputMaybe<User_Flags_Aggregate_Order_By>;
  reset_password_sent_at?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
  taggings_aggregate?: InputMaybe<Taggings_Aggregate_Order_By>;
  unconfirmed_email?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_books_aggregate?: InputMaybe<User_Books_Aggregate_Order_By>;
  user_flags_aggregate?: InputMaybe<User_Flags_Aggregate_Order_By>;
  username?: InputMaybe<Order_By>;
};

/** select columns of table "users" */
export enum Users_Select_Column {
  /** column name */
  AccessLevel = 'access_level',
  /** column name */
  AccountPrivacySettingId = 'account_privacy_setting_id',
  /** column name */
  ActivityPrivacySettingsId = 'activity_privacy_settings_id',
  /** column name */
  Admin = 'admin',
  /** column name */
  Bio = 'bio',
  /** column name */
  Birthdate = 'birthdate',
  /** column name */
  BooksCount = 'books_count',
  /** column name */
  CachedCover = 'cached_cover',
  /** column name */
  CachedGenres = 'cached_genres',
  /** column name */
  CachedImage = 'cached_image',
  /** column name */
  ConfirmationSentAt = 'confirmation_sent_at',
  /** column name */
  ConfirmedAt = 'confirmed_at',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentSignInAt = 'current_sign_in_at',
  /** column name */
  Email = 'email',
  /** column name */
  EmailVerified = 'email_verified',
  /** column name */
  Flair = 'flair',
  /** column name */
  FollowedUsersCount = 'followed_users_count',
  /** column name */
  FollowersCount = 'followers_count',
  /** column name */
  Id = 'id',
  /** column name */
  ImageId = 'image_id',
  /** column name */
  LastActivityAt = 'last_activity_at',
  /** column name */
  LastSignInAt = 'last_sign_in_at',
  /** column name */
  LibrarianRoles = 'librarian_roles',
  /** column name */
  Link = 'link',
  /** column name */
  Location = 'location',
  /** column name */
  LockedAt = 'locked_at',
  /** column name */
  MatchUpdatedAt = 'match_updated_at',
  /** column name */
  Membership = 'membership',
  /** column name */
  MembershipEndsAt = 'membership_ends_at',
  /** column name */
  Name = 'name',
  /** column name */
  ObjectType = 'object_type',
  /** column name */
  Onboarded = 'onboarded',
  /** column name */
  PaymentSystemId = 'payment_system_id',
  /** column name */
  Pro = 'pro',
  /** column name */
  PronounPersonal = 'pronoun_personal',
  /** column name */
  PronounPossessive = 'pronoun_possessive',
  /** column name */
  ReferrerId = 'referrer_id',
  /** column name */
  ReferrerUrl = 'referrer_url',
  /** column name */
  RememberCreatedAt = 'remember_created_at',
  /** column name */
  ResetPasswordSentAt = 'reset_password_sent_at',
  /** column name */
  SignInCount = 'sign_in_count',
  /** column name */
  StatusId = 'status_id',
  /** column name */
  UnconfirmedEmail = 'unconfirmed_email',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Username = 'username',
}

/** order by stddev() on columns of table "users" */
export type Users_Stddev_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
};

/** order by stddev_pop() on columns of table "users" */
export type Users_Stddev_Pop_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
};

/** order by stddev_samp() on columns of table "users" */
export type Users_Stddev_Samp_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "users" */
export type Users_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Users_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Users_Stream_Cursor_Value_Input = {
  access_level?: InputMaybe<Scalars['Int']['input']>;
  account_privacy_setting_id?: InputMaybe<Scalars['Int']['input']>;
  activity_privacy_settings_id?: InputMaybe<Scalars['Int']['input']>;
  admin?: InputMaybe<Scalars['Boolean']['input']>;
  bio?: InputMaybe<Scalars['String']['input']>;
  birthdate?: InputMaybe<Scalars['date']['input']>;
  books_count?: InputMaybe<Scalars['Int']['input']>;
  cached_cover?: InputMaybe<Scalars['jsonb']['input']>;
  cached_genres?: InputMaybe<Scalars['jsonb']['input']>;
  cached_image?: InputMaybe<Scalars['jsonb']['input']>;
  confirmation_sent_at?: InputMaybe<Scalars['timestamp']['input']>;
  confirmed_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_at?: InputMaybe<Scalars['timestamptz']['input']>;
  current_sign_in_at?: InputMaybe<Scalars['timestamp']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  email_verified?: InputMaybe<Scalars['timestamptz']['input']>;
  flair?: InputMaybe<Scalars['String']['input']>;
  followed_users_count?: InputMaybe<Scalars['Int']['input']>;
  followers_count?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_id?: InputMaybe<Scalars['Int']['input']>;
  last_activity_at?: InputMaybe<Scalars['timestamp']['input']>;
  last_sign_in_at?: InputMaybe<Scalars['timestamp']['input']>;
  librarian_roles?: InputMaybe<Scalars['jsonb']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  locked_at?: InputMaybe<Scalars['timestamp']['input']>;
  match_updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  membership?: InputMaybe<Scalars['String']['input']>;
  membership_ends_at?: InputMaybe<Scalars['timestamp']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  object_type?: InputMaybe<Scalars['String']['input']>;
  onboarded?: InputMaybe<Scalars['Boolean']['input']>;
  payment_system_id?: InputMaybe<Scalars['Int']['input']>;
  pro?: InputMaybe<Scalars['Boolean']['input']>;
  pronoun_personal?: InputMaybe<Scalars['String']['input']>;
  pronoun_possessive?: InputMaybe<Scalars['String']['input']>;
  referrer_id?: InputMaybe<Scalars['Int']['input']>;
  referrer_url?: InputMaybe<Scalars['String']['input']>;
  remember_created_at?: InputMaybe<Scalars['timestamp']['input']>;
  reset_password_sent_at?: InputMaybe<Scalars['timestamp']['input']>;
  sign_in_count?: InputMaybe<Scalars['Int']['input']>;
  status_id?: InputMaybe<Scalars['Int']['input']>;
  unconfirmed_email?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamptz']['input']>;
  username?: InputMaybe<Scalars['citext']['input']>;
};

/** order by sum() on columns of table "users" */
export type Users_Sum_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
};

/** order by var_pop() on columns of table "users" */
export type Users_Var_Pop_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
};

/** order by var_samp() on columns of table "users" */
export type Users_Var_Samp_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
};

/** order by variance() on columns of table "users" */
export type Users_Variance_Order_By = {
  access_level?: InputMaybe<Order_By>;
  account_privacy_setting_id?: InputMaybe<Order_By>;
  activity_privacy_settings_id?: InputMaybe<Order_By>;
  books_count?: InputMaybe<Order_By>;
  followed_users_count?: InputMaybe<Order_By>;
  followers_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_id?: InputMaybe<Order_By>;
  payment_system_id?: InputMaybe<Order_By>;
  referrer_id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  status_id?: InputMaybe<Order_By>;
};

export type ResolverTypeWrapper<T> = Promise<T> | T;

export type ResolverWithResolve<TResult, TParent, TContext, TArgs> = {
  resolve: ResolverFn<TResult, TParent, TContext, TArgs>;
};
export type Resolver<TResult, TParent = {}, TContext = {}, TArgs = {}> =
  | ResolverFn<TResult, TParent, TContext, TArgs>
  | ResolverWithResolve<TResult, TParent, TContext, TArgs>;

export type ResolverFn<TResult, TParent, TContext, TArgs> = (
  parent: TParent,
  args: TArgs,
  context: TContext,
  info: GraphQLResolveInfo
) => Promise<TResult> | TResult;

export type SubscriptionSubscribeFn<TResult, TParent, TContext, TArgs> = (
  parent: TParent,
  args: TArgs,
  context: TContext,
  info: GraphQLResolveInfo
) => AsyncIterable<TResult> | Promise<AsyncIterable<TResult>>;

export type SubscriptionResolveFn<TResult, TParent, TContext, TArgs> = (
  parent: TParent,
  args: TArgs,
  context: TContext,
  info: GraphQLResolveInfo
) => TResult | Promise<TResult>;

export interface SubscriptionSubscriberObject<
  TResult,
  TKey extends string,
  TParent,
  TContext,
  TArgs,
> {
  subscribe: SubscriptionSubscribeFn<{ [key in TKey]: TResult }, TParent, TContext, TArgs>;
  resolve?: SubscriptionResolveFn<TResult, { [key in TKey]: TResult }, TContext, TArgs>;
}

export interface SubscriptionResolverObject<TResult, TParent, TContext, TArgs> {
  subscribe: SubscriptionSubscribeFn<any, TParent, TContext, TArgs>;
  resolve: SubscriptionResolveFn<TResult, any, TContext, TArgs>;
}

export type SubscriptionObject<TResult, TKey extends string, TParent, TContext, TArgs> =
  | SubscriptionSubscriberObject<TResult, TKey, TParent, TContext, TArgs>
  | SubscriptionResolverObject<TResult, TParent, TContext, TArgs>;

export type SubscriptionResolver<
  TResult,
  TKey extends string,
  TParent = {},
  TContext = {},
  TArgs = {},
> =
  | ((...args: any[]) => SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>)
  | SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>;

export type TypeResolveFn<TTypes, TParent = {}, TContext = {}> = (
  parent: TParent,
  context: TContext,
  info: GraphQLResolveInfo
) => Maybe<TTypes> | Promise<Maybe<TTypes>>;

export type IsTypeOfResolverFn<T = {}, TContext = {}> = (
  obj: T,
  context: TContext,
  info: GraphQLResolveInfo
) => boolean | Promise<boolean>;

export type NextResolverFn<T> = () => Promise<T>;

export type DirectiveResolverFn<TResult = {}, TParent = {}, TContext = {}, TArgs = {}> = (
  next: NextResolverFn<TResult>,
  parent: TParent,
  args: TArgs,
  context: TContext,
  info: GraphQLResolveInfo
) => TResult | Promise<TResult>;

/** Mapping between all available schema types and the resolvers types */
export type ResolversTypes = {
  AuthorIdType: ResolverTypeWrapper<AuthorIdType>;
  AuthorInputType: AuthorInputType;
  BasicTag: BasicTag;
  BasicTagType: ResolverTypeWrapper<BasicTagType>;
  BookDtoInput: BookDtoInput;
  BookDtoType: BookDtoType;
  BookIdType: ResolverTypeWrapper<BookIdType>;
  BookInput: BookInput;
  BookMappingIdType: ResolverTypeWrapper<BookMappingIdType>;
  BookMappingInput: BookMappingInput;
  BookSeriesDtoInput: BookSeriesDtoInput;
  Boolean: ResolverTypeWrapper<Scalars['Boolean']['output']>;
  Boolean_comparison_exp: Boolean_Comparison_Exp;
  CharacterDtoInput: CharacterDtoInput;
  CharacterIdType: ResolverTypeWrapper<CharacterIdType>;
  CharacterInput: CharacterInput;
  CollectionImportIdType: ResolverTypeWrapper<CollectionImportIdType>;
  CollectionImportInput: CollectionImportInput;
  CollectionImportResultIdType: ResolverTypeWrapper<CollectionImportResultIdType>;
  ContributionInputType: ContributionInputType;
  CreateBookFromPlatformInput: CreateBookFromPlatformInput;
  CreatePromptInput: CreatePromptInput;
  DatesReadInput: DatesReadInput;
  DeleteFollowedPromptType: ResolverTypeWrapper<DeleteFollowedPromptType>;
  DeleteListType: ResolverTypeWrapper<DeleteListType>;
  DeleteReadingJournalOutput: ResolverTypeWrapper<DeleteReadingJournalOutput>;
  DeleteReadingJournalsOutput: ResolverTypeWrapper<DeleteReadingJournalsOutput>;
  DtoTag: DtoTag;
  EditionIdType: ResolverTypeWrapper<EditionIdType>;
  EditionInput: EditionInput;
  Float: ResolverTypeWrapper<Scalars['Float']['output']>;
  FollowedListType: ResolverTypeWrapper<FollowedListType>;
  FollowedPromptType: ResolverTypeWrapper<FollowedPromptType>;
  FollowedUserType: ResolverTypeWrapper<FollowedUserType>;
  GoalConditionInput: GoalConditionInput;
  GoalIdType: ResolverTypeWrapper<GoalIdType>;
  GoalInput: GoalInput;
  ImageIdType: ResolverTypeWrapper<ImageIdType>;
  ImageInput: ImageInput;
  InsertBlockOutput: ResolverTypeWrapper<InsertBlockOutput>;
  Int: ResolverTypeWrapper<Scalars['Int']['output']>;
  Int_comparison_exp: Int_Comparison_Exp;
  LikeDeleteType: ResolverTypeWrapper<LikeDeleteType>;
  LikeType: ResolverTypeWrapper<LikeType>;
  ListBookDeleteType: ResolverTypeWrapper<ListBookDeleteType>;
  ListBookIdType: ResolverTypeWrapper<ListBookIdType>;
  ListBookInput: ListBookInput;
  ListDeleteType: ResolverTypeWrapper<ListDeleteType>;
  ListIdType: ResolverTypeWrapper<ListIdType>;
  ListInput: ListInput;
  NewBookIdType: ResolverTypeWrapper<NewBookIdType>;
  NewsletterStatusType: ResolverTypeWrapper<NewsletterStatusType>;
  OptionalEditionIdType: ResolverTypeWrapper<OptionalEditionIdType>;
  PromptAnswerCreateInput: PromptAnswerCreateInput;
  PromptAnswerIdType: ResolverTypeWrapper<PromptAnswerIdType>;
  PromptIdType: ResolverTypeWrapper<PromptIdType>;
  PublisherIdType: ResolverTypeWrapper<PublisherIdType>;
  PublisherInputType: PublisherInputType;
  ReadingJournalCreateType: ReadingJournalCreateType;
  ReadingJournalOutput: ResolverTypeWrapper<ReadingJournalOutput>;
  ReadingJournalUpdateType: ReadingJournalUpdateType;
  ReferralType: ResolverTypeWrapper<ReferralType>;
  ReportInput: ReportInput;
  ReportOutput: ResolverTypeWrapper<ReportOutput>;
  SearchOutput: ResolverTypeWrapper<SearchOutput>;
  SeriesIdType: ResolverTypeWrapper<SeriesIdType>;
  SeriesInput: SeriesInput;
  SeriesInputType: SeriesInputType;
  String: ResolverTypeWrapper<Scalars['String']['output']>;
  String_comparison_exp: String_Comparison_Exp;
  SubscriptionsType: ResolverTypeWrapper<SubscriptionsType>;
  SuccessType: ResolverTypeWrapper<SuccessType>;
  TagsDtoInput: TagsDtoInput;
  TagsType: ResolverTypeWrapper<TagsType>;
  TrendingBookType: ResolverTypeWrapper<TrendingBookType>;
  UpdatePromptInput: UpdatePromptInput;
  UserBookCreateInput: UserBookCreateInput;
  UserBookDeleteType: ResolverTypeWrapper<UserBookDeleteType>;
  UserBookIdType: ResolverTypeWrapper<UserBookIdType>;
  UserBookReadIdType: ResolverTypeWrapper<UserBookReadIdType>;
  UserBookUpdateInput: UserBookUpdateInput;
  UserBooksReadUpsertType: ResolverTypeWrapper<UserBooksReadUpsertType>;
  UserIdType: ResolverTypeWrapper<UserIdType>;
  UserJoinInput: UserJoinInput;
  UserLoginInput: UserLoginInput;
  ValidateReceiptType: ResolverTypeWrapper<ValidateReceiptType>;
  activities: ResolverTypeWrapper<Activities>;
  activities_aggregate_order_by: Activities_Aggregate_Order_By;
  activities_avg_order_by: Activities_Avg_Order_By;
  activities_bool_exp: Activities_Bool_Exp;
  activities_max_order_by: Activities_Max_Order_By;
  activities_min_order_by: Activities_Min_Order_By;
  activities_mutation_response: ResolverTypeWrapper<Activities_Mutation_Response>;
  activities_order_by: Activities_Order_By;
  activities_select_column: Activities_Select_Column;
  activities_stddev_order_by: Activities_Stddev_Order_By;
  activities_stddev_pop_order_by: Activities_Stddev_Pop_Order_By;
  activities_stddev_samp_order_by: Activities_Stddev_Samp_Order_By;
  activities_stream_cursor_input: Activities_Stream_Cursor_Input;
  activities_stream_cursor_value_input: Activities_Stream_Cursor_Value_Input;
  activities_sum_order_by: Activities_Sum_Order_By;
  activities_var_pop_order_by: Activities_Var_Pop_Order_By;
  activities_var_samp_order_by: Activities_Var_Samp_Order_By;
  activities_variance_order_by: Activities_Variance_Order_By;
  activity_feed_args: Activity_Feed_Args;
  activity_foryou_feed_args: Activity_Foryou_Feed_Args;
  authors: ResolverTypeWrapper<Authors>;
  authors_aggregate_order_by: Authors_Aggregate_Order_By;
  authors_avg_order_by: Authors_Avg_Order_By;
  authors_bool_exp: Authors_Bool_Exp;
  authors_max_order_by: Authors_Max_Order_By;
  authors_min_order_by: Authors_Min_Order_By;
  authors_order_by: Authors_Order_By;
  authors_select_column: Authors_Select_Column;
  authors_stddev_order_by: Authors_Stddev_Order_By;
  authors_stddev_pop_order_by: Authors_Stddev_Pop_Order_By;
  authors_stddev_samp_order_by: Authors_Stddev_Samp_Order_By;
  authors_stream_cursor_input: Authors_Stream_Cursor_Input;
  authors_stream_cursor_value_input: Authors_Stream_Cursor_Value_Input;
  authors_sum_order_by: Authors_Sum_Order_By;
  authors_var_pop_order_by: Authors_Var_Pop_Order_By;
  authors_var_samp_order_by: Authors_Var_Samp_Order_By;
  authors_variance_order_by: Authors_Variance_Order_By;
  bigint: ResolverTypeWrapper<Scalars['bigint']['output']>;
  bigint_comparison_exp: Bigint_Comparison_Exp;
  book_categories: ResolverTypeWrapper<Book_Categories>;
  book_categories_bool_exp: Book_Categories_Bool_Exp;
  book_categories_order_by: Book_Categories_Order_By;
  book_categories_select_column: Book_Categories_Select_Column;
  book_categories_stream_cursor_input: Book_Categories_Stream_Cursor_Input;
  book_categories_stream_cursor_value_input: Book_Categories_Stream_Cursor_Value_Input;
  book_characters: ResolverTypeWrapper<Book_Characters>;
  book_characters_aggregate_order_by: Book_Characters_Aggregate_Order_By;
  book_characters_avg_order_by: Book_Characters_Avg_Order_By;
  book_characters_bool_exp: Book_Characters_Bool_Exp;
  book_characters_max_order_by: Book_Characters_Max_Order_By;
  book_characters_min_order_by: Book_Characters_Min_Order_By;
  book_characters_order_by: Book_Characters_Order_By;
  book_characters_select_column: Book_Characters_Select_Column;
  book_characters_stddev_order_by: Book_Characters_Stddev_Order_By;
  book_characters_stddev_pop_order_by: Book_Characters_Stddev_Pop_Order_By;
  book_characters_stddev_samp_order_by: Book_Characters_Stddev_Samp_Order_By;
  book_characters_stream_cursor_input: Book_Characters_Stream_Cursor_Input;
  book_characters_stream_cursor_value_input: Book_Characters_Stream_Cursor_Value_Input;
  book_characters_sum_order_by: Book_Characters_Sum_Order_By;
  book_characters_var_pop_order_by: Book_Characters_Var_Pop_Order_By;
  book_characters_var_samp_order_by: Book_Characters_Var_Samp_Order_By;
  book_characters_variance_order_by: Book_Characters_Variance_Order_By;
  book_collections: ResolverTypeWrapper<Book_Collections>;
  book_collections_bool_exp: Book_Collections_Bool_Exp;
  book_collections_order_by: Book_Collections_Order_By;
  book_collections_select_column: Book_Collections_Select_Column;
  book_collections_stream_cursor_input: Book_Collections_Stream_Cursor_Input;
  book_collections_stream_cursor_value_input: Book_Collections_Stream_Cursor_Value_Input;
  book_mappings: ResolverTypeWrapper<Book_Mappings>;
  book_mappings_aggregate_order_by: Book_Mappings_Aggregate_Order_By;
  book_mappings_avg_order_by: Book_Mappings_Avg_Order_By;
  book_mappings_bool_exp: Book_Mappings_Bool_Exp;
  book_mappings_max_order_by: Book_Mappings_Max_Order_By;
  book_mappings_min_order_by: Book_Mappings_Min_Order_By;
  book_mappings_order_by: Book_Mappings_Order_By;
  book_mappings_select_column: Book_Mappings_Select_Column;
  book_mappings_stddev_order_by: Book_Mappings_Stddev_Order_By;
  book_mappings_stddev_pop_order_by: Book_Mappings_Stddev_Pop_Order_By;
  book_mappings_stddev_samp_order_by: Book_Mappings_Stddev_Samp_Order_By;
  book_mappings_stream_cursor_input: Book_Mappings_Stream_Cursor_Input;
  book_mappings_stream_cursor_value_input: Book_Mappings_Stream_Cursor_Value_Input;
  book_mappings_sum_order_by: Book_Mappings_Sum_Order_By;
  book_mappings_var_pop_order_by: Book_Mappings_Var_Pop_Order_By;
  book_mappings_var_samp_order_by: Book_Mappings_Var_Samp_Order_By;
  book_mappings_variance_order_by: Book_Mappings_Variance_Order_By;
  book_series: ResolverTypeWrapper<Book_Series>;
  book_series_aggregate: ResolverTypeWrapper<Book_Series_Aggregate>;
  book_series_aggregate_bool_exp: Book_Series_Aggregate_Bool_Exp;
  book_series_aggregate_bool_exp_avg: Book_Series_Aggregate_Bool_Exp_Avg;
  book_series_aggregate_bool_exp_bool_and: Book_Series_Aggregate_Bool_Exp_Bool_And;
  book_series_aggregate_bool_exp_bool_or: Book_Series_Aggregate_Bool_Exp_Bool_Or;
  book_series_aggregate_bool_exp_corr: Book_Series_Aggregate_Bool_Exp_Corr;
  book_series_aggregate_bool_exp_corr_arguments: Book_Series_Aggregate_Bool_Exp_Corr_Arguments;
  book_series_aggregate_bool_exp_count: Book_Series_Aggregate_Bool_Exp_Count;
  book_series_aggregate_bool_exp_covar_samp: Book_Series_Aggregate_Bool_Exp_Covar_Samp;
  book_series_aggregate_bool_exp_covar_samp_arguments: Book_Series_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  book_series_aggregate_bool_exp_max: Book_Series_Aggregate_Bool_Exp_Max;
  book_series_aggregate_bool_exp_min: Book_Series_Aggregate_Bool_Exp_Min;
  book_series_aggregate_bool_exp_stddev_samp: Book_Series_Aggregate_Bool_Exp_Stddev_Samp;
  book_series_aggregate_bool_exp_sum: Book_Series_Aggregate_Bool_Exp_Sum;
  book_series_aggregate_bool_exp_var_samp: Book_Series_Aggregate_Bool_Exp_Var_Samp;
  book_series_aggregate_fields: ResolverTypeWrapper<Book_Series_Aggregate_Fields>;
  book_series_aggregate_order_by: Book_Series_Aggregate_Order_By;
  book_series_avg_fields: ResolverTypeWrapper<Book_Series_Avg_Fields>;
  book_series_avg_order_by: Book_Series_Avg_Order_By;
  book_series_bool_exp: Book_Series_Bool_Exp;
  book_series_max_fields: ResolverTypeWrapper<Book_Series_Max_Fields>;
  book_series_max_order_by: Book_Series_Max_Order_By;
  book_series_min_fields: ResolverTypeWrapper<Book_Series_Min_Fields>;
  book_series_min_order_by: Book_Series_Min_Order_By;
  book_series_order_by: Book_Series_Order_By;
  book_series_select_column: Book_Series_Select_Column;
  book_series_select_column_book_series_aggregate_bool_exp_avg_arguments_columns: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Avg_Arguments_Columns;
  book_series_select_column_book_series_aggregate_bool_exp_bool_and_arguments_columns: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  book_series_select_column_book_series_aggregate_bool_exp_bool_or_arguments_columns: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  book_series_select_column_book_series_aggregate_bool_exp_corr_arguments_columns: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Corr_Arguments_Columns;
  book_series_select_column_book_series_aggregate_bool_exp_covar_samp_arguments_columns: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
  book_series_select_column_book_series_aggregate_bool_exp_max_arguments_columns: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Max_Arguments_Columns;
  book_series_select_column_book_series_aggregate_bool_exp_min_arguments_columns: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Min_Arguments_Columns;
  book_series_select_column_book_series_aggregate_bool_exp_stddev_samp_arguments_columns: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns;
  book_series_select_column_book_series_aggregate_bool_exp_sum_arguments_columns: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Sum_Arguments_Columns;
  book_series_select_column_book_series_aggregate_bool_exp_var_samp_arguments_columns: Book_Series_Select_Column_Book_Series_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns;
  book_series_stddev_fields: ResolverTypeWrapper<Book_Series_Stddev_Fields>;
  book_series_stddev_order_by: Book_Series_Stddev_Order_By;
  book_series_stddev_pop_fields: ResolverTypeWrapper<Book_Series_Stddev_Pop_Fields>;
  book_series_stddev_pop_order_by: Book_Series_Stddev_Pop_Order_By;
  book_series_stddev_samp_fields: ResolverTypeWrapper<Book_Series_Stddev_Samp_Fields>;
  book_series_stddev_samp_order_by: Book_Series_Stddev_Samp_Order_By;
  book_series_stream_cursor_input: Book_Series_Stream_Cursor_Input;
  book_series_stream_cursor_value_input: Book_Series_Stream_Cursor_Value_Input;
  book_series_sum_fields: ResolverTypeWrapper<Book_Series_Sum_Fields>;
  book_series_sum_order_by: Book_Series_Sum_Order_By;
  book_series_var_pop_fields: ResolverTypeWrapper<Book_Series_Var_Pop_Fields>;
  book_series_var_pop_order_by: Book_Series_Var_Pop_Order_By;
  book_series_var_samp_fields: ResolverTypeWrapper<Book_Series_Var_Samp_Fields>;
  book_series_var_samp_order_by: Book_Series_Var_Samp_Order_By;
  book_series_variance_fields: ResolverTypeWrapper<Book_Series_Variance_Fields>;
  book_series_variance_order_by: Book_Series_Variance_Order_By;
  book_statuses: ResolverTypeWrapper<Book_Statuses>;
  book_statuses_bool_exp: Book_Statuses_Bool_Exp;
  book_statuses_order_by: Book_Statuses_Order_By;
  book_statuses_select_column: Book_Statuses_Select_Column;
  book_statuses_stream_cursor_input: Book_Statuses_Stream_Cursor_Input;
  book_statuses_stream_cursor_value_input: Book_Statuses_Stream_Cursor_Value_Input;
  bookles: ResolverTypeWrapper<Bookles>;
  bookles_bool_exp: Bookles_Bool_Exp;
  bookles_order_by: Bookles_Order_By;
  bookles_select_column: Bookles_Select_Column;
  bookles_stream_cursor_input: Bookles_Stream_Cursor_Input;
  bookles_stream_cursor_value_input: Bookles_Stream_Cursor_Value_Input;
  books: ResolverTypeWrapper<Books>;
  books_aggregate: ResolverTypeWrapper<Books_Aggregate>;
  books_aggregate_bool_exp: Books_Aggregate_Bool_Exp;
  books_aggregate_bool_exp_bool_and: Books_Aggregate_Bool_Exp_Bool_And;
  books_aggregate_bool_exp_bool_or: Books_Aggregate_Bool_Exp_Bool_Or;
  books_aggregate_bool_exp_count: Books_Aggregate_Bool_Exp_Count;
  books_aggregate_fields: ResolverTypeWrapper<Books_Aggregate_Fields>;
  books_aggregate_order_by: Books_Aggregate_Order_By;
  books_avg_fields: ResolverTypeWrapper<Books_Avg_Fields>;
  books_avg_order_by: Books_Avg_Order_By;
  books_bool_exp: Books_Bool_Exp;
  books_max_fields: ResolverTypeWrapper<Books_Max_Fields>;
  books_max_order_by: Books_Max_Order_By;
  books_min_fields: ResolverTypeWrapper<Books_Min_Fields>;
  books_min_order_by: Books_Min_Order_By;
  books_order_by: Books_Order_By;
  books_select_column: Books_Select_Column;
  books_select_column_books_aggregate_bool_exp_bool_and_arguments_columns: Books_Select_Column_Books_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  books_select_column_books_aggregate_bool_exp_bool_or_arguments_columns: Books_Select_Column_Books_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  books_stddev_fields: ResolverTypeWrapper<Books_Stddev_Fields>;
  books_stddev_order_by: Books_Stddev_Order_By;
  books_stddev_pop_fields: ResolverTypeWrapper<Books_Stddev_Pop_Fields>;
  books_stddev_pop_order_by: Books_Stddev_Pop_Order_By;
  books_stddev_samp_fields: ResolverTypeWrapper<Books_Stddev_Samp_Fields>;
  books_stddev_samp_order_by: Books_Stddev_Samp_Order_By;
  books_stream_cursor_input: Books_Stream_Cursor_Input;
  books_stream_cursor_value_input: Books_Stream_Cursor_Value_Input;
  books_sum_fields: ResolverTypeWrapper<Books_Sum_Fields>;
  books_sum_order_by: Books_Sum_Order_By;
  books_var_pop_fields: ResolverTypeWrapper<Books_Var_Pop_Fields>;
  books_var_pop_order_by: Books_Var_Pop_Order_By;
  books_var_samp_fields: ResolverTypeWrapper<Books_Var_Samp_Fields>;
  books_var_samp_order_by: Books_Var_Samp_Order_By;
  books_variance_fields: ResolverTypeWrapper<Books_Variance_Fields>;
  books_variance_order_by: Books_Variance_Order_By;
  characters: ResolverTypeWrapper<Characters>;
  characters_bool_exp: Characters_Bool_Exp;
  characters_order_by: Characters_Order_By;
  characters_select_column: Characters_Select_Column;
  characters_stream_cursor_input: Characters_Stream_Cursor_Input;
  characters_stream_cursor_value_input: Characters_Stream_Cursor_Value_Input;
  citext: ResolverTypeWrapper<Scalars['citext']['output']>;
  citext_comparison_exp: Citext_Comparison_Exp;
  collection_import_results: ResolverTypeWrapper<Collection_Import_Results>;
  collection_import_results_aggregate_order_by: Collection_Import_Results_Aggregate_Order_By;
  collection_import_results_avg_order_by: Collection_Import_Results_Avg_Order_By;
  collection_import_results_bool_exp: Collection_Import_Results_Bool_Exp;
  collection_import_results_inc_input: Collection_Import_Results_Inc_Input;
  collection_import_results_max_order_by: Collection_Import_Results_Max_Order_By;
  collection_import_results_min_order_by: Collection_Import_Results_Min_Order_By;
  collection_import_results_mutation_response: ResolverTypeWrapper<Collection_Import_Results_Mutation_Response>;
  collection_import_results_order_by: Collection_Import_Results_Order_By;
  collection_import_results_pk_columns_input: Collection_Import_Results_Pk_Columns_Input;
  collection_import_results_select_column: Collection_Import_Results_Select_Column;
  collection_import_results_set_input: Collection_Import_Results_Set_Input;
  collection_import_results_stddev_order_by: Collection_Import_Results_Stddev_Order_By;
  collection_import_results_stddev_pop_order_by: Collection_Import_Results_Stddev_Pop_Order_By;
  collection_import_results_stddev_samp_order_by: Collection_Import_Results_Stddev_Samp_Order_By;
  collection_import_results_stream_cursor_input: Collection_Import_Results_Stream_Cursor_Input;
  collection_import_results_stream_cursor_value_input: Collection_Import_Results_Stream_Cursor_Value_Input;
  collection_import_results_sum_order_by: Collection_Import_Results_Sum_Order_By;
  collection_import_results_updates: Collection_Import_Results_Updates;
  collection_import_results_var_pop_order_by: Collection_Import_Results_Var_Pop_Order_By;
  collection_import_results_var_samp_order_by: Collection_Import_Results_Var_Samp_Order_By;
  collection_import_results_variance_order_by: Collection_Import_Results_Variance_Order_By;
  collection_imports: ResolverTypeWrapper<Collection_Imports>;
  collection_imports_aggregate_order_by: Collection_Imports_Aggregate_Order_By;
  collection_imports_avg_order_by: Collection_Imports_Avg_Order_By;
  collection_imports_bool_exp: Collection_Imports_Bool_Exp;
  collection_imports_max_order_by: Collection_Imports_Max_Order_By;
  collection_imports_min_order_by: Collection_Imports_Min_Order_By;
  collection_imports_order_by: Collection_Imports_Order_By;
  collection_imports_select_column: Collection_Imports_Select_Column;
  collection_imports_stddev_order_by: Collection_Imports_Stddev_Order_By;
  collection_imports_stddev_pop_order_by: Collection_Imports_Stddev_Pop_Order_By;
  collection_imports_stddev_samp_order_by: Collection_Imports_Stddev_Samp_Order_By;
  collection_imports_stream_cursor_input: Collection_Imports_Stream_Cursor_Input;
  collection_imports_stream_cursor_value_input: Collection_Imports_Stream_Cursor_Value_Input;
  collection_imports_sum_order_by: Collection_Imports_Sum_Order_By;
  collection_imports_var_pop_order_by: Collection_Imports_Var_Pop_Order_By;
  collection_imports_var_samp_order_by: Collection_Imports_Var_Samp_Order_By;
  collection_imports_variance_order_by: Collection_Imports_Variance_Order_By;
  contributions: ResolverTypeWrapper<Contributions>;
  contributions_aggregate: ResolverTypeWrapper<Contributions_Aggregate>;
  contributions_aggregate_bool_exp: Contributions_Aggregate_Bool_Exp;
  contributions_aggregate_bool_exp_count: Contributions_Aggregate_Bool_Exp_Count;
  contributions_aggregate_fields: ResolverTypeWrapper<Contributions_Aggregate_Fields>;
  contributions_aggregate_order_by: Contributions_Aggregate_Order_By;
  contributions_avg_fields: ResolverTypeWrapper<Contributions_Avg_Fields>;
  contributions_avg_order_by: Contributions_Avg_Order_By;
  contributions_bool_exp: Contributions_Bool_Exp;
  contributions_max_fields: ResolverTypeWrapper<Contributions_Max_Fields>;
  contributions_max_order_by: Contributions_Max_Order_By;
  contributions_min_fields: ResolverTypeWrapper<Contributions_Min_Fields>;
  contributions_min_order_by: Contributions_Min_Order_By;
  contributions_order_by: Contributions_Order_By;
  contributions_select_column: Contributions_Select_Column;
  contributions_stddev_fields: ResolverTypeWrapper<Contributions_Stddev_Fields>;
  contributions_stddev_order_by: Contributions_Stddev_Order_By;
  contributions_stddev_pop_fields: ResolverTypeWrapper<Contributions_Stddev_Pop_Fields>;
  contributions_stddev_pop_order_by: Contributions_Stddev_Pop_Order_By;
  contributions_stddev_samp_fields: ResolverTypeWrapper<Contributions_Stddev_Samp_Fields>;
  contributions_stddev_samp_order_by: Contributions_Stddev_Samp_Order_By;
  contributions_stream_cursor_input: Contributions_Stream_Cursor_Input;
  contributions_stream_cursor_value_input: Contributions_Stream_Cursor_Value_Input;
  contributions_sum_fields: ResolverTypeWrapper<Contributions_Sum_Fields>;
  contributions_sum_order_by: Contributions_Sum_Order_By;
  contributions_var_pop_fields: ResolverTypeWrapper<Contributions_Var_Pop_Fields>;
  contributions_var_pop_order_by: Contributions_Var_Pop_Order_By;
  contributions_var_samp_fields: ResolverTypeWrapper<Contributions_Var_Samp_Fields>;
  contributions_var_samp_order_by: Contributions_Var_Samp_Order_By;
  contributions_variance_fields: ResolverTypeWrapper<Contributions_Variance_Fields>;
  contributions_variance_order_by: Contributions_Variance_Order_By;
  countries: ResolverTypeWrapper<Countries>;
  countries_bool_exp: Countries_Bool_Exp;
  countries_order_by: Countries_Order_By;
  countries_select_column: Countries_Select_Column;
  countries_stream_cursor_input: Countries_Stream_Cursor_Input;
  countries_stream_cursor_value_input: Countries_Stream_Cursor_Value_Input;
  cursor_ordering: Cursor_Ordering;
  date: ResolverTypeWrapper<Scalars['date']['output']>;
  date_comparison_exp: Date_Comparison_Exp;
  editions: ResolverTypeWrapper<Editions>;
  editions_aggregate_order_by: Editions_Aggregate_Order_By;
  editions_avg_order_by: Editions_Avg_Order_By;
  editions_bool_exp: Editions_Bool_Exp;
  editions_max_order_by: Editions_Max_Order_By;
  editions_min_order_by: Editions_Min_Order_By;
  editions_order_by: Editions_Order_By;
  editions_select_column: Editions_Select_Column;
  editions_stddev_order_by: Editions_Stddev_Order_By;
  editions_stddev_pop_order_by: Editions_Stddev_Pop_Order_By;
  editions_stddev_samp_order_by: Editions_Stddev_Samp_Order_By;
  editions_stream_cursor_input: Editions_Stream_Cursor_Input;
  editions_stream_cursor_value_input: Editions_Stream_Cursor_Value_Input;
  editions_sum_order_by: Editions_Sum_Order_By;
  editions_var_pop_order_by: Editions_Var_Pop_Order_By;
  editions_var_samp_order_by: Editions_Var_Samp_Order_By;
  editions_variance_order_by: Editions_Variance_Order_By;
  flag_statuses: ResolverTypeWrapper<Flag_Statuses>;
  flag_statuses_bool_exp: Flag_Statuses_Bool_Exp;
  flag_statuses_order_by: Flag_Statuses_Order_By;
  flag_statuses_select_column: Flag_Statuses_Select_Column;
  flag_statuses_stream_cursor_input: Flag_Statuses_Stream_Cursor_Input;
  flag_statuses_stream_cursor_value_input: Flag_Statuses_Stream_Cursor_Value_Input;
  float8: ResolverTypeWrapper<Scalars['float8']['output']>;
  float8_comparison_exp: Float8_Comparison_Exp;
  followed_lists: ResolverTypeWrapper<Followed_Lists>;
  followed_lists_aggregate_order_by: Followed_Lists_Aggregate_Order_By;
  followed_lists_avg_order_by: Followed_Lists_Avg_Order_By;
  followed_lists_bool_exp: Followed_Lists_Bool_Exp;
  followed_lists_max_order_by: Followed_Lists_Max_Order_By;
  followed_lists_min_order_by: Followed_Lists_Min_Order_By;
  followed_lists_order_by: Followed_Lists_Order_By;
  followed_lists_select_column: Followed_Lists_Select_Column;
  followed_lists_stddev_order_by: Followed_Lists_Stddev_Order_By;
  followed_lists_stddev_pop_order_by: Followed_Lists_Stddev_Pop_Order_By;
  followed_lists_stddev_samp_order_by: Followed_Lists_Stddev_Samp_Order_By;
  followed_lists_stream_cursor_input: Followed_Lists_Stream_Cursor_Input;
  followed_lists_stream_cursor_value_input: Followed_Lists_Stream_Cursor_Value_Input;
  followed_lists_sum_order_by: Followed_Lists_Sum_Order_By;
  followed_lists_var_pop_order_by: Followed_Lists_Var_Pop_Order_By;
  followed_lists_var_samp_order_by: Followed_Lists_Var_Samp_Order_By;
  followed_lists_variance_order_by: Followed_Lists_Variance_Order_By;
  followed_prompts: ResolverTypeWrapper<Followed_Prompts>;
  followed_prompts_aggregate_order_by: Followed_Prompts_Aggregate_Order_By;
  followed_prompts_avg_order_by: Followed_Prompts_Avg_Order_By;
  followed_prompts_bool_exp: Followed_Prompts_Bool_Exp;
  followed_prompts_constraint: Followed_Prompts_Constraint;
  followed_prompts_inc_input: Followed_Prompts_Inc_Input;
  followed_prompts_insert_input: Followed_Prompts_Insert_Input;
  followed_prompts_max_order_by: Followed_Prompts_Max_Order_By;
  followed_prompts_min_order_by: Followed_Prompts_Min_Order_By;
  followed_prompts_mutation_response: ResolverTypeWrapper<Followed_Prompts_Mutation_Response>;
  followed_prompts_on_conflict: Followed_Prompts_On_Conflict;
  followed_prompts_order_by: Followed_Prompts_Order_By;
  followed_prompts_pk_columns_input: Followed_Prompts_Pk_Columns_Input;
  followed_prompts_select_column: Followed_Prompts_Select_Column;
  followed_prompts_set_input: Followed_Prompts_Set_Input;
  followed_prompts_stddev_order_by: Followed_Prompts_Stddev_Order_By;
  followed_prompts_stddev_pop_order_by: Followed_Prompts_Stddev_Pop_Order_By;
  followed_prompts_stddev_samp_order_by: Followed_Prompts_Stddev_Samp_Order_By;
  followed_prompts_stream_cursor_input: Followed_Prompts_Stream_Cursor_Input;
  followed_prompts_stream_cursor_value_input: Followed_Prompts_Stream_Cursor_Value_Input;
  followed_prompts_sum_order_by: Followed_Prompts_Sum_Order_By;
  followed_prompts_update_column: Followed_Prompts_Update_Column;
  followed_prompts_updates: Followed_Prompts_Updates;
  followed_prompts_var_pop_order_by: Followed_Prompts_Var_Pop_Order_By;
  followed_prompts_var_samp_order_by: Followed_Prompts_Var_Samp_Order_By;
  followed_prompts_variance_order_by: Followed_Prompts_Variance_Order_By;
  followed_user_books: ResolverTypeWrapper<Followed_User_Books>;
  followed_user_books_aggregate: ResolverTypeWrapper<Followed_User_Books_Aggregate>;
  followed_user_books_aggregate_fields: ResolverTypeWrapper<Followed_User_Books_Aggregate_Fields>;
  followed_user_books_avg_fields: ResolverTypeWrapper<Followed_User_Books_Avg_Fields>;
  followed_user_books_bool_exp: Followed_User_Books_Bool_Exp;
  followed_user_books_max_fields: ResolverTypeWrapper<Followed_User_Books_Max_Fields>;
  followed_user_books_min_fields: ResolverTypeWrapper<Followed_User_Books_Min_Fields>;
  followed_user_books_order_by: Followed_User_Books_Order_By;
  followed_user_books_select_column: Followed_User_Books_Select_Column;
  followed_user_books_stddev_fields: ResolverTypeWrapper<Followed_User_Books_Stddev_Fields>;
  followed_user_books_stddev_pop_fields: ResolverTypeWrapper<Followed_User_Books_Stddev_Pop_Fields>;
  followed_user_books_stddev_samp_fields: ResolverTypeWrapper<Followed_User_Books_Stddev_Samp_Fields>;
  followed_user_books_stream_cursor_input: Followed_User_Books_Stream_Cursor_Input;
  followed_user_books_stream_cursor_value_input: Followed_User_Books_Stream_Cursor_Value_Input;
  followed_user_books_sum_fields: ResolverTypeWrapper<Followed_User_Books_Sum_Fields>;
  followed_user_books_var_pop_fields: ResolverTypeWrapper<Followed_User_Books_Var_Pop_Fields>;
  followed_user_books_var_samp_fields: ResolverTypeWrapper<Followed_User_Books_Var_Samp_Fields>;
  followed_user_books_variance_fields: ResolverTypeWrapper<Followed_User_Books_Variance_Fields>;
  followed_users: ResolverTypeWrapper<Followed_Users>;
  followed_users_aggregate_order_by: Followed_Users_Aggregate_Order_By;
  followed_users_avg_order_by: Followed_Users_Avg_Order_By;
  followed_users_bool_exp: Followed_Users_Bool_Exp;
  followed_users_max_order_by: Followed_Users_Max_Order_By;
  followed_users_min_order_by: Followed_Users_Min_Order_By;
  followed_users_mutation_response: ResolverTypeWrapper<Followed_Users_Mutation_Response>;
  followed_users_order_by: Followed_Users_Order_By;
  followed_users_select_column: Followed_Users_Select_Column;
  followed_users_stddev_order_by: Followed_Users_Stddev_Order_By;
  followed_users_stddev_pop_order_by: Followed_Users_Stddev_Pop_Order_By;
  followed_users_stddev_samp_order_by: Followed_Users_Stddev_Samp_Order_By;
  followed_users_stream_cursor_input: Followed_Users_Stream_Cursor_Input;
  followed_users_stream_cursor_value_input: Followed_Users_Stream_Cursor_Value_Input;
  followed_users_sum_order_by: Followed_Users_Sum_Order_By;
  followed_users_var_pop_order_by: Followed_Users_Var_Pop_Order_By;
  followed_users_var_samp_order_by: Followed_Users_Var_Samp_Order_By;
  followed_users_variance_order_by: Followed_Users_Variance_Order_By;
  following_user_books: ResolverTypeWrapper<Following_User_Books>;
  following_user_books_aggregate: ResolverTypeWrapper<Following_User_Books_Aggregate>;
  following_user_books_aggregate_fields: ResolverTypeWrapper<Following_User_Books_Aggregate_Fields>;
  following_user_books_avg_fields: ResolverTypeWrapper<Following_User_Books_Avg_Fields>;
  following_user_books_bool_exp: Following_User_Books_Bool_Exp;
  following_user_books_max_fields: ResolverTypeWrapper<Following_User_Books_Max_Fields>;
  following_user_books_min_fields: ResolverTypeWrapper<Following_User_Books_Min_Fields>;
  following_user_books_order_by: Following_User_Books_Order_By;
  following_user_books_select_column: Following_User_Books_Select_Column;
  following_user_books_stddev_fields: ResolverTypeWrapper<Following_User_Books_Stddev_Fields>;
  following_user_books_stddev_pop_fields: ResolverTypeWrapper<Following_User_Books_Stddev_Pop_Fields>;
  following_user_books_stddev_samp_fields: ResolverTypeWrapper<Following_User_Books_Stddev_Samp_Fields>;
  following_user_books_stream_cursor_input: Following_User_Books_Stream_Cursor_Input;
  following_user_books_stream_cursor_value_input: Following_User_Books_Stream_Cursor_Value_Input;
  following_user_books_sum_fields: ResolverTypeWrapper<Following_User_Books_Sum_Fields>;
  following_user_books_var_pop_fields: ResolverTypeWrapper<Following_User_Books_Var_Pop_Fields>;
  following_user_books_var_samp_fields: ResolverTypeWrapper<Following_User_Books_Var_Samp_Fields>;
  following_user_books_variance_fields: ResolverTypeWrapper<Following_User_Books_Variance_Fields>;
  goals: ResolverTypeWrapper<Goals>;
  goals_aggregate_order_by: Goals_Aggregate_Order_By;
  goals_avg_order_by: Goals_Avg_Order_By;
  goals_bool_exp: Goals_Bool_Exp;
  goals_max_order_by: Goals_Max_Order_By;
  goals_min_order_by: Goals_Min_Order_By;
  goals_mutation_response: ResolverTypeWrapper<Goals_Mutation_Response>;
  goals_order_by: Goals_Order_By;
  goals_select_column: Goals_Select_Column;
  goals_stddev_order_by: Goals_Stddev_Order_By;
  goals_stddev_pop_order_by: Goals_Stddev_Pop_Order_By;
  goals_stddev_samp_order_by: Goals_Stddev_Samp_Order_By;
  goals_stream_cursor_input: Goals_Stream_Cursor_Input;
  goals_stream_cursor_value_input: Goals_Stream_Cursor_Value_Input;
  goals_sum_order_by: Goals_Sum_Order_By;
  goals_var_pop_order_by: Goals_Var_Pop_Order_By;
  goals_var_samp_order_by: Goals_Var_Samp_Order_By;
  goals_variance_order_by: Goals_Variance_Order_By;
  images: ResolverTypeWrapper<Images>;
  images_aggregate_order_by: Images_Aggregate_Order_By;
  images_avg_order_by: Images_Avg_Order_By;
  images_bool_exp: Images_Bool_Exp;
  images_max_order_by: Images_Max_Order_By;
  images_min_order_by: Images_Min_Order_By;
  images_order_by: Images_Order_By;
  images_select_column: Images_Select_Column;
  images_stddev_order_by: Images_Stddev_Order_By;
  images_stddev_pop_order_by: Images_Stddev_Pop_Order_By;
  images_stddev_samp_order_by: Images_Stddev_Samp_Order_By;
  images_stream_cursor_input: Images_Stream_Cursor_Input;
  images_stream_cursor_value_input: Images_Stream_Cursor_Value_Input;
  images_sum_order_by: Images_Sum_Order_By;
  images_var_pop_order_by: Images_Var_Pop_Order_By;
  images_var_samp_order_by: Images_Var_Samp_Order_By;
  images_variance_order_by: Images_Variance_Order_By;
  json: ResolverTypeWrapper<Scalars['json']['output']>;
  json_comparison_exp: Json_Comparison_Exp;
  jsonb: ResolverTypeWrapper<Scalars['jsonb']['output']>;
  jsonb_cast_exp: Jsonb_Cast_Exp;
  jsonb_comparison_exp: Jsonb_Comparison_Exp;
  languages: ResolverTypeWrapper<Languages>;
  languages_bool_exp: Languages_Bool_Exp;
  languages_order_by: Languages_Order_By;
  languages_select_column: Languages_Select_Column;
  languages_stream_cursor_input: Languages_Stream_Cursor_Input;
  languages_stream_cursor_value_input: Languages_Stream_Cursor_Value_Input;
  likes: ResolverTypeWrapper<Likes>;
  likes_aggregate_order_by: Likes_Aggregate_Order_By;
  likes_avg_order_by: Likes_Avg_Order_By;
  likes_bool_exp: Likes_Bool_Exp;
  likes_max_order_by: Likes_Max_Order_By;
  likes_min_order_by: Likes_Min_Order_By;
  likes_order_by: Likes_Order_By;
  likes_select_column: Likes_Select_Column;
  likes_stddev_order_by: Likes_Stddev_Order_By;
  likes_stddev_pop_order_by: Likes_Stddev_Pop_Order_By;
  likes_stddev_samp_order_by: Likes_Stddev_Samp_Order_By;
  likes_stream_cursor_input: Likes_Stream_Cursor_Input;
  likes_stream_cursor_value_input: Likes_Stream_Cursor_Value_Input;
  likes_sum_order_by: Likes_Sum_Order_By;
  likes_var_pop_order_by: Likes_Var_Pop_Order_By;
  likes_var_samp_order_by: Likes_Var_Samp_Order_By;
  likes_variance_order_by: Likes_Variance_Order_By;
  list_books: ResolverTypeWrapper<List_Books>;
  list_books_aggregate: ResolverTypeWrapper<List_Books_Aggregate>;
  list_books_aggregate_bool_exp: List_Books_Aggregate_Bool_Exp;
  list_books_aggregate_bool_exp_bool_and: List_Books_Aggregate_Bool_Exp_Bool_And;
  list_books_aggregate_bool_exp_bool_or: List_Books_Aggregate_Bool_Exp_Bool_Or;
  list_books_aggregate_bool_exp_count: List_Books_Aggregate_Bool_Exp_Count;
  list_books_aggregate_fields: ResolverTypeWrapper<List_Books_Aggregate_Fields>;
  list_books_aggregate_order_by: List_Books_Aggregate_Order_By;
  list_books_avg_fields: ResolverTypeWrapper<List_Books_Avg_Fields>;
  list_books_avg_order_by: List_Books_Avg_Order_By;
  list_books_bool_exp: List_Books_Bool_Exp;
  list_books_inc_input: List_Books_Inc_Input;
  list_books_max_fields: ResolverTypeWrapper<List_Books_Max_Fields>;
  list_books_max_order_by: List_Books_Max_Order_By;
  list_books_min_fields: ResolverTypeWrapper<List_Books_Min_Fields>;
  list_books_min_order_by: List_Books_Min_Order_By;
  list_books_mutation_response: ResolverTypeWrapper<List_Books_Mutation_Response>;
  list_books_order_by: List_Books_Order_By;
  list_books_pk_columns_input: List_Books_Pk_Columns_Input;
  list_books_select_column: List_Books_Select_Column;
  list_books_select_column_list_books_aggregate_bool_exp_bool_and_arguments_columns: List_Books_Select_Column_List_Books_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  list_books_select_column_list_books_aggregate_bool_exp_bool_or_arguments_columns: List_Books_Select_Column_List_Books_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  list_books_set_input: List_Books_Set_Input;
  list_books_stddev_fields: ResolverTypeWrapper<List_Books_Stddev_Fields>;
  list_books_stddev_order_by: List_Books_Stddev_Order_By;
  list_books_stddev_pop_fields: ResolverTypeWrapper<List_Books_Stddev_Pop_Fields>;
  list_books_stddev_pop_order_by: List_Books_Stddev_Pop_Order_By;
  list_books_stddev_samp_fields: ResolverTypeWrapper<List_Books_Stddev_Samp_Fields>;
  list_books_stddev_samp_order_by: List_Books_Stddev_Samp_Order_By;
  list_books_stream_cursor_input: List_Books_Stream_Cursor_Input;
  list_books_stream_cursor_value_input: List_Books_Stream_Cursor_Value_Input;
  list_books_sum_fields: ResolverTypeWrapper<List_Books_Sum_Fields>;
  list_books_sum_order_by: List_Books_Sum_Order_By;
  list_books_updates: List_Books_Updates;
  list_books_var_pop_fields: ResolverTypeWrapper<List_Books_Var_Pop_Fields>;
  list_books_var_pop_order_by: List_Books_Var_Pop_Order_By;
  list_books_var_samp_fields: ResolverTypeWrapper<List_Books_Var_Samp_Fields>;
  list_books_var_samp_order_by: List_Books_Var_Samp_Order_By;
  list_books_variance_fields: ResolverTypeWrapper<List_Books_Variance_Fields>;
  list_books_variance_order_by: List_Books_Variance_Order_By;
  lists: ResolverTypeWrapper<Lists>;
  lists_aggregate: ResolverTypeWrapper<Lists_Aggregate>;
  lists_aggregate_bool_exp: Lists_Aggregate_Bool_Exp;
  lists_aggregate_bool_exp_bool_and: Lists_Aggregate_Bool_Exp_Bool_And;
  lists_aggregate_bool_exp_bool_or: Lists_Aggregate_Bool_Exp_Bool_Or;
  lists_aggregate_bool_exp_count: Lists_Aggregate_Bool_Exp_Count;
  lists_aggregate_fields: ResolverTypeWrapper<Lists_Aggregate_Fields>;
  lists_aggregate_order_by: Lists_Aggregate_Order_By;
  lists_avg_fields: ResolverTypeWrapper<Lists_Avg_Fields>;
  lists_avg_order_by: Lists_Avg_Order_By;
  lists_bool_exp: Lists_Bool_Exp;
  lists_max_fields: ResolverTypeWrapper<Lists_Max_Fields>;
  lists_max_order_by: Lists_Max_Order_By;
  lists_min_fields: ResolverTypeWrapper<Lists_Min_Fields>;
  lists_min_order_by: Lists_Min_Order_By;
  lists_order_by: Lists_Order_By;
  lists_select_column: Lists_Select_Column;
  lists_select_column_lists_aggregate_bool_exp_bool_and_arguments_columns: Lists_Select_Column_Lists_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  lists_select_column_lists_aggregate_bool_exp_bool_or_arguments_columns: Lists_Select_Column_Lists_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  lists_stddev_fields: ResolverTypeWrapper<Lists_Stddev_Fields>;
  lists_stddev_order_by: Lists_Stddev_Order_By;
  lists_stddev_pop_fields: ResolverTypeWrapper<Lists_Stddev_Pop_Fields>;
  lists_stddev_pop_order_by: Lists_Stddev_Pop_Order_By;
  lists_stddev_samp_fields: ResolverTypeWrapper<Lists_Stddev_Samp_Fields>;
  lists_stddev_samp_order_by: Lists_Stddev_Samp_Order_By;
  lists_stream_cursor_input: Lists_Stream_Cursor_Input;
  lists_stream_cursor_value_input: Lists_Stream_Cursor_Value_Input;
  lists_sum_fields: ResolverTypeWrapper<Lists_Sum_Fields>;
  lists_sum_order_by: Lists_Sum_Order_By;
  lists_var_pop_fields: ResolverTypeWrapper<Lists_Var_Pop_Fields>;
  lists_var_pop_order_by: Lists_Var_Pop_Order_By;
  lists_var_samp_fields: ResolverTypeWrapper<Lists_Var_Samp_Fields>;
  lists_var_samp_order_by: Lists_Var_Samp_Order_By;
  lists_variance_fields: ResolverTypeWrapper<Lists_Variance_Fields>;
  lists_variance_order_by: Lists_Variance_Order_By;
  mutation_root: ResolverTypeWrapper<{}>;
  notification_channels: ResolverTypeWrapper<Notification_Channels>;
  notification_channels_bool_exp: Notification_Channels_Bool_Exp;
  notification_channels_order_by: Notification_Channels_Order_By;
  notification_channels_select_column: Notification_Channels_Select_Column;
  notification_channels_stream_cursor_input: Notification_Channels_Stream_Cursor_Input;
  notification_channels_stream_cursor_value_input: Notification_Channels_Stream_Cursor_Value_Input;
  notification_deliveries: ResolverTypeWrapper<Notification_Deliveries>;
  notification_deliveries_aggregate: ResolverTypeWrapper<Notification_Deliveries_Aggregate>;
  notification_deliveries_aggregate_bool_exp: Notification_Deliveries_Aggregate_Bool_Exp;
  notification_deliveries_aggregate_bool_exp_bool_and: Notification_Deliveries_Aggregate_Bool_Exp_Bool_And;
  notification_deliveries_aggregate_bool_exp_bool_or: Notification_Deliveries_Aggregate_Bool_Exp_Bool_Or;
  notification_deliveries_aggregate_bool_exp_count: Notification_Deliveries_Aggregate_Bool_Exp_Count;
  notification_deliveries_aggregate_fields: ResolverTypeWrapper<Notification_Deliveries_Aggregate_Fields>;
  notification_deliveries_aggregate_order_by: Notification_Deliveries_Aggregate_Order_By;
  notification_deliveries_avg_fields: ResolverTypeWrapper<Notification_Deliveries_Avg_Fields>;
  notification_deliveries_avg_order_by: Notification_Deliveries_Avg_Order_By;
  notification_deliveries_bool_exp: Notification_Deliveries_Bool_Exp;
  notification_deliveries_max_fields: ResolverTypeWrapper<Notification_Deliveries_Max_Fields>;
  notification_deliveries_max_order_by: Notification_Deliveries_Max_Order_By;
  notification_deliveries_min_fields: ResolverTypeWrapper<Notification_Deliveries_Min_Fields>;
  notification_deliveries_min_order_by: Notification_Deliveries_Min_Order_By;
  notification_deliveries_mutation_response: ResolverTypeWrapper<Notification_Deliveries_Mutation_Response>;
  notification_deliveries_order_by: Notification_Deliveries_Order_By;
  notification_deliveries_pk_columns_input: Notification_Deliveries_Pk_Columns_Input;
  notification_deliveries_select_column: Notification_Deliveries_Select_Column;
  notification_deliveries_select_column_notification_deliveries_aggregate_bool_exp_bool_and_arguments_columns: Notification_Deliveries_Select_Column_Notification_Deliveries_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  notification_deliveries_select_column_notification_deliveries_aggregate_bool_exp_bool_or_arguments_columns: Notification_Deliveries_Select_Column_Notification_Deliveries_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  notification_deliveries_set_input: Notification_Deliveries_Set_Input;
  notification_deliveries_stddev_fields: ResolverTypeWrapper<Notification_Deliveries_Stddev_Fields>;
  notification_deliveries_stddev_order_by: Notification_Deliveries_Stddev_Order_By;
  notification_deliveries_stddev_pop_fields: ResolverTypeWrapper<Notification_Deliveries_Stddev_Pop_Fields>;
  notification_deliveries_stddev_pop_order_by: Notification_Deliveries_Stddev_Pop_Order_By;
  notification_deliveries_stddev_samp_fields: ResolverTypeWrapper<Notification_Deliveries_Stddev_Samp_Fields>;
  notification_deliveries_stddev_samp_order_by: Notification_Deliveries_Stddev_Samp_Order_By;
  notification_deliveries_stream_cursor_input: Notification_Deliveries_Stream_Cursor_Input;
  notification_deliveries_stream_cursor_value_input: Notification_Deliveries_Stream_Cursor_Value_Input;
  notification_deliveries_sum_fields: ResolverTypeWrapper<Notification_Deliveries_Sum_Fields>;
  notification_deliveries_sum_order_by: Notification_Deliveries_Sum_Order_By;
  notification_deliveries_updates: Notification_Deliveries_Updates;
  notification_deliveries_var_pop_fields: ResolverTypeWrapper<Notification_Deliveries_Var_Pop_Fields>;
  notification_deliveries_var_pop_order_by: Notification_Deliveries_Var_Pop_Order_By;
  notification_deliveries_var_samp_fields: ResolverTypeWrapper<Notification_Deliveries_Var_Samp_Fields>;
  notification_deliveries_var_samp_order_by: Notification_Deliveries_Var_Samp_Order_By;
  notification_deliveries_variance_fields: ResolverTypeWrapper<Notification_Deliveries_Variance_Fields>;
  notification_deliveries_variance_order_by: Notification_Deliveries_Variance_Order_By;
  notification_settings: ResolverTypeWrapper<Notification_Settings>;
  notification_settings_aggregate_order_by: Notification_Settings_Aggregate_Order_By;
  notification_settings_avg_order_by: Notification_Settings_Avg_Order_By;
  notification_settings_bool_exp: Notification_Settings_Bool_Exp;
  notification_settings_constraint: Notification_Settings_Constraint;
  notification_settings_insert_input: Notification_Settings_Insert_Input;
  notification_settings_max_order_by: Notification_Settings_Max_Order_By;
  notification_settings_min_order_by: Notification_Settings_Min_Order_By;
  notification_settings_mutation_response: ResolverTypeWrapper<Notification_Settings_Mutation_Response>;
  notification_settings_on_conflict: Notification_Settings_On_Conflict;
  notification_settings_order_by: Notification_Settings_Order_By;
  notification_settings_pk_columns_input: Notification_Settings_Pk_Columns_Input;
  notification_settings_select_column: Notification_Settings_Select_Column;
  notification_settings_set_input: Notification_Settings_Set_Input;
  notification_settings_stddev_order_by: Notification_Settings_Stddev_Order_By;
  notification_settings_stddev_pop_order_by: Notification_Settings_Stddev_Pop_Order_By;
  notification_settings_stddev_samp_order_by: Notification_Settings_Stddev_Samp_Order_By;
  notification_settings_stream_cursor_input: Notification_Settings_Stream_Cursor_Input;
  notification_settings_stream_cursor_value_input: Notification_Settings_Stream_Cursor_Value_Input;
  notification_settings_sum_order_by: Notification_Settings_Sum_Order_By;
  notification_settings_update_column: Notification_Settings_Update_Column;
  notification_settings_updates: Notification_Settings_Updates;
  notification_settings_var_pop_order_by: Notification_Settings_Var_Pop_Order_By;
  notification_settings_var_samp_order_by: Notification_Settings_Var_Samp_Order_By;
  notification_settings_variance_order_by: Notification_Settings_Variance_Order_By;
  notification_types: ResolverTypeWrapper<Notification_Types>;
  notification_types_bool_exp: Notification_Types_Bool_Exp;
  notification_types_order_by: Notification_Types_Order_By;
  notification_types_select_column: Notification_Types_Select_Column;
  notification_types_stream_cursor_input: Notification_Types_Stream_Cursor_Input;
  notification_types_stream_cursor_value_input: Notification_Types_Stream_Cursor_Value_Input;
  notifications: ResolverTypeWrapper<Notifications>;
  notifications_bool_exp: Notifications_Bool_Exp;
  notifications_order_by: Notifications_Order_By;
  notifications_select_column: Notifications_Select_Column;
  notifications_stream_cursor_input: Notifications_Stream_Cursor_Input;
  notifications_stream_cursor_value_input: Notifications_Stream_Cursor_Value_Input;
  numeric: ResolverTypeWrapper<Scalars['numeric']['output']>;
  numeric_comparison_exp: Numeric_Comparison_Exp;
  order_by: Order_By;
  platforms: ResolverTypeWrapper<Platforms>;
  platforms_bool_exp: Platforms_Bool_Exp;
  platforms_order_by: Platforms_Order_By;
  platforms_select_column: Platforms_Select_Column;
  platforms_stream_cursor_input: Platforms_Stream_Cursor_Input;
  platforms_stream_cursor_value_input: Platforms_Stream_Cursor_Value_Input;
  privacy_settings: ResolverTypeWrapper<Privacy_Settings>;
  privacy_settings_bool_exp: Privacy_Settings_Bool_Exp;
  privacy_settings_order_by: Privacy_Settings_Order_By;
  privacy_settings_select_column: Privacy_Settings_Select_Column;
  privacy_settings_stream_cursor_input: Privacy_Settings_Stream_Cursor_Input;
  privacy_settings_stream_cursor_value_input: Privacy_Settings_Stream_Cursor_Value_Input;
  prompt_answers: ResolverTypeWrapper<Prompt_Answers>;
  prompt_answers_aggregate: ResolverTypeWrapper<Prompt_Answers_Aggregate>;
  prompt_answers_aggregate_bool_exp: Prompt_Answers_Aggregate_Bool_Exp;
  prompt_answers_aggregate_bool_exp_count: Prompt_Answers_Aggregate_Bool_Exp_Count;
  prompt_answers_aggregate_fields: ResolverTypeWrapper<Prompt_Answers_Aggregate_Fields>;
  prompt_answers_aggregate_order_by: Prompt_Answers_Aggregate_Order_By;
  prompt_answers_avg_fields: ResolverTypeWrapper<Prompt_Answers_Avg_Fields>;
  prompt_answers_avg_order_by: Prompt_Answers_Avg_Order_By;
  prompt_answers_bool_exp: Prompt_Answers_Bool_Exp;
  prompt_answers_max_fields: ResolverTypeWrapper<Prompt_Answers_Max_Fields>;
  prompt_answers_max_order_by: Prompt_Answers_Max_Order_By;
  prompt_answers_min_fields: ResolverTypeWrapper<Prompt_Answers_Min_Fields>;
  prompt_answers_min_order_by: Prompt_Answers_Min_Order_By;
  prompt_answers_mutation_response: ResolverTypeWrapper<Prompt_Answers_Mutation_Response>;
  prompt_answers_order_by: Prompt_Answers_Order_By;
  prompt_answers_pk_columns_input: Prompt_Answers_Pk_Columns_Input;
  prompt_answers_select_column: Prompt_Answers_Select_Column;
  prompt_answers_set_input: Prompt_Answers_Set_Input;
  prompt_answers_stddev_fields: ResolverTypeWrapper<Prompt_Answers_Stddev_Fields>;
  prompt_answers_stddev_order_by: Prompt_Answers_Stddev_Order_By;
  prompt_answers_stddev_pop_fields: ResolverTypeWrapper<Prompt_Answers_Stddev_Pop_Fields>;
  prompt_answers_stddev_pop_order_by: Prompt_Answers_Stddev_Pop_Order_By;
  prompt_answers_stddev_samp_fields: ResolverTypeWrapper<Prompt_Answers_Stddev_Samp_Fields>;
  prompt_answers_stddev_samp_order_by: Prompt_Answers_Stddev_Samp_Order_By;
  prompt_answers_stream_cursor_input: Prompt_Answers_Stream_Cursor_Input;
  prompt_answers_stream_cursor_value_input: Prompt_Answers_Stream_Cursor_Value_Input;
  prompt_answers_sum_fields: ResolverTypeWrapper<Prompt_Answers_Sum_Fields>;
  prompt_answers_sum_order_by: Prompt_Answers_Sum_Order_By;
  prompt_answers_updates: Prompt_Answers_Updates;
  prompt_answers_var_pop_fields: ResolverTypeWrapper<Prompt_Answers_Var_Pop_Fields>;
  prompt_answers_var_pop_order_by: Prompt_Answers_Var_Pop_Order_By;
  prompt_answers_var_samp_fields: ResolverTypeWrapper<Prompt_Answers_Var_Samp_Fields>;
  prompt_answers_var_samp_order_by: Prompt_Answers_Var_Samp_Order_By;
  prompt_answers_variance_fields: ResolverTypeWrapper<Prompt_Answers_Variance_Fields>;
  prompt_answers_variance_order_by: Prompt_Answers_Variance_Order_By;
  prompt_books_summary: ResolverTypeWrapper<Prompt_Books_Summary>;
  prompt_books_summary_aggregate_order_by: Prompt_Books_Summary_Aggregate_Order_By;
  prompt_books_summary_avg_order_by: Prompt_Books_Summary_Avg_Order_By;
  prompt_books_summary_bool_exp: Prompt_Books_Summary_Bool_Exp;
  prompt_books_summary_max_order_by: Prompt_Books_Summary_Max_Order_By;
  prompt_books_summary_min_order_by: Prompt_Books_Summary_Min_Order_By;
  prompt_books_summary_order_by: Prompt_Books_Summary_Order_By;
  prompt_books_summary_select_column: Prompt_Books_Summary_Select_Column;
  prompt_books_summary_stddev_order_by: Prompt_Books_Summary_Stddev_Order_By;
  prompt_books_summary_stddev_pop_order_by: Prompt_Books_Summary_Stddev_Pop_Order_By;
  prompt_books_summary_stddev_samp_order_by: Prompt_Books_Summary_Stddev_Samp_Order_By;
  prompt_books_summary_stream_cursor_input: Prompt_Books_Summary_Stream_Cursor_Input;
  prompt_books_summary_stream_cursor_value_input: Prompt_Books_Summary_Stream_Cursor_Value_Input;
  prompt_books_summary_sum_order_by: Prompt_Books_Summary_Sum_Order_By;
  prompt_books_summary_var_pop_order_by: Prompt_Books_Summary_Var_Pop_Order_By;
  prompt_books_summary_var_samp_order_by: Prompt_Books_Summary_Var_Samp_Order_By;
  prompt_books_summary_variance_order_by: Prompt_Books_Summary_Variance_Order_By;
  prompts: ResolverTypeWrapper<Prompts>;
  prompts_aggregate_order_by: Prompts_Aggregate_Order_By;
  prompts_avg_order_by: Prompts_Avg_Order_By;
  prompts_bool_exp: Prompts_Bool_Exp;
  prompts_max_order_by: Prompts_Max_Order_By;
  prompts_min_order_by: Prompts_Min_Order_By;
  prompts_mutation_response: ResolverTypeWrapper<Prompts_Mutation_Response>;
  prompts_order_by: Prompts_Order_By;
  prompts_select_column: Prompts_Select_Column;
  prompts_stddev_order_by: Prompts_Stddev_Order_By;
  prompts_stddev_pop_order_by: Prompts_Stddev_Pop_Order_By;
  prompts_stddev_samp_order_by: Prompts_Stddev_Samp_Order_By;
  prompts_stream_cursor_input: Prompts_Stream_Cursor_Input;
  prompts_stream_cursor_value_input: Prompts_Stream_Cursor_Value_Input;
  prompts_sum_order_by: Prompts_Sum_Order_By;
  prompts_var_pop_order_by: Prompts_Var_Pop_Order_By;
  prompts_var_samp_order_by: Prompts_Var_Samp_Order_By;
  prompts_variance_order_by: Prompts_Variance_Order_By;
  publishers: ResolverTypeWrapper<Publishers>;
  publishers_bool_exp: Publishers_Bool_Exp;
  publishers_order_by: Publishers_Order_By;
  publishers_select_column: Publishers_Select_Column;
  publishers_stream_cursor_input: Publishers_Stream_Cursor_Input;
  publishers_stream_cursor_value_input: Publishers_Stream_Cursor_Value_Input;
  query_root: ResolverTypeWrapper<{}>;
  reading_formats: ResolverTypeWrapper<Reading_Formats>;
  reading_formats_bool_exp: Reading_Formats_Bool_Exp;
  reading_formats_order_by: Reading_Formats_Order_By;
  reading_formats_select_column: Reading_Formats_Select_Column;
  reading_formats_stream_cursor_input: Reading_Formats_Stream_Cursor_Input;
  reading_formats_stream_cursor_value_input: Reading_Formats_Stream_Cursor_Value_Input;
  reading_journals: ResolverTypeWrapper<Reading_Journals>;
  reading_journals_aggregate_order_by: Reading_Journals_Aggregate_Order_By;
  reading_journals_avg_order_by: Reading_Journals_Avg_Order_By;
  reading_journals_bool_exp: Reading_Journals_Bool_Exp;
  reading_journals_max_order_by: Reading_Journals_Max_Order_By;
  reading_journals_min_order_by: Reading_Journals_Min_Order_By;
  reading_journals_order_by: Reading_Journals_Order_By;
  reading_journals_select_column: Reading_Journals_Select_Column;
  reading_journals_stddev_order_by: Reading_Journals_Stddev_Order_By;
  reading_journals_stddev_pop_order_by: Reading_Journals_Stddev_Pop_Order_By;
  reading_journals_stddev_samp_order_by: Reading_Journals_Stddev_Samp_Order_By;
  reading_journals_stream_cursor_input: Reading_Journals_Stream_Cursor_Input;
  reading_journals_stream_cursor_value_input: Reading_Journals_Stream_Cursor_Value_Input;
  reading_journals_sum_order_by: Reading_Journals_Sum_Order_By;
  reading_journals_summary: ResolverTypeWrapper<Reading_Journals_Summary>;
  reading_journals_summary_bool_exp: Reading_Journals_Summary_Bool_Exp;
  reading_journals_summary_order_by: Reading_Journals_Summary_Order_By;
  reading_journals_summary_select_column: Reading_Journals_Summary_Select_Column;
  reading_journals_summary_stream_cursor_input: Reading_Journals_Summary_Stream_Cursor_Input;
  reading_journals_summary_stream_cursor_value_input: Reading_Journals_Summary_Stream_Cursor_Value_Input;
  reading_journals_var_pop_order_by: Reading_Journals_Var_Pop_Order_By;
  reading_journals_var_samp_order_by: Reading_Journals_Var_Samp_Order_By;
  reading_journals_variance_order_by: Reading_Journals_Variance_Order_By;
  recommendations: ResolverTypeWrapper<Recommendations>;
  recommendations_aggregate_order_by: Recommendations_Aggregate_Order_By;
  recommendations_avg_order_by: Recommendations_Avg_Order_By;
  recommendations_bool_exp: Recommendations_Bool_Exp;
  recommendations_max_order_by: Recommendations_Max_Order_By;
  recommendations_min_order_by: Recommendations_Min_Order_By;
  recommendations_order_by: Recommendations_Order_By;
  recommendations_select_column: Recommendations_Select_Column;
  recommendations_stddev_order_by: Recommendations_Stddev_Order_By;
  recommendations_stddev_pop_order_by: Recommendations_Stddev_Pop_Order_By;
  recommendations_stddev_samp_order_by: Recommendations_Stddev_Samp_Order_By;
  recommendations_stream_cursor_input: Recommendations_Stream_Cursor_Input;
  recommendations_stream_cursor_value_input: Recommendations_Stream_Cursor_Value_Input;
  recommendations_sum_order_by: Recommendations_Sum_Order_By;
  recommendations_var_pop_order_by: Recommendations_Var_Pop_Order_By;
  recommendations_var_samp_order_by: Recommendations_Var_Samp_Order_By;
  recommendations_variance_order_by: Recommendations_Variance_Order_By;
  series: ResolverTypeWrapper<Series>;
  series_bool_exp: Series_Bool_Exp;
  series_order_by: Series_Order_By;
  series_select_column: Series_Select_Column;
  series_stream_cursor_input: Series_Stream_Cursor_Input;
  series_stream_cursor_value_input: Series_Stream_Cursor_Value_Input;
  smallint: ResolverTypeWrapper<Scalars['smallint']['output']>;
  smallint_comparison_exp: Smallint_Comparison_Exp;
  subscription_root: ResolverTypeWrapper<{}>;
  tag_categories: ResolverTypeWrapper<Tag_Categories>;
  tag_categories_bool_exp: Tag_Categories_Bool_Exp;
  tag_categories_order_by: Tag_Categories_Order_By;
  tag_categories_select_column: Tag_Categories_Select_Column;
  tag_categories_stream_cursor_input: Tag_Categories_Stream_Cursor_Input;
  tag_categories_stream_cursor_value_input: Tag_Categories_Stream_Cursor_Value_Input;
  taggable_counts: ResolverTypeWrapper<Taggable_Counts>;
  taggable_counts_aggregate_order_by: Taggable_Counts_Aggregate_Order_By;
  taggable_counts_avg_order_by: Taggable_Counts_Avg_Order_By;
  taggable_counts_bool_exp: Taggable_Counts_Bool_Exp;
  taggable_counts_max_order_by: Taggable_Counts_Max_Order_By;
  taggable_counts_min_order_by: Taggable_Counts_Min_Order_By;
  taggable_counts_order_by: Taggable_Counts_Order_By;
  taggable_counts_select_column: Taggable_Counts_Select_Column;
  taggable_counts_stddev_order_by: Taggable_Counts_Stddev_Order_By;
  taggable_counts_stddev_pop_order_by: Taggable_Counts_Stddev_Pop_Order_By;
  taggable_counts_stddev_samp_order_by: Taggable_Counts_Stddev_Samp_Order_By;
  taggable_counts_stream_cursor_input: Taggable_Counts_Stream_Cursor_Input;
  taggable_counts_stream_cursor_value_input: Taggable_Counts_Stream_Cursor_Value_Input;
  taggable_counts_sum_order_by: Taggable_Counts_Sum_Order_By;
  taggable_counts_var_pop_order_by: Taggable_Counts_Var_Pop_Order_By;
  taggable_counts_var_samp_order_by: Taggable_Counts_Var_Samp_Order_By;
  taggable_counts_variance_order_by: Taggable_Counts_Variance_Order_By;
  taggings: ResolverTypeWrapper<Taggings>;
  taggings_aggregate: ResolverTypeWrapper<Taggings_Aggregate>;
  taggings_aggregate_bool_exp: Taggings_Aggregate_Bool_Exp;
  taggings_aggregate_bool_exp_bool_and: Taggings_Aggregate_Bool_Exp_Bool_And;
  taggings_aggregate_bool_exp_bool_or: Taggings_Aggregate_Bool_Exp_Bool_Or;
  taggings_aggregate_bool_exp_count: Taggings_Aggregate_Bool_Exp_Count;
  taggings_aggregate_fields: ResolverTypeWrapper<Taggings_Aggregate_Fields>;
  taggings_aggregate_order_by: Taggings_Aggregate_Order_By;
  taggings_avg_fields: ResolverTypeWrapper<Taggings_Avg_Fields>;
  taggings_avg_order_by: Taggings_Avg_Order_By;
  taggings_bool_exp: Taggings_Bool_Exp;
  taggings_max_fields: ResolverTypeWrapper<Taggings_Max_Fields>;
  taggings_max_order_by: Taggings_Max_Order_By;
  taggings_min_fields: ResolverTypeWrapper<Taggings_Min_Fields>;
  taggings_min_order_by: Taggings_Min_Order_By;
  taggings_order_by: Taggings_Order_By;
  taggings_select_column: Taggings_Select_Column;
  taggings_select_column_taggings_aggregate_bool_exp_bool_and_arguments_columns: Taggings_Select_Column_Taggings_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  taggings_select_column_taggings_aggregate_bool_exp_bool_or_arguments_columns: Taggings_Select_Column_Taggings_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  taggings_stddev_fields: ResolverTypeWrapper<Taggings_Stddev_Fields>;
  taggings_stddev_order_by: Taggings_Stddev_Order_By;
  taggings_stddev_pop_fields: ResolverTypeWrapper<Taggings_Stddev_Pop_Fields>;
  taggings_stddev_pop_order_by: Taggings_Stddev_Pop_Order_By;
  taggings_stddev_samp_fields: ResolverTypeWrapper<Taggings_Stddev_Samp_Fields>;
  taggings_stddev_samp_order_by: Taggings_Stddev_Samp_Order_By;
  taggings_stream_cursor_input: Taggings_Stream_Cursor_Input;
  taggings_stream_cursor_value_input: Taggings_Stream_Cursor_Value_Input;
  taggings_sum_fields: ResolverTypeWrapper<Taggings_Sum_Fields>;
  taggings_sum_order_by: Taggings_Sum_Order_By;
  taggings_var_pop_fields: ResolverTypeWrapper<Taggings_Var_Pop_Fields>;
  taggings_var_pop_order_by: Taggings_Var_Pop_Order_By;
  taggings_var_samp_fields: ResolverTypeWrapper<Taggings_Var_Samp_Fields>;
  taggings_var_samp_order_by: Taggings_Var_Samp_Order_By;
  taggings_variance_fields: ResolverTypeWrapper<Taggings_Variance_Fields>;
  taggings_variance_order_by: Taggings_Variance_Order_By;
  tags: ResolverTypeWrapper<Tags>;
  tags_aggregate: ResolverTypeWrapper<Tags_Aggregate>;
  tags_aggregate_bool_exp: Tags_Aggregate_Bool_Exp;
  tags_aggregate_bool_exp_count: Tags_Aggregate_Bool_Exp_Count;
  tags_aggregate_fields: ResolverTypeWrapper<Tags_Aggregate_Fields>;
  tags_aggregate_order_by: Tags_Aggregate_Order_By;
  tags_avg_fields: ResolverTypeWrapper<Tags_Avg_Fields>;
  tags_avg_order_by: Tags_Avg_Order_By;
  tags_bool_exp: Tags_Bool_Exp;
  tags_max_fields: ResolverTypeWrapper<Tags_Max_Fields>;
  tags_max_order_by: Tags_Max_Order_By;
  tags_min_fields: ResolverTypeWrapper<Tags_Min_Fields>;
  tags_min_order_by: Tags_Min_Order_By;
  tags_order_by: Tags_Order_By;
  tags_select_column: Tags_Select_Column;
  tags_stddev_fields: ResolverTypeWrapper<Tags_Stddev_Fields>;
  tags_stddev_order_by: Tags_Stddev_Order_By;
  tags_stddev_pop_fields: ResolverTypeWrapper<Tags_Stddev_Pop_Fields>;
  tags_stddev_pop_order_by: Tags_Stddev_Pop_Order_By;
  tags_stddev_samp_fields: ResolverTypeWrapper<Tags_Stddev_Samp_Fields>;
  tags_stddev_samp_order_by: Tags_Stddev_Samp_Order_By;
  tags_stream_cursor_input: Tags_Stream_Cursor_Input;
  tags_stream_cursor_value_input: Tags_Stream_Cursor_Value_Input;
  tags_sum_fields: ResolverTypeWrapper<Tags_Sum_Fields>;
  tags_sum_order_by: Tags_Sum_Order_By;
  tags_var_pop_fields: ResolverTypeWrapper<Tags_Var_Pop_Fields>;
  tags_var_pop_order_by: Tags_Var_Pop_Order_By;
  tags_var_samp_fields: ResolverTypeWrapper<Tags_Var_Samp_Fields>;
  tags_var_samp_order_by: Tags_Var_Samp_Order_By;
  tags_variance_fields: ResolverTypeWrapper<Tags_Variance_Fields>;
  tags_variance_order_by: Tags_Variance_Order_By;
  timestamp: ResolverTypeWrapper<Scalars['timestamp']['output']>;
  timestamp_comparison_exp: Timestamp_Comparison_Exp;
  timestamptz: ResolverTypeWrapper<Scalars['timestamptz']['output']>;
  timestamptz_comparison_exp: Timestamptz_Comparison_Exp;
  update_user_input: Update_User_Input;
  user_blocks: ResolverTypeWrapper<User_Blocks>;
  user_blocks_aggregate_order_by: User_Blocks_Aggregate_Order_By;
  user_blocks_avg_order_by: User_Blocks_Avg_Order_By;
  user_blocks_bool_exp: User_Blocks_Bool_Exp;
  user_blocks_constraint: User_Blocks_Constraint;
  user_blocks_insert_input: User_Blocks_Insert_Input;
  user_blocks_max_order_by: User_Blocks_Max_Order_By;
  user_blocks_min_order_by: User_Blocks_Min_Order_By;
  user_blocks_mutation_response: ResolverTypeWrapper<User_Blocks_Mutation_Response>;
  user_blocks_on_conflict: User_Blocks_On_Conflict;
  user_blocks_order_by: User_Blocks_Order_By;
  user_blocks_select_column: User_Blocks_Select_Column;
  user_blocks_stddev_order_by: User_Blocks_Stddev_Order_By;
  user_blocks_stddev_pop_order_by: User_Blocks_Stddev_Pop_Order_By;
  user_blocks_stddev_samp_order_by: User_Blocks_Stddev_Samp_Order_By;
  user_blocks_stream_cursor_input: User_Blocks_Stream_Cursor_Input;
  user_blocks_stream_cursor_value_input: User_Blocks_Stream_Cursor_Value_Input;
  user_blocks_sum_order_by: User_Blocks_Sum_Order_By;
  user_blocks_update_column: User_Blocks_Update_Column;
  user_blocks_var_pop_order_by: User_Blocks_Var_Pop_Order_By;
  user_blocks_var_samp_order_by: User_Blocks_Var_Samp_Order_By;
  user_blocks_variance_order_by: User_Blocks_Variance_Order_By;
  user_book_reads: ResolverTypeWrapper<User_Book_Reads>;
  user_book_reads_aggregate: ResolverTypeWrapper<User_Book_Reads_Aggregate>;
  user_book_reads_aggregate_bool_exp: User_Book_Reads_Aggregate_Bool_Exp;
  user_book_reads_aggregate_bool_exp_avg: User_Book_Reads_Aggregate_Bool_Exp_Avg;
  user_book_reads_aggregate_bool_exp_corr: User_Book_Reads_Aggregate_Bool_Exp_Corr;
  user_book_reads_aggregate_bool_exp_corr_arguments: User_Book_Reads_Aggregate_Bool_Exp_Corr_Arguments;
  user_book_reads_aggregate_bool_exp_count: User_Book_Reads_Aggregate_Bool_Exp_Count;
  user_book_reads_aggregate_bool_exp_covar_samp: User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp;
  user_book_reads_aggregate_bool_exp_covar_samp_arguments: User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  user_book_reads_aggregate_bool_exp_max: User_Book_Reads_Aggregate_Bool_Exp_Max;
  user_book_reads_aggregate_bool_exp_min: User_Book_Reads_Aggregate_Bool_Exp_Min;
  user_book_reads_aggregate_bool_exp_stddev_samp: User_Book_Reads_Aggregate_Bool_Exp_Stddev_Samp;
  user_book_reads_aggregate_bool_exp_sum: User_Book_Reads_Aggregate_Bool_Exp_Sum;
  user_book_reads_aggregate_bool_exp_var_samp: User_Book_Reads_Aggregate_Bool_Exp_Var_Samp;
  user_book_reads_aggregate_fields: ResolverTypeWrapper<User_Book_Reads_Aggregate_Fields>;
  user_book_reads_aggregate_order_by: User_Book_Reads_Aggregate_Order_By;
  user_book_reads_avg_fields: ResolverTypeWrapper<User_Book_Reads_Avg_Fields>;
  user_book_reads_avg_order_by: User_Book_Reads_Avg_Order_By;
  user_book_reads_bool_exp: User_Book_Reads_Bool_Exp;
  user_book_reads_max_fields: ResolverTypeWrapper<User_Book_Reads_Max_Fields>;
  user_book_reads_max_order_by: User_Book_Reads_Max_Order_By;
  user_book_reads_min_fields: ResolverTypeWrapper<User_Book_Reads_Min_Fields>;
  user_book_reads_min_order_by: User_Book_Reads_Min_Order_By;
  user_book_reads_order_by: User_Book_Reads_Order_By;
  user_book_reads_select_column: User_Book_Reads_Select_Column;
  user_book_reads_select_column_user_book_reads_aggregate_bool_exp_avg_arguments_columns: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Avg_Arguments_Columns;
  user_book_reads_select_column_user_book_reads_aggregate_bool_exp_corr_arguments_columns: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Corr_Arguments_Columns;
  user_book_reads_select_column_user_book_reads_aggregate_bool_exp_covar_samp_arguments_columns: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
  user_book_reads_select_column_user_book_reads_aggregate_bool_exp_max_arguments_columns: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Max_Arguments_Columns;
  user_book_reads_select_column_user_book_reads_aggregate_bool_exp_min_arguments_columns: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Min_Arguments_Columns;
  user_book_reads_select_column_user_book_reads_aggregate_bool_exp_stddev_samp_arguments_columns: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns;
  user_book_reads_select_column_user_book_reads_aggregate_bool_exp_sum_arguments_columns: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Sum_Arguments_Columns;
  user_book_reads_select_column_user_book_reads_aggregate_bool_exp_var_samp_arguments_columns: User_Book_Reads_Select_Column_User_Book_Reads_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns;
  user_book_reads_stddev_fields: ResolverTypeWrapper<User_Book_Reads_Stddev_Fields>;
  user_book_reads_stddev_order_by: User_Book_Reads_Stddev_Order_By;
  user_book_reads_stddev_pop_fields: ResolverTypeWrapper<User_Book_Reads_Stddev_Pop_Fields>;
  user_book_reads_stddev_pop_order_by: User_Book_Reads_Stddev_Pop_Order_By;
  user_book_reads_stddev_samp_fields: ResolverTypeWrapper<User_Book_Reads_Stddev_Samp_Fields>;
  user_book_reads_stddev_samp_order_by: User_Book_Reads_Stddev_Samp_Order_By;
  user_book_reads_stream_cursor_input: User_Book_Reads_Stream_Cursor_Input;
  user_book_reads_stream_cursor_value_input: User_Book_Reads_Stream_Cursor_Value_Input;
  user_book_reads_sum_fields: ResolverTypeWrapper<User_Book_Reads_Sum_Fields>;
  user_book_reads_sum_order_by: User_Book_Reads_Sum_Order_By;
  user_book_reads_var_pop_fields: ResolverTypeWrapper<User_Book_Reads_Var_Pop_Fields>;
  user_book_reads_var_pop_order_by: User_Book_Reads_Var_Pop_Order_By;
  user_book_reads_var_samp_fields: ResolverTypeWrapper<User_Book_Reads_Var_Samp_Fields>;
  user_book_reads_var_samp_order_by: User_Book_Reads_Var_Samp_Order_By;
  user_book_reads_variance_fields: ResolverTypeWrapper<User_Book_Reads_Variance_Fields>;
  user_book_reads_variance_order_by: User_Book_Reads_Variance_Order_By;
  user_book_statuses: ResolverTypeWrapper<User_Book_Statuses>;
  user_book_statuses_aggregate: ResolverTypeWrapper<User_Book_Statuses_Aggregate>;
  user_book_statuses_aggregate_fields: ResolverTypeWrapper<User_Book_Statuses_Aggregate_Fields>;
  user_book_statuses_avg_fields: ResolverTypeWrapper<User_Book_Statuses_Avg_Fields>;
  user_book_statuses_bool_exp: User_Book_Statuses_Bool_Exp;
  user_book_statuses_max_fields: ResolverTypeWrapper<User_Book_Statuses_Max_Fields>;
  user_book_statuses_min_fields: ResolverTypeWrapper<User_Book_Statuses_Min_Fields>;
  user_book_statuses_order_by: User_Book_Statuses_Order_By;
  user_book_statuses_select_column: User_Book_Statuses_Select_Column;
  user_book_statuses_stddev_fields: ResolverTypeWrapper<User_Book_Statuses_Stddev_Fields>;
  user_book_statuses_stddev_pop_fields: ResolverTypeWrapper<User_Book_Statuses_Stddev_Pop_Fields>;
  user_book_statuses_stddev_samp_fields: ResolverTypeWrapper<User_Book_Statuses_Stddev_Samp_Fields>;
  user_book_statuses_stream_cursor_input: User_Book_Statuses_Stream_Cursor_Input;
  user_book_statuses_stream_cursor_value_input: User_Book_Statuses_Stream_Cursor_Value_Input;
  user_book_statuses_sum_fields: ResolverTypeWrapper<User_Book_Statuses_Sum_Fields>;
  user_book_statuses_var_pop_fields: ResolverTypeWrapper<User_Book_Statuses_Var_Pop_Fields>;
  user_book_statuses_var_samp_fields: ResolverTypeWrapper<User_Book_Statuses_Var_Samp_Fields>;
  user_book_statuses_variance_fields: ResolverTypeWrapper<User_Book_Statuses_Variance_Fields>;
  user_books: ResolverTypeWrapper<User_Books>;
  user_books_aggregate: ResolverTypeWrapper<User_Books_Aggregate>;
  user_books_aggregate_bool_exp: User_Books_Aggregate_Bool_Exp;
  user_books_aggregate_bool_exp_avg: User_Books_Aggregate_Bool_Exp_Avg;
  user_books_aggregate_bool_exp_bool_and: User_Books_Aggregate_Bool_Exp_Bool_And;
  user_books_aggregate_bool_exp_bool_or: User_Books_Aggregate_Bool_Exp_Bool_Or;
  user_books_aggregate_bool_exp_corr: User_Books_Aggregate_Bool_Exp_Corr;
  user_books_aggregate_bool_exp_corr_arguments: User_Books_Aggregate_Bool_Exp_Corr_Arguments;
  user_books_aggregate_bool_exp_count: User_Books_Aggregate_Bool_Exp_Count;
  user_books_aggregate_bool_exp_covar_samp: User_Books_Aggregate_Bool_Exp_Covar_Samp;
  user_books_aggregate_bool_exp_covar_samp_arguments: User_Books_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  user_books_aggregate_bool_exp_max: User_Books_Aggregate_Bool_Exp_Max;
  user_books_aggregate_bool_exp_min: User_Books_Aggregate_Bool_Exp_Min;
  user_books_aggregate_bool_exp_stddev_samp: User_Books_Aggregate_Bool_Exp_Stddev_Samp;
  user_books_aggregate_bool_exp_sum: User_Books_Aggregate_Bool_Exp_Sum;
  user_books_aggregate_bool_exp_var_samp: User_Books_Aggregate_Bool_Exp_Var_Samp;
  user_books_aggregate_fields: ResolverTypeWrapper<User_Books_Aggregate_Fields>;
  user_books_aggregate_order_by: User_Books_Aggregate_Order_By;
  user_books_avg_fields: ResolverTypeWrapper<User_Books_Avg_Fields>;
  user_books_avg_order_by: User_Books_Avg_Order_By;
  user_books_bool_exp: User_Books_Bool_Exp;
  user_books_max_fields: ResolverTypeWrapper<User_Books_Max_Fields>;
  user_books_max_order_by: User_Books_Max_Order_By;
  user_books_min_fields: ResolverTypeWrapper<User_Books_Min_Fields>;
  user_books_min_order_by: User_Books_Min_Order_By;
  user_books_order_by: User_Books_Order_By;
  user_books_select_column: User_Books_Select_Column;
  user_books_select_column_user_books_aggregate_bool_exp_avg_arguments_columns: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Avg_Arguments_Columns;
  user_books_select_column_user_books_aggregate_bool_exp_bool_and_arguments_columns: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  user_books_select_column_user_books_aggregate_bool_exp_bool_or_arguments_columns: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  user_books_select_column_user_books_aggregate_bool_exp_corr_arguments_columns: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Corr_Arguments_Columns;
  user_books_select_column_user_books_aggregate_bool_exp_covar_samp_arguments_columns: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
  user_books_select_column_user_books_aggregate_bool_exp_max_arguments_columns: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Max_Arguments_Columns;
  user_books_select_column_user_books_aggregate_bool_exp_min_arguments_columns: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Min_Arguments_Columns;
  user_books_select_column_user_books_aggregate_bool_exp_stddev_samp_arguments_columns: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns;
  user_books_select_column_user_books_aggregate_bool_exp_sum_arguments_columns: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Sum_Arguments_Columns;
  user_books_select_column_user_books_aggregate_bool_exp_var_samp_arguments_columns: User_Books_Select_Column_User_Books_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns;
  user_books_stddev_fields: ResolverTypeWrapper<User_Books_Stddev_Fields>;
  user_books_stddev_order_by: User_Books_Stddev_Order_By;
  user_books_stddev_pop_fields: ResolverTypeWrapper<User_Books_Stddev_Pop_Fields>;
  user_books_stddev_pop_order_by: User_Books_Stddev_Pop_Order_By;
  user_books_stddev_samp_fields: ResolverTypeWrapper<User_Books_Stddev_Samp_Fields>;
  user_books_stddev_samp_order_by: User_Books_Stddev_Samp_Order_By;
  user_books_stream_cursor_input: User_Books_Stream_Cursor_Input;
  user_books_stream_cursor_value_input: User_Books_Stream_Cursor_Value_Input;
  user_books_sum_fields: ResolverTypeWrapper<User_Books_Sum_Fields>;
  user_books_sum_order_by: User_Books_Sum_Order_By;
  user_books_var_pop_fields: ResolverTypeWrapper<User_Books_Var_Pop_Fields>;
  user_books_var_pop_order_by: User_Books_Var_Pop_Order_By;
  user_books_var_samp_fields: ResolverTypeWrapper<User_Books_Var_Samp_Fields>;
  user_books_var_samp_order_by: User_Books_Var_Samp_Order_By;
  user_books_variance_fields: ResolverTypeWrapper<User_Books_Variance_Fields>;
  user_books_variance_order_by: User_Books_Variance_Order_By;
  user_flags: ResolverTypeWrapper<User_Flags>;
  user_flags_aggregate_order_by: User_Flags_Aggregate_Order_By;
  user_flags_avg_order_by: User_Flags_Avg_Order_By;
  user_flags_bool_exp: User_Flags_Bool_Exp;
  user_flags_constraint: User_Flags_Constraint;
  user_flags_insert_input: User_Flags_Insert_Input;
  user_flags_max_order_by: User_Flags_Max_Order_By;
  user_flags_min_order_by: User_Flags_Min_Order_By;
  user_flags_mutation_response: ResolverTypeWrapper<User_Flags_Mutation_Response>;
  user_flags_on_conflict: User_Flags_On_Conflict;
  user_flags_order_by: User_Flags_Order_By;
  user_flags_select_column: User_Flags_Select_Column;
  user_flags_stddev_order_by: User_Flags_Stddev_Order_By;
  user_flags_stddev_pop_order_by: User_Flags_Stddev_Pop_Order_By;
  user_flags_stddev_samp_order_by: User_Flags_Stddev_Samp_Order_By;
  user_flags_stream_cursor_input: User_Flags_Stream_Cursor_Input;
  user_flags_stream_cursor_value_input: User_Flags_Stream_Cursor_Value_Input;
  user_flags_sum_order_by: User_Flags_Sum_Order_By;
  user_flags_update_column: User_Flags_Update_Column;
  user_flags_var_pop_order_by: User_Flags_Var_Pop_Order_By;
  user_flags_var_samp_order_by: User_Flags_Var_Samp_Order_By;
  user_flags_variance_order_by: User_Flags_Variance_Order_By;
  user_referrals: ResolverTypeWrapper<User_Referrals>;
  user_referrals_bool_exp: User_Referrals_Bool_Exp;
  user_referrals_order_by: User_Referrals_Order_By;
  user_referrals_select_column: User_Referrals_Select_Column;
  user_referrals_stream_cursor_input: User_Referrals_Stream_Cursor_Input;
  user_referrals_stream_cursor_value_input: User_Referrals_Stream_Cursor_Value_Input;
  user_statuses: ResolverTypeWrapper<User_Statuses>;
  user_statuses_bool_exp: User_Statuses_Bool_Exp;
  user_statuses_order_by: User_Statuses_Order_By;
  user_statuses_select_column: User_Statuses_Select_Column;
  user_statuses_stream_cursor_input: User_Statuses_Stream_Cursor_Input;
  user_statuses_stream_cursor_value_input: User_Statuses_Stream_Cursor_Value_Input;
  users: ResolverTypeWrapper<Users>;
  users_aggregate_by_created_at_date: ResolverTypeWrapper<Users_Aggregate_By_Created_At_Date>;
  users_aggregate_by_created_at_date_bool_exp: Users_Aggregate_By_Created_At_Date_Bool_Exp;
  users_aggregate_by_created_at_date_order_by: Users_Aggregate_By_Created_At_Date_Order_By;
  users_aggregate_by_created_at_date_select_column: Users_Aggregate_By_Created_At_Date_Select_Column;
  users_aggregate_by_created_at_date_stream_cursor_input: Users_Aggregate_By_Created_At_Date_Stream_Cursor_Input;
  users_aggregate_by_created_at_date_stream_cursor_value_input: Users_Aggregate_By_Created_At_Date_Stream_Cursor_Value_Input;
  users_aggregate_order_by: Users_Aggregate_Order_By;
  users_avg_order_by: Users_Avg_Order_By;
  users_bool_exp: Users_Bool_Exp;
  users_max_order_by: Users_Max_Order_By;
  users_min_order_by: Users_Min_Order_By;
  users_order_by: Users_Order_By;
  users_select_column: Users_Select_Column;
  users_stddev_order_by: Users_Stddev_Order_By;
  users_stddev_pop_order_by: Users_Stddev_Pop_Order_By;
  users_stddev_samp_order_by: Users_Stddev_Samp_Order_By;
  users_stream_cursor_input: Users_Stream_Cursor_Input;
  users_stream_cursor_value_input: Users_Stream_Cursor_Value_Input;
  users_sum_order_by: Users_Sum_Order_By;
  users_var_pop_order_by: Users_Var_Pop_Order_By;
  users_var_samp_order_by: Users_Var_Samp_Order_By;
  users_variance_order_by: Users_Variance_Order_By;
};

/** Mapping between all available schema types and the resolvers parents */
export type ResolversParentTypes = {
  AuthorIdType: AuthorIdType;
  AuthorInputType: AuthorInputType;
  BasicTag: BasicTag;
  BasicTagType: BasicTagType;
  BookDtoInput: BookDtoInput;
  BookDtoType: BookDtoType;
  BookIdType: BookIdType;
  BookInput: BookInput;
  BookMappingIdType: BookMappingIdType;
  BookMappingInput: BookMappingInput;
  BookSeriesDtoInput: BookSeriesDtoInput;
  Boolean: Scalars['Boolean']['output'];
  Boolean_comparison_exp: Boolean_Comparison_Exp;
  CharacterDtoInput: CharacterDtoInput;
  CharacterIdType: CharacterIdType;
  CharacterInput: CharacterInput;
  CollectionImportIdType: CollectionImportIdType;
  CollectionImportInput: CollectionImportInput;
  CollectionImportResultIdType: CollectionImportResultIdType;
  ContributionInputType: ContributionInputType;
  CreateBookFromPlatformInput: CreateBookFromPlatformInput;
  CreatePromptInput: CreatePromptInput;
  DatesReadInput: DatesReadInput;
  DeleteFollowedPromptType: DeleteFollowedPromptType;
  DeleteListType: DeleteListType;
  DeleteReadingJournalOutput: DeleteReadingJournalOutput;
  DeleteReadingJournalsOutput: DeleteReadingJournalsOutput;
  DtoTag: DtoTag;
  EditionIdType: EditionIdType;
  EditionInput: EditionInput;
  Float: Scalars['Float']['output'];
  FollowedListType: FollowedListType;
  FollowedPromptType: FollowedPromptType;
  FollowedUserType: FollowedUserType;
  GoalConditionInput: GoalConditionInput;
  GoalIdType: GoalIdType;
  GoalInput: GoalInput;
  ImageIdType: ImageIdType;
  ImageInput: ImageInput;
  InsertBlockOutput: InsertBlockOutput;
  Int: Scalars['Int']['output'];
  Int_comparison_exp: Int_Comparison_Exp;
  LikeDeleteType: LikeDeleteType;
  LikeType: LikeType;
  ListBookDeleteType: ListBookDeleteType;
  ListBookIdType: ListBookIdType;
  ListBookInput: ListBookInput;
  ListDeleteType: ListDeleteType;
  ListIdType: ListIdType;
  ListInput: ListInput;
  NewBookIdType: NewBookIdType;
  NewsletterStatusType: NewsletterStatusType;
  OptionalEditionIdType: OptionalEditionIdType;
  PromptAnswerCreateInput: PromptAnswerCreateInput;
  PromptAnswerIdType: PromptAnswerIdType;
  PromptIdType: PromptIdType;
  PublisherIdType: PublisherIdType;
  PublisherInputType: PublisherInputType;
  ReadingJournalCreateType: ReadingJournalCreateType;
  ReadingJournalOutput: ReadingJournalOutput;
  ReadingJournalUpdateType: ReadingJournalUpdateType;
  ReferralType: ReferralType;
  ReportInput: ReportInput;
  ReportOutput: ReportOutput;
  SearchOutput: SearchOutput;
  SeriesIdType: SeriesIdType;
  SeriesInput: SeriesInput;
  SeriesInputType: SeriesInputType;
  String: Scalars['String']['output'];
  String_comparison_exp: String_Comparison_Exp;
  SubscriptionsType: SubscriptionsType;
  SuccessType: SuccessType;
  TagsDtoInput: TagsDtoInput;
  TagsType: TagsType;
  TrendingBookType: TrendingBookType;
  UpdatePromptInput: UpdatePromptInput;
  UserBookCreateInput: UserBookCreateInput;
  UserBookDeleteType: UserBookDeleteType;
  UserBookIdType: UserBookIdType;
  UserBookReadIdType: UserBookReadIdType;
  UserBookUpdateInput: UserBookUpdateInput;
  UserBooksReadUpsertType: UserBooksReadUpsertType;
  UserIdType: UserIdType;
  UserJoinInput: UserJoinInput;
  UserLoginInput: UserLoginInput;
  ValidateReceiptType: ValidateReceiptType;
  activities: Activities;
  activities_aggregate_order_by: Activities_Aggregate_Order_By;
  activities_avg_order_by: Activities_Avg_Order_By;
  activities_bool_exp: Activities_Bool_Exp;
  activities_max_order_by: Activities_Max_Order_By;
  activities_min_order_by: Activities_Min_Order_By;
  activities_mutation_response: Activities_Mutation_Response;
  activities_order_by: Activities_Order_By;
  activities_stddev_order_by: Activities_Stddev_Order_By;
  activities_stddev_pop_order_by: Activities_Stddev_Pop_Order_By;
  activities_stddev_samp_order_by: Activities_Stddev_Samp_Order_By;
  activities_stream_cursor_input: Activities_Stream_Cursor_Input;
  activities_stream_cursor_value_input: Activities_Stream_Cursor_Value_Input;
  activities_sum_order_by: Activities_Sum_Order_By;
  activities_var_pop_order_by: Activities_Var_Pop_Order_By;
  activities_var_samp_order_by: Activities_Var_Samp_Order_By;
  activities_variance_order_by: Activities_Variance_Order_By;
  activity_feed_args: Activity_Feed_Args;
  activity_foryou_feed_args: Activity_Foryou_Feed_Args;
  authors: Authors;
  authors_aggregate_order_by: Authors_Aggregate_Order_By;
  authors_avg_order_by: Authors_Avg_Order_By;
  authors_bool_exp: Authors_Bool_Exp;
  authors_max_order_by: Authors_Max_Order_By;
  authors_min_order_by: Authors_Min_Order_By;
  authors_order_by: Authors_Order_By;
  authors_stddev_order_by: Authors_Stddev_Order_By;
  authors_stddev_pop_order_by: Authors_Stddev_Pop_Order_By;
  authors_stddev_samp_order_by: Authors_Stddev_Samp_Order_By;
  authors_stream_cursor_input: Authors_Stream_Cursor_Input;
  authors_stream_cursor_value_input: Authors_Stream_Cursor_Value_Input;
  authors_sum_order_by: Authors_Sum_Order_By;
  authors_var_pop_order_by: Authors_Var_Pop_Order_By;
  authors_var_samp_order_by: Authors_Var_Samp_Order_By;
  authors_variance_order_by: Authors_Variance_Order_By;
  bigint: Scalars['bigint']['output'];
  bigint_comparison_exp: Bigint_Comparison_Exp;
  book_categories: Book_Categories;
  book_categories_bool_exp: Book_Categories_Bool_Exp;
  book_categories_order_by: Book_Categories_Order_By;
  book_categories_stream_cursor_input: Book_Categories_Stream_Cursor_Input;
  book_categories_stream_cursor_value_input: Book_Categories_Stream_Cursor_Value_Input;
  book_characters: Book_Characters;
  book_characters_aggregate_order_by: Book_Characters_Aggregate_Order_By;
  book_characters_avg_order_by: Book_Characters_Avg_Order_By;
  book_characters_bool_exp: Book_Characters_Bool_Exp;
  book_characters_max_order_by: Book_Characters_Max_Order_By;
  book_characters_min_order_by: Book_Characters_Min_Order_By;
  book_characters_order_by: Book_Characters_Order_By;
  book_characters_stddev_order_by: Book_Characters_Stddev_Order_By;
  book_characters_stddev_pop_order_by: Book_Characters_Stddev_Pop_Order_By;
  book_characters_stddev_samp_order_by: Book_Characters_Stddev_Samp_Order_By;
  book_characters_stream_cursor_input: Book_Characters_Stream_Cursor_Input;
  book_characters_stream_cursor_value_input: Book_Characters_Stream_Cursor_Value_Input;
  book_characters_sum_order_by: Book_Characters_Sum_Order_By;
  book_characters_var_pop_order_by: Book_Characters_Var_Pop_Order_By;
  book_characters_var_samp_order_by: Book_Characters_Var_Samp_Order_By;
  book_characters_variance_order_by: Book_Characters_Variance_Order_By;
  book_collections: Book_Collections;
  book_collections_bool_exp: Book_Collections_Bool_Exp;
  book_collections_order_by: Book_Collections_Order_By;
  book_collections_stream_cursor_input: Book_Collections_Stream_Cursor_Input;
  book_collections_stream_cursor_value_input: Book_Collections_Stream_Cursor_Value_Input;
  book_mappings: Book_Mappings;
  book_mappings_aggregate_order_by: Book_Mappings_Aggregate_Order_By;
  book_mappings_avg_order_by: Book_Mappings_Avg_Order_By;
  book_mappings_bool_exp: Book_Mappings_Bool_Exp;
  book_mappings_max_order_by: Book_Mappings_Max_Order_By;
  book_mappings_min_order_by: Book_Mappings_Min_Order_By;
  book_mappings_order_by: Book_Mappings_Order_By;
  book_mappings_stddev_order_by: Book_Mappings_Stddev_Order_By;
  book_mappings_stddev_pop_order_by: Book_Mappings_Stddev_Pop_Order_By;
  book_mappings_stddev_samp_order_by: Book_Mappings_Stddev_Samp_Order_By;
  book_mappings_stream_cursor_input: Book_Mappings_Stream_Cursor_Input;
  book_mappings_stream_cursor_value_input: Book_Mappings_Stream_Cursor_Value_Input;
  book_mappings_sum_order_by: Book_Mappings_Sum_Order_By;
  book_mappings_var_pop_order_by: Book_Mappings_Var_Pop_Order_By;
  book_mappings_var_samp_order_by: Book_Mappings_Var_Samp_Order_By;
  book_mappings_variance_order_by: Book_Mappings_Variance_Order_By;
  book_series: Book_Series;
  book_series_aggregate: Book_Series_Aggregate;
  book_series_aggregate_bool_exp: Book_Series_Aggregate_Bool_Exp;
  book_series_aggregate_bool_exp_avg: Book_Series_Aggregate_Bool_Exp_Avg;
  book_series_aggregate_bool_exp_bool_and: Book_Series_Aggregate_Bool_Exp_Bool_And;
  book_series_aggregate_bool_exp_bool_or: Book_Series_Aggregate_Bool_Exp_Bool_Or;
  book_series_aggregate_bool_exp_corr: Book_Series_Aggregate_Bool_Exp_Corr;
  book_series_aggregate_bool_exp_corr_arguments: Book_Series_Aggregate_Bool_Exp_Corr_Arguments;
  book_series_aggregate_bool_exp_count: Book_Series_Aggregate_Bool_Exp_Count;
  book_series_aggregate_bool_exp_covar_samp: Book_Series_Aggregate_Bool_Exp_Covar_Samp;
  book_series_aggregate_bool_exp_covar_samp_arguments: Book_Series_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  book_series_aggregate_bool_exp_max: Book_Series_Aggregate_Bool_Exp_Max;
  book_series_aggregate_bool_exp_min: Book_Series_Aggregate_Bool_Exp_Min;
  book_series_aggregate_bool_exp_stddev_samp: Book_Series_Aggregate_Bool_Exp_Stddev_Samp;
  book_series_aggregate_bool_exp_sum: Book_Series_Aggregate_Bool_Exp_Sum;
  book_series_aggregate_bool_exp_var_samp: Book_Series_Aggregate_Bool_Exp_Var_Samp;
  book_series_aggregate_fields: Book_Series_Aggregate_Fields;
  book_series_aggregate_order_by: Book_Series_Aggregate_Order_By;
  book_series_avg_fields: Book_Series_Avg_Fields;
  book_series_avg_order_by: Book_Series_Avg_Order_By;
  book_series_bool_exp: Book_Series_Bool_Exp;
  book_series_max_fields: Book_Series_Max_Fields;
  book_series_max_order_by: Book_Series_Max_Order_By;
  book_series_min_fields: Book_Series_Min_Fields;
  book_series_min_order_by: Book_Series_Min_Order_By;
  book_series_order_by: Book_Series_Order_By;
  book_series_stddev_fields: Book_Series_Stddev_Fields;
  book_series_stddev_order_by: Book_Series_Stddev_Order_By;
  book_series_stddev_pop_fields: Book_Series_Stddev_Pop_Fields;
  book_series_stddev_pop_order_by: Book_Series_Stddev_Pop_Order_By;
  book_series_stddev_samp_fields: Book_Series_Stddev_Samp_Fields;
  book_series_stddev_samp_order_by: Book_Series_Stddev_Samp_Order_By;
  book_series_stream_cursor_input: Book_Series_Stream_Cursor_Input;
  book_series_stream_cursor_value_input: Book_Series_Stream_Cursor_Value_Input;
  book_series_sum_fields: Book_Series_Sum_Fields;
  book_series_sum_order_by: Book_Series_Sum_Order_By;
  book_series_var_pop_fields: Book_Series_Var_Pop_Fields;
  book_series_var_pop_order_by: Book_Series_Var_Pop_Order_By;
  book_series_var_samp_fields: Book_Series_Var_Samp_Fields;
  book_series_var_samp_order_by: Book_Series_Var_Samp_Order_By;
  book_series_variance_fields: Book_Series_Variance_Fields;
  book_series_variance_order_by: Book_Series_Variance_Order_By;
  book_statuses: Book_Statuses;
  book_statuses_bool_exp: Book_Statuses_Bool_Exp;
  book_statuses_order_by: Book_Statuses_Order_By;
  book_statuses_stream_cursor_input: Book_Statuses_Stream_Cursor_Input;
  book_statuses_stream_cursor_value_input: Book_Statuses_Stream_Cursor_Value_Input;
  bookles: Bookles;
  bookles_bool_exp: Bookles_Bool_Exp;
  bookles_order_by: Bookles_Order_By;
  bookles_stream_cursor_input: Bookles_Stream_Cursor_Input;
  bookles_stream_cursor_value_input: Bookles_Stream_Cursor_Value_Input;
  books: Books;
  books_aggregate: Books_Aggregate;
  books_aggregate_bool_exp: Books_Aggregate_Bool_Exp;
  books_aggregate_bool_exp_bool_and: Books_Aggregate_Bool_Exp_Bool_And;
  books_aggregate_bool_exp_bool_or: Books_Aggregate_Bool_Exp_Bool_Or;
  books_aggregate_bool_exp_count: Books_Aggregate_Bool_Exp_Count;
  books_aggregate_fields: Books_Aggregate_Fields;
  books_aggregate_order_by: Books_Aggregate_Order_By;
  books_avg_fields: Books_Avg_Fields;
  books_avg_order_by: Books_Avg_Order_By;
  books_bool_exp: Books_Bool_Exp;
  books_max_fields: Books_Max_Fields;
  books_max_order_by: Books_Max_Order_By;
  books_min_fields: Books_Min_Fields;
  books_min_order_by: Books_Min_Order_By;
  books_order_by: Books_Order_By;
  books_stddev_fields: Books_Stddev_Fields;
  books_stddev_order_by: Books_Stddev_Order_By;
  books_stddev_pop_fields: Books_Stddev_Pop_Fields;
  books_stddev_pop_order_by: Books_Stddev_Pop_Order_By;
  books_stddev_samp_fields: Books_Stddev_Samp_Fields;
  books_stddev_samp_order_by: Books_Stddev_Samp_Order_By;
  books_stream_cursor_input: Books_Stream_Cursor_Input;
  books_stream_cursor_value_input: Books_Stream_Cursor_Value_Input;
  books_sum_fields: Books_Sum_Fields;
  books_sum_order_by: Books_Sum_Order_By;
  books_var_pop_fields: Books_Var_Pop_Fields;
  books_var_pop_order_by: Books_Var_Pop_Order_By;
  books_var_samp_fields: Books_Var_Samp_Fields;
  books_var_samp_order_by: Books_Var_Samp_Order_By;
  books_variance_fields: Books_Variance_Fields;
  books_variance_order_by: Books_Variance_Order_By;
  characters: Characters;
  characters_bool_exp: Characters_Bool_Exp;
  characters_order_by: Characters_Order_By;
  characters_stream_cursor_input: Characters_Stream_Cursor_Input;
  characters_stream_cursor_value_input: Characters_Stream_Cursor_Value_Input;
  citext: Scalars['citext']['output'];
  citext_comparison_exp: Citext_Comparison_Exp;
  collection_import_results: Collection_Import_Results;
  collection_import_results_aggregate_order_by: Collection_Import_Results_Aggregate_Order_By;
  collection_import_results_avg_order_by: Collection_Import_Results_Avg_Order_By;
  collection_import_results_bool_exp: Collection_Import_Results_Bool_Exp;
  collection_import_results_inc_input: Collection_Import_Results_Inc_Input;
  collection_import_results_max_order_by: Collection_Import_Results_Max_Order_By;
  collection_import_results_min_order_by: Collection_Import_Results_Min_Order_By;
  collection_import_results_mutation_response: Collection_Import_Results_Mutation_Response;
  collection_import_results_order_by: Collection_Import_Results_Order_By;
  collection_import_results_pk_columns_input: Collection_Import_Results_Pk_Columns_Input;
  collection_import_results_set_input: Collection_Import_Results_Set_Input;
  collection_import_results_stddev_order_by: Collection_Import_Results_Stddev_Order_By;
  collection_import_results_stddev_pop_order_by: Collection_Import_Results_Stddev_Pop_Order_By;
  collection_import_results_stddev_samp_order_by: Collection_Import_Results_Stddev_Samp_Order_By;
  collection_import_results_stream_cursor_input: Collection_Import_Results_Stream_Cursor_Input;
  collection_import_results_stream_cursor_value_input: Collection_Import_Results_Stream_Cursor_Value_Input;
  collection_import_results_sum_order_by: Collection_Import_Results_Sum_Order_By;
  collection_import_results_updates: Collection_Import_Results_Updates;
  collection_import_results_var_pop_order_by: Collection_Import_Results_Var_Pop_Order_By;
  collection_import_results_var_samp_order_by: Collection_Import_Results_Var_Samp_Order_By;
  collection_import_results_variance_order_by: Collection_Import_Results_Variance_Order_By;
  collection_imports: Collection_Imports;
  collection_imports_aggregate_order_by: Collection_Imports_Aggregate_Order_By;
  collection_imports_avg_order_by: Collection_Imports_Avg_Order_By;
  collection_imports_bool_exp: Collection_Imports_Bool_Exp;
  collection_imports_max_order_by: Collection_Imports_Max_Order_By;
  collection_imports_min_order_by: Collection_Imports_Min_Order_By;
  collection_imports_order_by: Collection_Imports_Order_By;
  collection_imports_stddev_order_by: Collection_Imports_Stddev_Order_By;
  collection_imports_stddev_pop_order_by: Collection_Imports_Stddev_Pop_Order_By;
  collection_imports_stddev_samp_order_by: Collection_Imports_Stddev_Samp_Order_By;
  collection_imports_stream_cursor_input: Collection_Imports_Stream_Cursor_Input;
  collection_imports_stream_cursor_value_input: Collection_Imports_Stream_Cursor_Value_Input;
  collection_imports_sum_order_by: Collection_Imports_Sum_Order_By;
  collection_imports_var_pop_order_by: Collection_Imports_Var_Pop_Order_By;
  collection_imports_var_samp_order_by: Collection_Imports_Var_Samp_Order_By;
  collection_imports_variance_order_by: Collection_Imports_Variance_Order_By;
  contributions: Contributions;
  contributions_aggregate: Contributions_Aggregate;
  contributions_aggregate_bool_exp: Contributions_Aggregate_Bool_Exp;
  contributions_aggregate_bool_exp_count: Contributions_Aggregate_Bool_Exp_Count;
  contributions_aggregate_fields: Contributions_Aggregate_Fields;
  contributions_aggregate_order_by: Contributions_Aggregate_Order_By;
  contributions_avg_fields: Contributions_Avg_Fields;
  contributions_avg_order_by: Contributions_Avg_Order_By;
  contributions_bool_exp: Contributions_Bool_Exp;
  contributions_max_fields: Contributions_Max_Fields;
  contributions_max_order_by: Contributions_Max_Order_By;
  contributions_min_fields: Contributions_Min_Fields;
  contributions_min_order_by: Contributions_Min_Order_By;
  contributions_order_by: Contributions_Order_By;
  contributions_stddev_fields: Contributions_Stddev_Fields;
  contributions_stddev_order_by: Contributions_Stddev_Order_By;
  contributions_stddev_pop_fields: Contributions_Stddev_Pop_Fields;
  contributions_stddev_pop_order_by: Contributions_Stddev_Pop_Order_By;
  contributions_stddev_samp_fields: Contributions_Stddev_Samp_Fields;
  contributions_stddev_samp_order_by: Contributions_Stddev_Samp_Order_By;
  contributions_stream_cursor_input: Contributions_Stream_Cursor_Input;
  contributions_stream_cursor_value_input: Contributions_Stream_Cursor_Value_Input;
  contributions_sum_fields: Contributions_Sum_Fields;
  contributions_sum_order_by: Contributions_Sum_Order_By;
  contributions_var_pop_fields: Contributions_Var_Pop_Fields;
  contributions_var_pop_order_by: Contributions_Var_Pop_Order_By;
  contributions_var_samp_fields: Contributions_Var_Samp_Fields;
  contributions_var_samp_order_by: Contributions_Var_Samp_Order_By;
  contributions_variance_fields: Contributions_Variance_Fields;
  contributions_variance_order_by: Contributions_Variance_Order_By;
  countries: Countries;
  countries_bool_exp: Countries_Bool_Exp;
  countries_order_by: Countries_Order_By;
  countries_stream_cursor_input: Countries_Stream_Cursor_Input;
  countries_stream_cursor_value_input: Countries_Stream_Cursor_Value_Input;
  date: Scalars['date']['output'];
  date_comparison_exp: Date_Comparison_Exp;
  editions: Editions;
  editions_aggregate_order_by: Editions_Aggregate_Order_By;
  editions_avg_order_by: Editions_Avg_Order_By;
  editions_bool_exp: Editions_Bool_Exp;
  editions_max_order_by: Editions_Max_Order_By;
  editions_min_order_by: Editions_Min_Order_By;
  editions_order_by: Editions_Order_By;
  editions_stddev_order_by: Editions_Stddev_Order_By;
  editions_stddev_pop_order_by: Editions_Stddev_Pop_Order_By;
  editions_stddev_samp_order_by: Editions_Stddev_Samp_Order_By;
  editions_stream_cursor_input: Editions_Stream_Cursor_Input;
  editions_stream_cursor_value_input: Editions_Stream_Cursor_Value_Input;
  editions_sum_order_by: Editions_Sum_Order_By;
  editions_var_pop_order_by: Editions_Var_Pop_Order_By;
  editions_var_samp_order_by: Editions_Var_Samp_Order_By;
  editions_variance_order_by: Editions_Variance_Order_By;
  flag_statuses: Flag_Statuses;
  flag_statuses_bool_exp: Flag_Statuses_Bool_Exp;
  flag_statuses_order_by: Flag_Statuses_Order_By;
  flag_statuses_stream_cursor_input: Flag_Statuses_Stream_Cursor_Input;
  flag_statuses_stream_cursor_value_input: Flag_Statuses_Stream_Cursor_Value_Input;
  float8: Scalars['float8']['output'];
  float8_comparison_exp: Float8_Comparison_Exp;
  followed_lists: Followed_Lists;
  followed_lists_aggregate_order_by: Followed_Lists_Aggregate_Order_By;
  followed_lists_avg_order_by: Followed_Lists_Avg_Order_By;
  followed_lists_bool_exp: Followed_Lists_Bool_Exp;
  followed_lists_max_order_by: Followed_Lists_Max_Order_By;
  followed_lists_min_order_by: Followed_Lists_Min_Order_By;
  followed_lists_order_by: Followed_Lists_Order_By;
  followed_lists_stddev_order_by: Followed_Lists_Stddev_Order_By;
  followed_lists_stddev_pop_order_by: Followed_Lists_Stddev_Pop_Order_By;
  followed_lists_stddev_samp_order_by: Followed_Lists_Stddev_Samp_Order_By;
  followed_lists_stream_cursor_input: Followed_Lists_Stream_Cursor_Input;
  followed_lists_stream_cursor_value_input: Followed_Lists_Stream_Cursor_Value_Input;
  followed_lists_sum_order_by: Followed_Lists_Sum_Order_By;
  followed_lists_var_pop_order_by: Followed_Lists_Var_Pop_Order_By;
  followed_lists_var_samp_order_by: Followed_Lists_Var_Samp_Order_By;
  followed_lists_variance_order_by: Followed_Lists_Variance_Order_By;
  followed_prompts: Followed_Prompts;
  followed_prompts_aggregate_order_by: Followed_Prompts_Aggregate_Order_By;
  followed_prompts_avg_order_by: Followed_Prompts_Avg_Order_By;
  followed_prompts_bool_exp: Followed_Prompts_Bool_Exp;
  followed_prompts_inc_input: Followed_Prompts_Inc_Input;
  followed_prompts_insert_input: Followed_Prompts_Insert_Input;
  followed_prompts_max_order_by: Followed_Prompts_Max_Order_By;
  followed_prompts_min_order_by: Followed_Prompts_Min_Order_By;
  followed_prompts_mutation_response: Followed_Prompts_Mutation_Response;
  followed_prompts_on_conflict: Followed_Prompts_On_Conflict;
  followed_prompts_order_by: Followed_Prompts_Order_By;
  followed_prompts_pk_columns_input: Followed_Prompts_Pk_Columns_Input;
  followed_prompts_set_input: Followed_Prompts_Set_Input;
  followed_prompts_stddev_order_by: Followed_Prompts_Stddev_Order_By;
  followed_prompts_stddev_pop_order_by: Followed_Prompts_Stddev_Pop_Order_By;
  followed_prompts_stddev_samp_order_by: Followed_Prompts_Stddev_Samp_Order_By;
  followed_prompts_stream_cursor_input: Followed_Prompts_Stream_Cursor_Input;
  followed_prompts_stream_cursor_value_input: Followed_Prompts_Stream_Cursor_Value_Input;
  followed_prompts_sum_order_by: Followed_Prompts_Sum_Order_By;
  followed_prompts_updates: Followed_Prompts_Updates;
  followed_prompts_var_pop_order_by: Followed_Prompts_Var_Pop_Order_By;
  followed_prompts_var_samp_order_by: Followed_Prompts_Var_Samp_Order_By;
  followed_prompts_variance_order_by: Followed_Prompts_Variance_Order_By;
  followed_user_books: Followed_User_Books;
  followed_user_books_aggregate: Followed_User_Books_Aggregate;
  followed_user_books_aggregate_fields: Followed_User_Books_Aggregate_Fields;
  followed_user_books_avg_fields: Followed_User_Books_Avg_Fields;
  followed_user_books_bool_exp: Followed_User_Books_Bool_Exp;
  followed_user_books_max_fields: Followed_User_Books_Max_Fields;
  followed_user_books_min_fields: Followed_User_Books_Min_Fields;
  followed_user_books_order_by: Followed_User_Books_Order_By;
  followed_user_books_stddev_fields: Followed_User_Books_Stddev_Fields;
  followed_user_books_stddev_pop_fields: Followed_User_Books_Stddev_Pop_Fields;
  followed_user_books_stddev_samp_fields: Followed_User_Books_Stddev_Samp_Fields;
  followed_user_books_stream_cursor_input: Followed_User_Books_Stream_Cursor_Input;
  followed_user_books_stream_cursor_value_input: Followed_User_Books_Stream_Cursor_Value_Input;
  followed_user_books_sum_fields: Followed_User_Books_Sum_Fields;
  followed_user_books_var_pop_fields: Followed_User_Books_Var_Pop_Fields;
  followed_user_books_var_samp_fields: Followed_User_Books_Var_Samp_Fields;
  followed_user_books_variance_fields: Followed_User_Books_Variance_Fields;
  followed_users: Followed_Users;
  followed_users_aggregate_order_by: Followed_Users_Aggregate_Order_By;
  followed_users_avg_order_by: Followed_Users_Avg_Order_By;
  followed_users_bool_exp: Followed_Users_Bool_Exp;
  followed_users_max_order_by: Followed_Users_Max_Order_By;
  followed_users_min_order_by: Followed_Users_Min_Order_By;
  followed_users_mutation_response: Followed_Users_Mutation_Response;
  followed_users_order_by: Followed_Users_Order_By;
  followed_users_stddev_order_by: Followed_Users_Stddev_Order_By;
  followed_users_stddev_pop_order_by: Followed_Users_Stddev_Pop_Order_By;
  followed_users_stddev_samp_order_by: Followed_Users_Stddev_Samp_Order_By;
  followed_users_stream_cursor_input: Followed_Users_Stream_Cursor_Input;
  followed_users_stream_cursor_value_input: Followed_Users_Stream_Cursor_Value_Input;
  followed_users_sum_order_by: Followed_Users_Sum_Order_By;
  followed_users_var_pop_order_by: Followed_Users_Var_Pop_Order_By;
  followed_users_var_samp_order_by: Followed_Users_Var_Samp_Order_By;
  followed_users_variance_order_by: Followed_Users_Variance_Order_By;
  following_user_books: Following_User_Books;
  following_user_books_aggregate: Following_User_Books_Aggregate;
  following_user_books_aggregate_fields: Following_User_Books_Aggregate_Fields;
  following_user_books_avg_fields: Following_User_Books_Avg_Fields;
  following_user_books_bool_exp: Following_User_Books_Bool_Exp;
  following_user_books_max_fields: Following_User_Books_Max_Fields;
  following_user_books_min_fields: Following_User_Books_Min_Fields;
  following_user_books_order_by: Following_User_Books_Order_By;
  following_user_books_stddev_fields: Following_User_Books_Stddev_Fields;
  following_user_books_stddev_pop_fields: Following_User_Books_Stddev_Pop_Fields;
  following_user_books_stddev_samp_fields: Following_User_Books_Stddev_Samp_Fields;
  following_user_books_stream_cursor_input: Following_User_Books_Stream_Cursor_Input;
  following_user_books_stream_cursor_value_input: Following_User_Books_Stream_Cursor_Value_Input;
  following_user_books_sum_fields: Following_User_Books_Sum_Fields;
  following_user_books_var_pop_fields: Following_User_Books_Var_Pop_Fields;
  following_user_books_var_samp_fields: Following_User_Books_Var_Samp_Fields;
  following_user_books_variance_fields: Following_User_Books_Variance_Fields;
  goals: Goals;
  goals_aggregate_order_by: Goals_Aggregate_Order_By;
  goals_avg_order_by: Goals_Avg_Order_By;
  goals_bool_exp: Goals_Bool_Exp;
  goals_max_order_by: Goals_Max_Order_By;
  goals_min_order_by: Goals_Min_Order_By;
  goals_mutation_response: Goals_Mutation_Response;
  goals_order_by: Goals_Order_By;
  goals_stddev_order_by: Goals_Stddev_Order_By;
  goals_stddev_pop_order_by: Goals_Stddev_Pop_Order_By;
  goals_stddev_samp_order_by: Goals_Stddev_Samp_Order_By;
  goals_stream_cursor_input: Goals_Stream_Cursor_Input;
  goals_stream_cursor_value_input: Goals_Stream_Cursor_Value_Input;
  goals_sum_order_by: Goals_Sum_Order_By;
  goals_var_pop_order_by: Goals_Var_Pop_Order_By;
  goals_var_samp_order_by: Goals_Var_Samp_Order_By;
  goals_variance_order_by: Goals_Variance_Order_By;
  images: Images;
  images_aggregate_order_by: Images_Aggregate_Order_By;
  images_avg_order_by: Images_Avg_Order_By;
  images_bool_exp: Images_Bool_Exp;
  images_max_order_by: Images_Max_Order_By;
  images_min_order_by: Images_Min_Order_By;
  images_order_by: Images_Order_By;
  images_stddev_order_by: Images_Stddev_Order_By;
  images_stddev_pop_order_by: Images_Stddev_Pop_Order_By;
  images_stddev_samp_order_by: Images_Stddev_Samp_Order_By;
  images_stream_cursor_input: Images_Stream_Cursor_Input;
  images_stream_cursor_value_input: Images_Stream_Cursor_Value_Input;
  images_sum_order_by: Images_Sum_Order_By;
  images_var_pop_order_by: Images_Var_Pop_Order_By;
  images_var_samp_order_by: Images_Var_Samp_Order_By;
  images_variance_order_by: Images_Variance_Order_By;
  json: Scalars['json']['output'];
  json_comparison_exp: Json_Comparison_Exp;
  jsonb: Scalars['jsonb']['output'];
  jsonb_cast_exp: Jsonb_Cast_Exp;
  jsonb_comparison_exp: Jsonb_Comparison_Exp;
  languages: Languages;
  languages_bool_exp: Languages_Bool_Exp;
  languages_order_by: Languages_Order_By;
  languages_stream_cursor_input: Languages_Stream_Cursor_Input;
  languages_stream_cursor_value_input: Languages_Stream_Cursor_Value_Input;
  likes: Likes;
  likes_aggregate_order_by: Likes_Aggregate_Order_By;
  likes_avg_order_by: Likes_Avg_Order_By;
  likes_bool_exp: Likes_Bool_Exp;
  likes_max_order_by: Likes_Max_Order_By;
  likes_min_order_by: Likes_Min_Order_By;
  likes_order_by: Likes_Order_By;
  likes_stddev_order_by: Likes_Stddev_Order_By;
  likes_stddev_pop_order_by: Likes_Stddev_Pop_Order_By;
  likes_stddev_samp_order_by: Likes_Stddev_Samp_Order_By;
  likes_stream_cursor_input: Likes_Stream_Cursor_Input;
  likes_stream_cursor_value_input: Likes_Stream_Cursor_Value_Input;
  likes_sum_order_by: Likes_Sum_Order_By;
  likes_var_pop_order_by: Likes_Var_Pop_Order_By;
  likes_var_samp_order_by: Likes_Var_Samp_Order_By;
  likes_variance_order_by: Likes_Variance_Order_By;
  list_books: List_Books;
  list_books_aggregate: List_Books_Aggregate;
  list_books_aggregate_bool_exp: List_Books_Aggregate_Bool_Exp;
  list_books_aggregate_bool_exp_bool_and: List_Books_Aggregate_Bool_Exp_Bool_And;
  list_books_aggregate_bool_exp_bool_or: List_Books_Aggregate_Bool_Exp_Bool_Or;
  list_books_aggregate_bool_exp_count: List_Books_Aggregate_Bool_Exp_Count;
  list_books_aggregate_fields: List_Books_Aggregate_Fields;
  list_books_aggregate_order_by: List_Books_Aggregate_Order_By;
  list_books_avg_fields: List_Books_Avg_Fields;
  list_books_avg_order_by: List_Books_Avg_Order_By;
  list_books_bool_exp: List_Books_Bool_Exp;
  list_books_inc_input: List_Books_Inc_Input;
  list_books_max_fields: List_Books_Max_Fields;
  list_books_max_order_by: List_Books_Max_Order_By;
  list_books_min_fields: List_Books_Min_Fields;
  list_books_min_order_by: List_Books_Min_Order_By;
  list_books_mutation_response: List_Books_Mutation_Response;
  list_books_order_by: List_Books_Order_By;
  list_books_pk_columns_input: List_Books_Pk_Columns_Input;
  list_books_set_input: List_Books_Set_Input;
  list_books_stddev_fields: List_Books_Stddev_Fields;
  list_books_stddev_order_by: List_Books_Stddev_Order_By;
  list_books_stddev_pop_fields: List_Books_Stddev_Pop_Fields;
  list_books_stddev_pop_order_by: List_Books_Stddev_Pop_Order_By;
  list_books_stddev_samp_fields: List_Books_Stddev_Samp_Fields;
  list_books_stddev_samp_order_by: List_Books_Stddev_Samp_Order_By;
  list_books_stream_cursor_input: List_Books_Stream_Cursor_Input;
  list_books_stream_cursor_value_input: List_Books_Stream_Cursor_Value_Input;
  list_books_sum_fields: List_Books_Sum_Fields;
  list_books_sum_order_by: List_Books_Sum_Order_By;
  list_books_updates: List_Books_Updates;
  list_books_var_pop_fields: List_Books_Var_Pop_Fields;
  list_books_var_pop_order_by: List_Books_Var_Pop_Order_By;
  list_books_var_samp_fields: List_Books_Var_Samp_Fields;
  list_books_var_samp_order_by: List_Books_Var_Samp_Order_By;
  list_books_variance_fields: List_Books_Variance_Fields;
  list_books_variance_order_by: List_Books_Variance_Order_By;
  lists: Lists;
  lists_aggregate: Lists_Aggregate;
  lists_aggregate_bool_exp: Lists_Aggregate_Bool_Exp;
  lists_aggregate_bool_exp_bool_and: Lists_Aggregate_Bool_Exp_Bool_And;
  lists_aggregate_bool_exp_bool_or: Lists_Aggregate_Bool_Exp_Bool_Or;
  lists_aggregate_bool_exp_count: Lists_Aggregate_Bool_Exp_Count;
  lists_aggregate_fields: Lists_Aggregate_Fields;
  lists_aggregate_order_by: Lists_Aggregate_Order_By;
  lists_avg_fields: Lists_Avg_Fields;
  lists_avg_order_by: Lists_Avg_Order_By;
  lists_bool_exp: Lists_Bool_Exp;
  lists_max_fields: Lists_Max_Fields;
  lists_max_order_by: Lists_Max_Order_By;
  lists_min_fields: Lists_Min_Fields;
  lists_min_order_by: Lists_Min_Order_By;
  lists_order_by: Lists_Order_By;
  lists_stddev_fields: Lists_Stddev_Fields;
  lists_stddev_order_by: Lists_Stddev_Order_By;
  lists_stddev_pop_fields: Lists_Stddev_Pop_Fields;
  lists_stddev_pop_order_by: Lists_Stddev_Pop_Order_By;
  lists_stddev_samp_fields: Lists_Stddev_Samp_Fields;
  lists_stddev_samp_order_by: Lists_Stddev_Samp_Order_By;
  lists_stream_cursor_input: Lists_Stream_Cursor_Input;
  lists_stream_cursor_value_input: Lists_Stream_Cursor_Value_Input;
  lists_sum_fields: Lists_Sum_Fields;
  lists_sum_order_by: Lists_Sum_Order_By;
  lists_var_pop_fields: Lists_Var_Pop_Fields;
  lists_var_pop_order_by: Lists_Var_Pop_Order_By;
  lists_var_samp_fields: Lists_Var_Samp_Fields;
  lists_var_samp_order_by: Lists_Var_Samp_Order_By;
  lists_variance_fields: Lists_Variance_Fields;
  lists_variance_order_by: Lists_Variance_Order_By;
  mutation_root: {};
  notification_channels: Notification_Channels;
  notification_channels_bool_exp: Notification_Channels_Bool_Exp;
  notification_channels_order_by: Notification_Channels_Order_By;
  notification_channels_stream_cursor_input: Notification_Channels_Stream_Cursor_Input;
  notification_channels_stream_cursor_value_input: Notification_Channels_Stream_Cursor_Value_Input;
  notification_deliveries: Notification_Deliveries;
  notification_deliveries_aggregate: Notification_Deliveries_Aggregate;
  notification_deliveries_aggregate_bool_exp: Notification_Deliveries_Aggregate_Bool_Exp;
  notification_deliveries_aggregate_bool_exp_bool_and: Notification_Deliveries_Aggregate_Bool_Exp_Bool_And;
  notification_deliveries_aggregate_bool_exp_bool_or: Notification_Deliveries_Aggregate_Bool_Exp_Bool_Or;
  notification_deliveries_aggregate_bool_exp_count: Notification_Deliveries_Aggregate_Bool_Exp_Count;
  notification_deliveries_aggregate_fields: Notification_Deliveries_Aggregate_Fields;
  notification_deliveries_aggregate_order_by: Notification_Deliveries_Aggregate_Order_By;
  notification_deliveries_avg_fields: Notification_Deliveries_Avg_Fields;
  notification_deliveries_avg_order_by: Notification_Deliveries_Avg_Order_By;
  notification_deliveries_bool_exp: Notification_Deliveries_Bool_Exp;
  notification_deliveries_max_fields: Notification_Deliveries_Max_Fields;
  notification_deliveries_max_order_by: Notification_Deliveries_Max_Order_By;
  notification_deliveries_min_fields: Notification_Deliveries_Min_Fields;
  notification_deliveries_min_order_by: Notification_Deliveries_Min_Order_By;
  notification_deliveries_mutation_response: Notification_Deliveries_Mutation_Response;
  notification_deliveries_order_by: Notification_Deliveries_Order_By;
  notification_deliveries_pk_columns_input: Notification_Deliveries_Pk_Columns_Input;
  notification_deliveries_set_input: Notification_Deliveries_Set_Input;
  notification_deliveries_stddev_fields: Notification_Deliveries_Stddev_Fields;
  notification_deliveries_stddev_order_by: Notification_Deliveries_Stddev_Order_By;
  notification_deliveries_stddev_pop_fields: Notification_Deliveries_Stddev_Pop_Fields;
  notification_deliveries_stddev_pop_order_by: Notification_Deliveries_Stddev_Pop_Order_By;
  notification_deliveries_stddev_samp_fields: Notification_Deliveries_Stddev_Samp_Fields;
  notification_deliveries_stddev_samp_order_by: Notification_Deliveries_Stddev_Samp_Order_By;
  notification_deliveries_stream_cursor_input: Notification_Deliveries_Stream_Cursor_Input;
  notification_deliveries_stream_cursor_value_input: Notification_Deliveries_Stream_Cursor_Value_Input;
  notification_deliveries_sum_fields: Notification_Deliveries_Sum_Fields;
  notification_deliveries_sum_order_by: Notification_Deliveries_Sum_Order_By;
  notification_deliveries_updates: Notification_Deliveries_Updates;
  notification_deliveries_var_pop_fields: Notification_Deliveries_Var_Pop_Fields;
  notification_deliveries_var_pop_order_by: Notification_Deliveries_Var_Pop_Order_By;
  notification_deliveries_var_samp_fields: Notification_Deliveries_Var_Samp_Fields;
  notification_deliveries_var_samp_order_by: Notification_Deliveries_Var_Samp_Order_By;
  notification_deliveries_variance_fields: Notification_Deliveries_Variance_Fields;
  notification_deliveries_variance_order_by: Notification_Deliveries_Variance_Order_By;
  notification_settings: Notification_Settings;
  notification_settings_aggregate_order_by: Notification_Settings_Aggregate_Order_By;
  notification_settings_avg_order_by: Notification_Settings_Avg_Order_By;
  notification_settings_bool_exp: Notification_Settings_Bool_Exp;
  notification_settings_insert_input: Notification_Settings_Insert_Input;
  notification_settings_max_order_by: Notification_Settings_Max_Order_By;
  notification_settings_min_order_by: Notification_Settings_Min_Order_By;
  notification_settings_mutation_response: Notification_Settings_Mutation_Response;
  notification_settings_on_conflict: Notification_Settings_On_Conflict;
  notification_settings_order_by: Notification_Settings_Order_By;
  notification_settings_pk_columns_input: Notification_Settings_Pk_Columns_Input;
  notification_settings_set_input: Notification_Settings_Set_Input;
  notification_settings_stddev_order_by: Notification_Settings_Stddev_Order_By;
  notification_settings_stddev_pop_order_by: Notification_Settings_Stddev_Pop_Order_By;
  notification_settings_stddev_samp_order_by: Notification_Settings_Stddev_Samp_Order_By;
  notification_settings_stream_cursor_input: Notification_Settings_Stream_Cursor_Input;
  notification_settings_stream_cursor_value_input: Notification_Settings_Stream_Cursor_Value_Input;
  notification_settings_sum_order_by: Notification_Settings_Sum_Order_By;
  notification_settings_updates: Notification_Settings_Updates;
  notification_settings_var_pop_order_by: Notification_Settings_Var_Pop_Order_By;
  notification_settings_var_samp_order_by: Notification_Settings_Var_Samp_Order_By;
  notification_settings_variance_order_by: Notification_Settings_Variance_Order_By;
  notification_types: Notification_Types;
  notification_types_bool_exp: Notification_Types_Bool_Exp;
  notification_types_order_by: Notification_Types_Order_By;
  notification_types_stream_cursor_input: Notification_Types_Stream_Cursor_Input;
  notification_types_stream_cursor_value_input: Notification_Types_Stream_Cursor_Value_Input;
  notifications: Notifications;
  notifications_bool_exp: Notifications_Bool_Exp;
  notifications_order_by: Notifications_Order_By;
  notifications_stream_cursor_input: Notifications_Stream_Cursor_Input;
  notifications_stream_cursor_value_input: Notifications_Stream_Cursor_Value_Input;
  numeric: Scalars['numeric']['output'];
  numeric_comparison_exp: Numeric_Comparison_Exp;
  platforms: Platforms;
  platforms_bool_exp: Platforms_Bool_Exp;
  platforms_order_by: Platforms_Order_By;
  platforms_stream_cursor_input: Platforms_Stream_Cursor_Input;
  platforms_stream_cursor_value_input: Platforms_Stream_Cursor_Value_Input;
  privacy_settings: Privacy_Settings;
  privacy_settings_bool_exp: Privacy_Settings_Bool_Exp;
  privacy_settings_order_by: Privacy_Settings_Order_By;
  privacy_settings_stream_cursor_input: Privacy_Settings_Stream_Cursor_Input;
  privacy_settings_stream_cursor_value_input: Privacy_Settings_Stream_Cursor_Value_Input;
  prompt_answers: Prompt_Answers;
  prompt_answers_aggregate: Prompt_Answers_Aggregate;
  prompt_answers_aggregate_bool_exp: Prompt_Answers_Aggregate_Bool_Exp;
  prompt_answers_aggregate_bool_exp_count: Prompt_Answers_Aggregate_Bool_Exp_Count;
  prompt_answers_aggregate_fields: Prompt_Answers_Aggregate_Fields;
  prompt_answers_aggregate_order_by: Prompt_Answers_Aggregate_Order_By;
  prompt_answers_avg_fields: Prompt_Answers_Avg_Fields;
  prompt_answers_avg_order_by: Prompt_Answers_Avg_Order_By;
  prompt_answers_bool_exp: Prompt_Answers_Bool_Exp;
  prompt_answers_max_fields: Prompt_Answers_Max_Fields;
  prompt_answers_max_order_by: Prompt_Answers_Max_Order_By;
  prompt_answers_min_fields: Prompt_Answers_Min_Fields;
  prompt_answers_min_order_by: Prompt_Answers_Min_Order_By;
  prompt_answers_mutation_response: Prompt_Answers_Mutation_Response;
  prompt_answers_order_by: Prompt_Answers_Order_By;
  prompt_answers_pk_columns_input: Prompt_Answers_Pk_Columns_Input;
  prompt_answers_set_input: Prompt_Answers_Set_Input;
  prompt_answers_stddev_fields: Prompt_Answers_Stddev_Fields;
  prompt_answers_stddev_order_by: Prompt_Answers_Stddev_Order_By;
  prompt_answers_stddev_pop_fields: Prompt_Answers_Stddev_Pop_Fields;
  prompt_answers_stddev_pop_order_by: Prompt_Answers_Stddev_Pop_Order_By;
  prompt_answers_stddev_samp_fields: Prompt_Answers_Stddev_Samp_Fields;
  prompt_answers_stddev_samp_order_by: Prompt_Answers_Stddev_Samp_Order_By;
  prompt_answers_stream_cursor_input: Prompt_Answers_Stream_Cursor_Input;
  prompt_answers_stream_cursor_value_input: Prompt_Answers_Stream_Cursor_Value_Input;
  prompt_answers_sum_fields: Prompt_Answers_Sum_Fields;
  prompt_answers_sum_order_by: Prompt_Answers_Sum_Order_By;
  prompt_answers_updates: Prompt_Answers_Updates;
  prompt_answers_var_pop_fields: Prompt_Answers_Var_Pop_Fields;
  prompt_answers_var_pop_order_by: Prompt_Answers_Var_Pop_Order_By;
  prompt_answers_var_samp_fields: Prompt_Answers_Var_Samp_Fields;
  prompt_answers_var_samp_order_by: Prompt_Answers_Var_Samp_Order_By;
  prompt_answers_variance_fields: Prompt_Answers_Variance_Fields;
  prompt_answers_variance_order_by: Prompt_Answers_Variance_Order_By;
  prompt_books_summary: Prompt_Books_Summary;
  prompt_books_summary_aggregate_order_by: Prompt_Books_Summary_Aggregate_Order_By;
  prompt_books_summary_avg_order_by: Prompt_Books_Summary_Avg_Order_By;
  prompt_books_summary_bool_exp: Prompt_Books_Summary_Bool_Exp;
  prompt_books_summary_max_order_by: Prompt_Books_Summary_Max_Order_By;
  prompt_books_summary_min_order_by: Prompt_Books_Summary_Min_Order_By;
  prompt_books_summary_order_by: Prompt_Books_Summary_Order_By;
  prompt_books_summary_stddev_order_by: Prompt_Books_Summary_Stddev_Order_By;
  prompt_books_summary_stddev_pop_order_by: Prompt_Books_Summary_Stddev_Pop_Order_By;
  prompt_books_summary_stddev_samp_order_by: Prompt_Books_Summary_Stddev_Samp_Order_By;
  prompt_books_summary_stream_cursor_input: Prompt_Books_Summary_Stream_Cursor_Input;
  prompt_books_summary_stream_cursor_value_input: Prompt_Books_Summary_Stream_Cursor_Value_Input;
  prompt_books_summary_sum_order_by: Prompt_Books_Summary_Sum_Order_By;
  prompt_books_summary_var_pop_order_by: Prompt_Books_Summary_Var_Pop_Order_By;
  prompt_books_summary_var_samp_order_by: Prompt_Books_Summary_Var_Samp_Order_By;
  prompt_books_summary_variance_order_by: Prompt_Books_Summary_Variance_Order_By;
  prompts: Prompts;
  prompts_aggregate_order_by: Prompts_Aggregate_Order_By;
  prompts_avg_order_by: Prompts_Avg_Order_By;
  prompts_bool_exp: Prompts_Bool_Exp;
  prompts_max_order_by: Prompts_Max_Order_By;
  prompts_min_order_by: Prompts_Min_Order_By;
  prompts_mutation_response: Prompts_Mutation_Response;
  prompts_order_by: Prompts_Order_By;
  prompts_stddev_order_by: Prompts_Stddev_Order_By;
  prompts_stddev_pop_order_by: Prompts_Stddev_Pop_Order_By;
  prompts_stddev_samp_order_by: Prompts_Stddev_Samp_Order_By;
  prompts_stream_cursor_input: Prompts_Stream_Cursor_Input;
  prompts_stream_cursor_value_input: Prompts_Stream_Cursor_Value_Input;
  prompts_sum_order_by: Prompts_Sum_Order_By;
  prompts_var_pop_order_by: Prompts_Var_Pop_Order_By;
  prompts_var_samp_order_by: Prompts_Var_Samp_Order_By;
  prompts_variance_order_by: Prompts_Variance_Order_By;
  publishers: Publishers;
  publishers_bool_exp: Publishers_Bool_Exp;
  publishers_order_by: Publishers_Order_By;
  publishers_stream_cursor_input: Publishers_Stream_Cursor_Input;
  publishers_stream_cursor_value_input: Publishers_Stream_Cursor_Value_Input;
  query_root: {};
  reading_formats: Reading_Formats;
  reading_formats_bool_exp: Reading_Formats_Bool_Exp;
  reading_formats_order_by: Reading_Formats_Order_By;
  reading_formats_stream_cursor_input: Reading_Formats_Stream_Cursor_Input;
  reading_formats_stream_cursor_value_input: Reading_Formats_Stream_Cursor_Value_Input;
  reading_journals: Reading_Journals;
  reading_journals_aggregate_order_by: Reading_Journals_Aggregate_Order_By;
  reading_journals_avg_order_by: Reading_Journals_Avg_Order_By;
  reading_journals_bool_exp: Reading_Journals_Bool_Exp;
  reading_journals_max_order_by: Reading_Journals_Max_Order_By;
  reading_journals_min_order_by: Reading_Journals_Min_Order_By;
  reading_journals_order_by: Reading_Journals_Order_By;
  reading_journals_stddev_order_by: Reading_Journals_Stddev_Order_By;
  reading_journals_stddev_pop_order_by: Reading_Journals_Stddev_Pop_Order_By;
  reading_journals_stddev_samp_order_by: Reading_Journals_Stddev_Samp_Order_By;
  reading_journals_stream_cursor_input: Reading_Journals_Stream_Cursor_Input;
  reading_journals_stream_cursor_value_input: Reading_Journals_Stream_Cursor_Value_Input;
  reading_journals_sum_order_by: Reading_Journals_Sum_Order_By;
  reading_journals_summary: Reading_Journals_Summary;
  reading_journals_summary_bool_exp: Reading_Journals_Summary_Bool_Exp;
  reading_journals_summary_order_by: Reading_Journals_Summary_Order_By;
  reading_journals_summary_stream_cursor_input: Reading_Journals_Summary_Stream_Cursor_Input;
  reading_journals_summary_stream_cursor_value_input: Reading_Journals_Summary_Stream_Cursor_Value_Input;
  reading_journals_var_pop_order_by: Reading_Journals_Var_Pop_Order_By;
  reading_journals_var_samp_order_by: Reading_Journals_Var_Samp_Order_By;
  reading_journals_variance_order_by: Reading_Journals_Variance_Order_By;
  recommendations: Recommendations;
  recommendations_aggregate_order_by: Recommendations_Aggregate_Order_By;
  recommendations_avg_order_by: Recommendations_Avg_Order_By;
  recommendations_bool_exp: Recommendations_Bool_Exp;
  recommendations_max_order_by: Recommendations_Max_Order_By;
  recommendations_min_order_by: Recommendations_Min_Order_By;
  recommendations_order_by: Recommendations_Order_By;
  recommendations_stddev_order_by: Recommendations_Stddev_Order_By;
  recommendations_stddev_pop_order_by: Recommendations_Stddev_Pop_Order_By;
  recommendations_stddev_samp_order_by: Recommendations_Stddev_Samp_Order_By;
  recommendations_stream_cursor_input: Recommendations_Stream_Cursor_Input;
  recommendations_stream_cursor_value_input: Recommendations_Stream_Cursor_Value_Input;
  recommendations_sum_order_by: Recommendations_Sum_Order_By;
  recommendations_var_pop_order_by: Recommendations_Var_Pop_Order_By;
  recommendations_var_samp_order_by: Recommendations_Var_Samp_Order_By;
  recommendations_variance_order_by: Recommendations_Variance_Order_By;
  series: Series;
  series_bool_exp: Series_Bool_Exp;
  series_order_by: Series_Order_By;
  series_stream_cursor_input: Series_Stream_Cursor_Input;
  series_stream_cursor_value_input: Series_Stream_Cursor_Value_Input;
  smallint: Scalars['smallint']['output'];
  smallint_comparison_exp: Smallint_Comparison_Exp;
  subscription_root: {};
  tag_categories: Tag_Categories;
  tag_categories_bool_exp: Tag_Categories_Bool_Exp;
  tag_categories_order_by: Tag_Categories_Order_By;
  tag_categories_stream_cursor_input: Tag_Categories_Stream_Cursor_Input;
  tag_categories_stream_cursor_value_input: Tag_Categories_Stream_Cursor_Value_Input;
  taggable_counts: Taggable_Counts;
  taggable_counts_aggregate_order_by: Taggable_Counts_Aggregate_Order_By;
  taggable_counts_avg_order_by: Taggable_Counts_Avg_Order_By;
  taggable_counts_bool_exp: Taggable_Counts_Bool_Exp;
  taggable_counts_max_order_by: Taggable_Counts_Max_Order_By;
  taggable_counts_min_order_by: Taggable_Counts_Min_Order_By;
  taggable_counts_order_by: Taggable_Counts_Order_By;
  taggable_counts_stddev_order_by: Taggable_Counts_Stddev_Order_By;
  taggable_counts_stddev_pop_order_by: Taggable_Counts_Stddev_Pop_Order_By;
  taggable_counts_stddev_samp_order_by: Taggable_Counts_Stddev_Samp_Order_By;
  taggable_counts_stream_cursor_input: Taggable_Counts_Stream_Cursor_Input;
  taggable_counts_stream_cursor_value_input: Taggable_Counts_Stream_Cursor_Value_Input;
  taggable_counts_sum_order_by: Taggable_Counts_Sum_Order_By;
  taggable_counts_var_pop_order_by: Taggable_Counts_Var_Pop_Order_By;
  taggable_counts_var_samp_order_by: Taggable_Counts_Var_Samp_Order_By;
  taggable_counts_variance_order_by: Taggable_Counts_Variance_Order_By;
  taggings: Taggings;
  taggings_aggregate: Taggings_Aggregate;
  taggings_aggregate_bool_exp: Taggings_Aggregate_Bool_Exp;
  taggings_aggregate_bool_exp_bool_and: Taggings_Aggregate_Bool_Exp_Bool_And;
  taggings_aggregate_bool_exp_bool_or: Taggings_Aggregate_Bool_Exp_Bool_Or;
  taggings_aggregate_bool_exp_count: Taggings_Aggregate_Bool_Exp_Count;
  taggings_aggregate_fields: Taggings_Aggregate_Fields;
  taggings_aggregate_order_by: Taggings_Aggregate_Order_By;
  taggings_avg_fields: Taggings_Avg_Fields;
  taggings_avg_order_by: Taggings_Avg_Order_By;
  taggings_bool_exp: Taggings_Bool_Exp;
  taggings_max_fields: Taggings_Max_Fields;
  taggings_max_order_by: Taggings_Max_Order_By;
  taggings_min_fields: Taggings_Min_Fields;
  taggings_min_order_by: Taggings_Min_Order_By;
  taggings_order_by: Taggings_Order_By;
  taggings_stddev_fields: Taggings_Stddev_Fields;
  taggings_stddev_order_by: Taggings_Stddev_Order_By;
  taggings_stddev_pop_fields: Taggings_Stddev_Pop_Fields;
  taggings_stddev_pop_order_by: Taggings_Stddev_Pop_Order_By;
  taggings_stddev_samp_fields: Taggings_Stddev_Samp_Fields;
  taggings_stddev_samp_order_by: Taggings_Stddev_Samp_Order_By;
  taggings_stream_cursor_input: Taggings_Stream_Cursor_Input;
  taggings_stream_cursor_value_input: Taggings_Stream_Cursor_Value_Input;
  taggings_sum_fields: Taggings_Sum_Fields;
  taggings_sum_order_by: Taggings_Sum_Order_By;
  taggings_var_pop_fields: Taggings_Var_Pop_Fields;
  taggings_var_pop_order_by: Taggings_Var_Pop_Order_By;
  taggings_var_samp_fields: Taggings_Var_Samp_Fields;
  taggings_var_samp_order_by: Taggings_Var_Samp_Order_By;
  taggings_variance_fields: Taggings_Variance_Fields;
  taggings_variance_order_by: Taggings_Variance_Order_By;
  tags: Tags;
  tags_aggregate: Tags_Aggregate;
  tags_aggregate_bool_exp: Tags_Aggregate_Bool_Exp;
  tags_aggregate_bool_exp_count: Tags_Aggregate_Bool_Exp_Count;
  tags_aggregate_fields: Tags_Aggregate_Fields;
  tags_aggregate_order_by: Tags_Aggregate_Order_By;
  tags_avg_fields: Tags_Avg_Fields;
  tags_avg_order_by: Tags_Avg_Order_By;
  tags_bool_exp: Tags_Bool_Exp;
  tags_max_fields: Tags_Max_Fields;
  tags_max_order_by: Tags_Max_Order_By;
  tags_min_fields: Tags_Min_Fields;
  tags_min_order_by: Tags_Min_Order_By;
  tags_order_by: Tags_Order_By;
  tags_stddev_fields: Tags_Stddev_Fields;
  tags_stddev_order_by: Tags_Stddev_Order_By;
  tags_stddev_pop_fields: Tags_Stddev_Pop_Fields;
  tags_stddev_pop_order_by: Tags_Stddev_Pop_Order_By;
  tags_stddev_samp_fields: Tags_Stddev_Samp_Fields;
  tags_stddev_samp_order_by: Tags_Stddev_Samp_Order_By;
  tags_stream_cursor_input: Tags_Stream_Cursor_Input;
  tags_stream_cursor_value_input: Tags_Stream_Cursor_Value_Input;
  tags_sum_fields: Tags_Sum_Fields;
  tags_sum_order_by: Tags_Sum_Order_By;
  tags_var_pop_fields: Tags_Var_Pop_Fields;
  tags_var_pop_order_by: Tags_Var_Pop_Order_By;
  tags_var_samp_fields: Tags_Var_Samp_Fields;
  tags_var_samp_order_by: Tags_Var_Samp_Order_By;
  tags_variance_fields: Tags_Variance_Fields;
  tags_variance_order_by: Tags_Variance_Order_By;
  timestamp: Scalars['timestamp']['output'];
  timestamp_comparison_exp: Timestamp_Comparison_Exp;
  timestamptz: Scalars['timestamptz']['output'];
  timestamptz_comparison_exp: Timestamptz_Comparison_Exp;
  update_user_input: Update_User_Input;
  user_blocks: User_Blocks;
  user_blocks_aggregate_order_by: User_Blocks_Aggregate_Order_By;
  user_blocks_avg_order_by: User_Blocks_Avg_Order_By;
  user_blocks_bool_exp: User_Blocks_Bool_Exp;
  user_blocks_insert_input: User_Blocks_Insert_Input;
  user_blocks_max_order_by: User_Blocks_Max_Order_By;
  user_blocks_min_order_by: User_Blocks_Min_Order_By;
  user_blocks_mutation_response: User_Blocks_Mutation_Response;
  user_blocks_on_conflict: User_Blocks_On_Conflict;
  user_blocks_order_by: User_Blocks_Order_By;
  user_blocks_stddev_order_by: User_Blocks_Stddev_Order_By;
  user_blocks_stddev_pop_order_by: User_Blocks_Stddev_Pop_Order_By;
  user_blocks_stddev_samp_order_by: User_Blocks_Stddev_Samp_Order_By;
  user_blocks_stream_cursor_input: User_Blocks_Stream_Cursor_Input;
  user_blocks_stream_cursor_value_input: User_Blocks_Stream_Cursor_Value_Input;
  user_blocks_sum_order_by: User_Blocks_Sum_Order_By;
  user_blocks_var_pop_order_by: User_Blocks_Var_Pop_Order_By;
  user_blocks_var_samp_order_by: User_Blocks_Var_Samp_Order_By;
  user_blocks_variance_order_by: User_Blocks_Variance_Order_By;
  user_book_reads: User_Book_Reads;
  user_book_reads_aggregate: User_Book_Reads_Aggregate;
  user_book_reads_aggregate_bool_exp: User_Book_Reads_Aggregate_Bool_Exp;
  user_book_reads_aggregate_bool_exp_avg: User_Book_Reads_Aggregate_Bool_Exp_Avg;
  user_book_reads_aggregate_bool_exp_corr: User_Book_Reads_Aggregate_Bool_Exp_Corr;
  user_book_reads_aggregate_bool_exp_corr_arguments: User_Book_Reads_Aggregate_Bool_Exp_Corr_Arguments;
  user_book_reads_aggregate_bool_exp_count: User_Book_Reads_Aggregate_Bool_Exp_Count;
  user_book_reads_aggregate_bool_exp_covar_samp: User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp;
  user_book_reads_aggregate_bool_exp_covar_samp_arguments: User_Book_Reads_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  user_book_reads_aggregate_bool_exp_max: User_Book_Reads_Aggregate_Bool_Exp_Max;
  user_book_reads_aggregate_bool_exp_min: User_Book_Reads_Aggregate_Bool_Exp_Min;
  user_book_reads_aggregate_bool_exp_stddev_samp: User_Book_Reads_Aggregate_Bool_Exp_Stddev_Samp;
  user_book_reads_aggregate_bool_exp_sum: User_Book_Reads_Aggregate_Bool_Exp_Sum;
  user_book_reads_aggregate_bool_exp_var_samp: User_Book_Reads_Aggregate_Bool_Exp_Var_Samp;
  user_book_reads_aggregate_fields: User_Book_Reads_Aggregate_Fields;
  user_book_reads_aggregate_order_by: User_Book_Reads_Aggregate_Order_By;
  user_book_reads_avg_fields: User_Book_Reads_Avg_Fields;
  user_book_reads_avg_order_by: User_Book_Reads_Avg_Order_By;
  user_book_reads_bool_exp: User_Book_Reads_Bool_Exp;
  user_book_reads_max_fields: User_Book_Reads_Max_Fields;
  user_book_reads_max_order_by: User_Book_Reads_Max_Order_By;
  user_book_reads_min_fields: User_Book_Reads_Min_Fields;
  user_book_reads_min_order_by: User_Book_Reads_Min_Order_By;
  user_book_reads_order_by: User_Book_Reads_Order_By;
  user_book_reads_stddev_fields: User_Book_Reads_Stddev_Fields;
  user_book_reads_stddev_order_by: User_Book_Reads_Stddev_Order_By;
  user_book_reads_stddev_pop_fields: User_Book_Reads_Stddev_Pop_Fields;
  user_book_reads_stddev_pop_order_by: User_Book_Reads_Stddev_Pop_Order_By;
  user_book_reads_stddev_samp_fields: User_Book_Reads_Stddev_Samp_Fields;
  user_book_reads_stddev_samp_order_by: User_Book_Reads_Stddev_Samp_Order_By;
  user_book_reads_stream_cursor_input: User_Book_Reads_Stream_Cursor_Input;
  user_book_reads_stream_cursor_value_input: User_Book_Reads_Stream_Cursor_Value_Input;
  user_book_reads_sum_fields: User_Book_Reads_Sum_Fields;
  user_book_reads_sum_order_by: User_Book_Reads_Sum_Order_By;
  user_book_reads_var_pop_fields: User_Book_Reads_Var_Pop_Fields;
  user_book_reads_var_pop_order_by: User_Book_Reads_Var_Pop_Order_By;
  user_book_reads_var_samp_fields: User_Book_Reads_Var_Samp_Fields;
  user_book_reads_var_samp_order_by: User_Book_Reads_Var_Samp_Order_By;
  user_book_reads_variance_fields: User_Book_Reads_Variance_Fields;
  user_book_reads_variance_order_by: User_Book_Reads_Variance_Order_By;
  user_book_statuses: User_Book_Statuses;
  user_book_statuses_aggregate: User_Book_Statuses_Aggregate;
  user_book_statuses_aggregate_fields: User_Book_Statuses_Aggregate_Fields;
  user_book_statuses_avg_fields: User_Book_Statuses_Avg_Fields;
  user_book_statuses_bool_exp: User_Book_Statuses_Bool_Exp;
  user_book_statuses_max_fields: User_Book_Statuses_Max_Fields;
  user_book_statuses_min_fields: User_Book_Statuses_Min_Fields;
  user_book_statuses_order_by: User_Book_Statuses_Order_By;
  user_book_statuses_stddev_fields: User_Book_Statuses_Stddev_Fields;
  user_book_statuses_stddev_pop_fields: User_Book_Statuses_Stddev_Pop_Fields;
  user_book_statuses_stddev_samp_fields: User_Book_Statuses_Stddev_Samp_Fields;
  user_book_statuses_stream_cursor_input: User_Book_Statuses_Stream_Cursor_Input;
  user_book_statuses_stream_cursor_value_input: User_Book_Statuses_Stream_Cursor_Value_Input;
  user_book_statuses_sum_fields: User_Book_Statuses_Sum_Fields;
  user_book_statuses_var_pop_fields: User_Book_Statuses_Var_Pop_Fields;
  user_book_statuses_var_samp_fields: User_Book_Statuses_Var_Samp_Fields;
  user_book_statuses_variance_fields: User_Book_Statuses_Variance_Fields;
  user_books: User_Books;
  user_books_aggregate: User_Books_Aggregate;
  user_books_aggregate_bool_exp: User_Books_Aggregate_Bool_Exp;
  user_books_aggregate_bool_exp_avg: User_Books_Aggregate_Bool_Exp_Avg;
  user_books_aggregate_bool_exp_bool_and: User_Books_Aggregate_Bool_Exp_Bool_And;
  user_books_aggregate_bool_exp_bool_or: User_Books_Aggregate_Bool_Exp_Bool_Or;
  user_books_aggregate_bool_exp_corr: User_Books_Aggregate_Bool_Exp_Corr;
  user_books_aggregate_bool_exp_corr_arguments: User_Books_Aggregate_Bool_Exp_Corr_Arguments;
  user_books_aggregate_bool_exp_count: User_Books_Aggregate_Bool_Exp_Count;
  user_books_aggregate_bool_exp_covar_samp: User_Books_Aggregate_Bool_Exp_Covar_Samp;
  user_books_aggregate_bool_exp_covar_samp_arguments: User_Books_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  user_books_aggregate_bool_exp_max: User_Books_Aggregate_Bool_Exp_Max;
  user_books_aggregate_bool_exp_min: User_Books_Aggregate_Bool_Exp_Min;
  user_books_aggregate_bool_exp_stddev_samp: User_Books_Aggregate_Bool_Exp_Stddev_Samp;
  user_books_aggregate_bool_exp_sum: User_Books_Aggregate_Bool_Exp_Sum;
  user_books_aggregate_bool_exp_var_samp: User_Books_Aggregate_Bool_Exp_Var_Samp;
  user_books_aggregate_fields: User_Books_Aggregate_Fields;
  user_books_aggregate_order_by: User_Books_Aggregate_Order_By;
  user_books_avg_fields: User_Books_Avg_Fields;
  user_books_avg_order_by: User_Books_Avg_Order_By;
  user_books_bool_exp: User_Books_Bool_Exp;
  user_books_max_fields: User_Books_Max_Fields;
  user_books_max_order_by: User_Books_Max_Order_By;
  user_books_min_fields: User_Books_Min_Fields;
  user_books_min_order_by: User_Books_Min_Order_By;
  user_books_order_by: User_Books_Order_By;
  user_books_stddev_fields: User_Books_Stddev_Fields;
  user_books_stddev_order_by: User_Books_Stddev_Order_By;
  user_books_stddev_pop_fields: User_Books_Stddev_Pop_Fields;
  user_books_stddev_pop_order_by: User_Books_Stddev_Pop_Order_By;
  user_books_stddev_samp_fields: User_Books_Stddev_Samp_Fields;
  user_books_stddev_samp_order_by: User_Books_Stddev_Samp_Order_By;
  user_books_stream_cursor_input: User_Books_Stream_Cursor_Input;
  user_books_stream_cursor_value_input: User_Books_Stream_Cursor_Value_Input;
  user_books_sum_fields: User_Books_Sum_Fields;
  user_books_sum_order_by: User_Books_Sum_Order_By;
  user_books_var_pop_fields: User_Books_Var_Pop_Fields;
  user_books_var_pop_order_by: User_Books_Var_Pop_Order_By;
  user_books_var_samp_fields: User_Books_Var_Samp_Fields;
  user_books_var_samp_order_by: User_Books_Var_Samp_Order_By;
  user_books_variance_fields: User_Books_Variance_Fields;
  user_books_variance_order_by: User_Books_Variance_Order_By;
  user_flags: User_Flags;
  user_flags_aggregate_order_by: User_Flags_Aggregate_Order_By;
  user_flags_avg_order_by: User_Flags_Avg_Order_By;
  user_flags_bool_exp: User_Flags_Bool_Exp;
  user_flags_insert_input: User_Flags_Insert_Input;
  user_flags_max_order_by: User_Flags_Max_Order_By;
  user_flags_min_order_by: User_Flags_Min_Order_By;
  user_flags_mutation_response: User_Flags_Mutation_Response;
  user_flags_on_conflict: User_Flags_On_Conflict;
  user_flags_order_by: User_Flags_Order_By;
  user_flags_stddev_order_by: User_Flags_Stddev_Order_By;
  user_flags_stddev_pop_order_by: User_Flags_Stddev_Pop_Order_By;
  user_flags_stddev_samp_order_by: User_Flags_Stddev_Samp_Order_By;
  user_flags_stream_cursor_input: User_Flags_Stream_Cursor_Input;
  user_flags_stream_cursor_value_input: User_Flags_Stream_Cursor_Value_Input;
  user_flags_sum_order_by: User_Flags_Sum_Order_By;
  user_flags_var_pop_order_by: User_Flags_Var_Pop_Order_By;
  user_flags_var_samp_order_by: User_Flags_Var_Samp_Order_By;
  user_flags_variance_order_by: User_Flags_Variance_Order_By;
  user_referrals: User_Referrals;
  user_referrals_bool_exp: User_Referrals_Bool_Exp;
  user_referrals_order_by: User_Referrals_Order_By;
  user_referrals_stream_cursor_input: User_Referrals_Stream_Cursor_Input;
  user_referrals_stream_cursor_value_input: User_Referrals_Stream_Cursor_Value_Input;
  user_statuses: User_Statuses;
  user_statuses_bool_exp: User_Statuses_Bool_Exp;
  user_statuses_order_by: User_Statuses_Order_By;
  user_statuses_stream_cursor_input: User_Statuses_Stream_Cursor_Input;
  user_statuses_stream_cursor_value_input: User_Statuses_Stream_Cursor_Value_Input;
  users: Users;
  users_aggregate_by_created_at_date: Users_Aggregate_By_Created_At_Date;
  users_aggregate_by_created_at_date_bool_exp: Users_Aggregate_By_Created_At_Date_Bool_Exp;
  users_aggregate_by_created_at_date_order_by: Users_Aggregate_By_Created_At_Date_Order_By;
  users_aggregate_by_created_at_date_stream_cursor_input: Users_Aggregate_By_Created_At_Date_Stream_Cursor_Input;
  users_aggregate_by_created_at_date_stream_cursor_value_input: Users_Aggregate_By_Created_At_Date_Stream_Cursor_Value_Input;
  users_aggregate_order_by: Users_Aggregate_Order_By;
  users_avg_order_by: Users_Avg_Order_By;
  users_bool_exp: Users_Bool_Exp;
  users_max_order_by: Users_Max_Order_By;
  users_min_order_by: Users_Min_Order_By;
  users_order_by: Users_Order_By;
  users_stddev_order_by: Users_Stddev_Order_By;
  users_stddev_pop_order_by: Users_Stddev_Pop_Order_By;
  users_stddev_samp_order_by: Users_Stddev_Samp_Order_By;
  users_stream_cursor_input: Users_Stream_Cursor_Input;
  users_stream_cursor_value_input: Users_Stream_Cursor_Value_Input;
  users_sum_order_by: Users_Sum_Order_By;
  users_var_pop_order_by: Users_Var_Pop_Order_By;
  users_var_samp_order_by: Users_Var_Samp_Order_By;
  users_variance_order_by: Users_Variance_Order_By;
};

export type CachedDirectiveArgs = {
  refresh?: Scalars['Boolean']['input'];
  ttl?: Scalars['Int']['input'];
};

export type CachedDirectiveResolver<
  Result,
  Parent,
  ContextType = any,
  Args = CachedDirectiveArgs,
> = DirectiveResolverFn<Result, Parent, ContextType, Args>;

export type AuthorIdTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['AuthorIdType'] = ResolversParentTypes['AuthorIdType'],
> = {
  author?: Resolver<Maybe<ResolversTypes['authors']>, ParentType, ContextType>;
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type BasicTagTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['BasicTagType'] = ResolversParentTypes['BasicTagType'],
> = {
  category?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  categorySlug?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  spoiler?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  tag?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  tagSlug?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type BookIdTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['BookIdType'] = ResolversParentTypes['BookIdType'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type BookMappingIdTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['BookMappingIdType'] = ResolversParentTypes['BookMappingIdType'],
> = {
  book_mapping?: Resolver<Maybe<ResolversTypes['book_mappings']>, ParentType, ContextType>;
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type CharacterIdTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['CharacterIdType'] = ResolversParentTypes['CharacterIdType'],
> = {
  character?: Resolver<Maybe<ResolversTypes['characters']>, ParentType, ContextType>;
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type CollectionImportIdTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['CollectionImportIdType'] = ResolversParentTypes['CollectionImportIdType'],
> = {
  collection_import?: Resolver<
    Maybe<ResolversTypes['collection_imports']>,
    ParentType,
    ContextType
  >;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type CollectionImportResultIdTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['CollectionImportResultIdType'] = ResolversParentTypes['CollectionImportResultIdType'],
> = {
  collection_import_result?: Resolver<
    Maybe<ResolversTypes['collection_import_results']>,
    ParentType,
    ContextType
  >;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type DeleteFollowedPromptTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['DeleteFollowedPromptType'] = ResolversParentTypes['DeleteFollowedPromptType'],
> = {
  success?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type DeleteListTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['DeleteListType'] = ResolversParentTypes['DeleteListType'],
> = {
  success?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type DeleteReadingJournalOutputResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['DeleteReadingJournalOutput'] = ResolversParentTypes['DeleteReadingJournalOutput'],
> = {
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type DeleteReadingJournalsOutputResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['DeleteReadingJournalsOutput'] = ResolversParentTypes['DeleteReadingJournalsOutput'],
> = {
  ids?: Resolver<Maybe<Array<Maybe<ResolversTypes['Int']>>>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type EditionIdTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['EditionIdType'] = ResolversParentTypes['EditionIdType'],
> = {
  edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type FollowedListTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['FollowedListType'] = ResolversParentTypes['FollowedListType'],
> = {
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  followed_list?: Resolver<Maybe<ResolversTypes['followed_lists']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type FollowedPromptTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['FollowedPromptType'] = ResolversParentTypes['FollowedPromptType'],
> = {
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  followed_prompt?: Resolver<Maybe<ResolversTypes['followed_prompts']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type FollowedUserTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['FollowedUserType'] = ResolversParentTypes['FollowedUserType'],
> = {
  error?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  followed_user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  followed_users?: Resolver<Maybe<ResolversTypes['followed_users']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type GoalIdTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['GoalIdType'] = ResolversParentTypes['GoalIdType'],
> = {
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  goal?: Resolver<Maybe<ResolversTypes['goals']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ImageIdTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['ImageIdType'] = ResolversParentTypes['ImageIdType'],
> = {
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['images']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type InsertBlockOutputResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['InsertBlockOutput'] = ResolversParentTypes['InsertBlockOutput'],
> = {
  error?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_block?: Resolver<Maybe<ResolversTypes['user_blocks']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type LikeDeleteTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['LikeDeleteType'] = ResolversParentTypes['LikeDeleteType'],
> = {
  likes_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type LikeTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['LikeType'] = ResolversParentTypes['LikeType'],
> = {
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  like?: Resolver<Maybe<ResolversTypes['likes']>, ParentType, ContextType>;
  likes_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ListBookDeleteTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['ListBookDeleteType'] = ResolversParentTypes['ListBookDeleteType'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  list?: Resolver<Maybe<ResolversTypes['lists']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ListBookIdTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['ListBookIdType'] = ResolversParentTypes['ListBookIdType'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  list_book?: Resolver<Maybe<ResolversTypes['list_books']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ListDeleteTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['ListDeleteType'] = ResolversParentTypes['ListDeleteType'],
> = {
  success?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ListIdTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['ListIdType'] = ResolversParentTypes['ListIdType'],
> = {
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  list?: Resolver<Maybe<ResolversTypes['lists']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type NewBookIdTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['NewBookIdType'] = ResolversParentTypes['NewBookIdType'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type NewsletterStatusTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['NewsletterStatusType'] = ResolversParentTypes['NewsletterStatusType'],
> = {
  subscribed?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type OptionalEditionIdTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['OptionalEditionIdType'] = ResolversParentTypes['OptionalEditionIdType'],
> = {
  edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type PromptAnswerIdTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['PromptAnswerIdType'] = ResolversParentTypes['PromptAnswerIdType'],
> = {
  book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompt_answer?: Resolver<Maybe<ResolversTypes['prompt_answers']>, ParentType, ContextType>;
  prompt_book?: Resolver<Maybe<ResolversTypes['prompt_books_summary']>, ParentType, ContextType>;
  prompt_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type PromptIdTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['PromptIdType'] = ResolversParentTypes['PromptIdType'],
> = {
  error?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompt?: Resolver<Maybe<ResolversTypes['prompts']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type PublisherIdTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['PublisherIdType'] = ResolversParentTypes['PublisherIdType'],
> = {
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  publisher?: Resolver<Maybe<ResolversTypes['publishers']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ReadingJournalOutputResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['ReadingJournalOutput'] = ResolversParentTypes['ReadingJournalOutput'],
> = {
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reading_journal?: Resolver<Maybe<ResolversTypes['reading_journals']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ReferralTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['ReferralType'] = ResolversParentTypes['ReferralType'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ReportOutputResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['ReportOutput'] = ResolversParentTypes['ReportOutput'],
> = {
  complete?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  created?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type SearchOutputResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['SearchOutput'] = ResolversParentTypes['SearchOutput'],
> = {
  error?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  ids?: Resolver<Maybe<Array<Maybe<ResolversTypes['Int']>>>, ParentType, ContextType>;
  page?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  per_page?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  query?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  query_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  results?: Resolver<Maybe<ResolversTypes['jsonb']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type SeriesIdTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['SeriesIdType'] = ResolversParentTypes['SeriesIdType'],
> = {
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  series?: Resolver<Maybe<ResolversTypes['series']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type SubscriptionsTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['SubscriptionsType'] = ResolversParentTypes['SubscriptionsType'],
> = {
  billing_portal_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  membership?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  membership_ends_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  monthly_session_id?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  monthly_session_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  payment_system?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  yearly_session_id?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  yearly_session_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type SuccessTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['SuccessType'] = ResolversParentTypes['SuccessType'],
> = {
  success?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type TagsTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['TagsType'] = ResolversParentTypes['TagsType'],
> = {
  tags?: Resolver<Array<Maybe<ResolversTypes['BasicTagType']>>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type TrendingBookTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['TrendingBookType'] = ResolversParentTypes['TrendingBookType'],
> = {
  error?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  ids?: Resolver<Maybe<Array<Maybe<ResolversTypes['Int']>>>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type UserBookDeleteTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['UserBookDeleteType'] = ResolversParentTypes['UserBookDeleteType'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_book?: Resolver<Maybe<ResolversTypes['user_books']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type UserBookIdTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['UserBookIdType'] = ResolversParentTypes['UserBookIdType'],
> = {
  error?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_book?: Resolver<Maybe<ResolversTypes['user_books']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type UserBookReadIdTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['UserBookReadIdType'] = ResolversParentTypes['UserBookReadIdType'],
> = {
  error?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_book_read?: Resolver<Maybe<ResolversTypes['user_book_reads']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type UserBooksReadUpsertTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['UserBooksReadUpsertType'] = ResolversParentTypes['UserBooksReadUpsertType'],
> = {
  error?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_book?: Resolver<Maybe<ResolversTypes['user_books']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type UserIdTypeResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['UserIdType'] = ResolversParentTypes['UserIdType'],
> = {
  errors?: Resolver<Maybe<Array<Maybe<ResolversTypes['String']>>>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ValidateReceiptTypeResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['ValidateReceiptType'] = ResolversParentTypes['ValidateReceiptType'],
> = {
  result?: Resolver<ResolversTypes['jsonb'], ParentType, ContextType>;
  supporter?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ActivitiesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['activities'] = ResolversParentTypes['activities'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  data?: Resolver<ResolversTypes['jsonb'], ParentType, ContextType, Partial<ActivitiesDataArgs>>;
  event?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  followers?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<ActivitiesFollowersArgs>
  >;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  likes?: Resolver<
    Array<ResolversTypes['likes']>,
    ParentType,
    ContextType,
    Partial<ActivitiesLikesArgs>
  >;
  likes_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  object_type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  privacy_setting?: Resolver<ResolversTypes['privacy_settings'], ParentType, ContextType>;
  privacy_setting_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  uid?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Activities_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['activities_mutation_response'] = ResolversParentTypes['activities_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['activities']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type AuthorsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['authors'] = ResolversParentTypes['authors'],
> = {
  alias?: Resolver<
    Array<ResolversTypes['authors']>,
    ParentType,
    ContextType,
    Partial<AuthorsAliasArgs>
  >;
  alias_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  alternate_names?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<AuthorsAlternate_NamesArgs>
  >;
  bio?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  books_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  born_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  born_year?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  cached_image?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<AuthorsCached_ImageArgs>
  >;
  canonical?: Resolver<Maybe<ResolversTypes['authors']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  contributions?: Resolver<
    Array<ResolversTypes['contributions']>,
    ParentType,
    ContextType,
    Partial<AuthorsContributionsArgs>
  >;
  contributions_aggregate?: Resolver<
    ResolversTypes['contributions_aggregate'],
    ParentType,
    ContextType,
    Partial<AuthorsContributions_AggregateArgs>
  >;
  creator?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  death_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  death_year?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  gender_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  identifiers?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<AuthorsIdentifiersArgs>
  >;
  image?: Resolver<Maybe<ResolversTypes['images']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  is_bipoc?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  is_lgbtq?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  links?: Resolver<ResolversTypes['jsonb'], ParentType, ContextType, Partial<AuthorsLinksArgs>>;
  location?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  locked?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  name_personal?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  state?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  title?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  users_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface BigintScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['bigint'], any> {
  name: 'bigint';
}

export type Book_CategoriesResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_categories'] = ResolversParentTypes['book_categories'],
> = {
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_CharactersResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_characters'] = ResolversParentTypes['book_characters'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  character?: Resolver<Maybe<ResolversTypes['characters']>, ParentType, ContextType>;
  character_id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  only_mentioned?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  position?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  spoiler?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_CollectionsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_collections'] = ResolversParentTypes['book_collections'],
> = {
  book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  child_book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  position?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_MappingsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['book_mappings'] = ResolversParentTypes['book_mappings'],
> = {
  attempts?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  book?: Resolver<ResolversTypes['books'], ParentType, ContextType>;
  book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  dto_external?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<Book_MappingsDto_ExternalArgs>
  >;
  edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  external_data_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  external_id?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  loaded?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  loaded_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  normalized_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  platform?: Resolver<ResolversTypes['platforms'], ParentType, ContextType>;
  platform_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  state?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  verified?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  verified_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_SeriesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['book_series'] = ResolversParentTypes['book_series'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  details?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  featured?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  series?: Resolver<Maybe<ResolversTypes['series']>, ParentType, ContextType>;
  series_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_aggregate'] = ResolversParentTypes['book_series_aggregate'],
> = {
  aggregate?: Resolver<
    Maybe<ResolversTypes['book_series_aggregate_fields']>,
    ParentType,
    ContextType
  >;
  nodes?: Resolver<Array<ResolversTypes['book_series']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_aggregate_fields'] = ResolversParentTypes['book_series_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['book_series_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<Book_Series_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['book_series_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['book_series_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['book_series_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['book_series_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['book_series_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['book_series_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['book_series_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<
    Maybe<ResolversTypes['book_series_var_samp_fields']>,
    ParentType,
    ContextType
  >;
  variance?: Resolver<
    Maybe<ResolversTypes['book_series_variance_fields']>,
    ParentType,
    ContextType
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_avg_fields'] = ResolversParentTypes['book_series_avg_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_max_fields'] = ResolversParentTypes['book_series_max_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  details?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  series_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_min_fields'] = ResolversParentTypes['book_series_min_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  details?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  series_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_stddev_fields'] = ResolversParentTypes['book_series_stddev_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_stddev_pop_fields'] = ResolversParentTypes['book_series_stddev_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_stddev_samp_fields'] = ResolversParentTypes['book_series_stddev_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_sum_fields'] = ResolversParentTypes['book_series_sum_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  series_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_var_pop_fields'] = ResolversParentTypes['book_series_var_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_var_samp_fields'] = ResolversParentTypes['book_series_var_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_Series_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['book_series_variance_fields'] = ResolversParentTypes['book_series_variance_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Book_StatusesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['book_statuses'] = ResolversParentTypes['book_statuses'],
> = {
  books?: Resolver<
    Array<ResolversTypes['books']>,
    ParentType,
    ContextType,
    Partial<Book_StatusesBooksArgs>
  >;
  books_aggregate?: Resolver<
    ResolversTypes['books_aggregate'],
    ParentType,
    ContextType,
    Partial<Book_StatusesBooks_AggregateArgs>
  >;
  id?: Resolver<ResolversTypes['smallint'], ParentType, ContextType>;
  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type BooklesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['bookles'] = ResolversParentTypes['bookles'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type BooksResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['books'] = ResolversParentTypes['books'],
> = {
  activities_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  alternative_titles?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<BooksAlternative_TitlesArgs>
  >;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  book_category_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  book_characters?: Resolver<
    Array<ResolversTypes['book_characters']>,
    ParentType,
    ContextType,
    Partial<BooksBook_CharactersArgs>
  >;
  book_mappings?: Resolver<
    Array<ResolversTypes['book_mappings']>,
    ParentType,
    ContextType,
    Partial<BooksBook_MappingsArgs>
  >;
  book_series?: Resolver<
    Array<ResolversTypes['book_series']>,
    ParentType,
    ContextType,
    Partial<BooksBook_SeriesArgs>
  >;
  book_series_aggregate?: Resolver<
    ResolversTypes['book_series_aggregate'],
    ParentType,
    ContextType,
    Partial<BooksBook_Series_AggregateArgs>
  >;
  book_status?: Resolver<ResolversTypes['book_statuses'], ParentType, ContextType>;
  book_status_id?: Resolver<ResolversTypes['smallint'], ParentType, ContextType>;
  cached_contributors?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<BooksCached_ContributorsArgs>
  >;
  cached_featured_series?: Resolver<
    Maybe<ResolversTypes['jsonb']>,
    ParentType,
    ContextType,
    Partial<BooksCached_Featured_SeriesArgs>
  >;
  cached_header_image?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<BooksCached_Header_ImageArgs>
  >;
  cached_image?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<BooksCached_ImageArgs>
  >;
  cached_tags?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<BooksCached_TagsArgs>
  >;
  canonical?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  collection_import_results?: Resolver<
    Array<ResolversTypes['collection_import_results']>,
    ParentType,
    ContextType,
    Partial<BooksCollection_Import_ResultsArgs>
  >;
  compilation?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  contributions?: Resolver<
    Array<ResolversTypes['contributions']>,
    ParentType,
    ContextType,
    Partial<BooksContributionsArgs>
  >;
  contributions_aggregate?: Resolver<
    ResolversTypes['contributions_aggregate'],
    ParentType,
    ContextType,
    Partial<BooksContributions_AggregateArgs>
  >;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_audio_edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_cover_edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_ebook_edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_physical_edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  dto?: Resolver<Maybe<ResolversTypes['json']>, ParentType, ContextType, Partial<BooksDtoArgs>>;
  dto_combined?: Resolver<
    Maybe<ResolversTypes['json']>,
    ParentType,
    ContextType,
    Partial<BooksDto_CombinedArgs>
  >;
  dto_external?: Resolver<
    Maybe<ResolversTypes['json']>,
    ParentType,
    ContextType,
    Partial<BooksDto_ExternalArgs>
  >;
  editions?: Resolver<
    Array<ResolversTypes['editions']>,
    ParentType,
    ContextType,
    Partial<BooksEditionsArgs>
  >;
  editions_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  featured_book_series?: Resolver<Maybe<ResolversTypes['book_series']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  headline?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['images']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  images?: Resolver<
    Array<ResolversTypes['images']>,
    ParentType,
    ContextType,
    Partial<BooksImagesArgs>
  >;
  import_platform_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  journals_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  links?: Resolver<ResolversTypes['jsonb'], ParentType, ContextType, Partial<BooksLinksArgs>>;
  list_books?: Resolver<
    Array<ResolversTypes['list_books']>,
    ParentType,
    ContextType,
    Partial<BooksList_BooksArgs>
  >;
  list_books_aggregate?: Resolver<
    ResolversTypes['list_books_aggregate'],
    ParentType,
    ContextType,
    Partial<BooksList_Books_AggregateArgs>
  >;
  lists_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  locked?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompt_answers?: Resolver<
    Array<ResolversTypes['prompt_answers']>,
    ParentType,
    ContextType,
    Partial<BooksPrompt_AnswersArgs>
  >;
  prompt_answers_aggregate?: Resolver<
    ResolversTypes['prompt_answers_aggregate'],
    ParentType,
    ContextType,
    Partial<BooksPrompt_Answers_AggregateArgs>
  >;
  prompt_summaries?: Resolver<
    Array<ResolversTypes['prompt_books_summary']>,
    ParentType,
    ContextType,
    Partial<BooksPrompt_SummariesArgs>
  >;
  prompts_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  ratings_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  ratings_distribution?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<BooksRatings_DistributionArgs>
  >;
  recommendations?: Resolver<
    Array<ResolversTypes['recommendations']>,
    ParentType,
    ContextType,
    Partial<BooksRecommendationsArgs>
  >;
  release_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reviews_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  state?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  subtitle?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  taggable_counts?: Resolver<
    Array<ResolversTypes['taggable_counts']>,
    ParentType,
    ContextType,
    Partial<BooksTaggable_CountsArgs>
  >;
  taggings?: Resolver<
    Array<ResolversTypes['taggings']>,
    ParentType,
    ContextType,
    Partial<BooksTaggingsArgs>
  >;
  taggings_aggregate?: Resolver<
    ResolversTypes['taggings_aggregate'],
    ParentType,
    ContextType,
    Partial<BooksTaggings_AggregateArgs>
  >;
  title?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  user_added?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  user_books?: Resolver<
    Array<ResolversTypes['user_books']>,
    ParentType,
    ContextType,
    Partial<BooksUser_BooksArgs>
  >;
  user_books_aggregate?: Resolver<
    ResolversTypes['user_books_aggregate'],
    ParentType,
    ContextType,
    Partial<BooksUser_Books_AggregateArgs>
  >;
  users_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  users_read_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_aggregate'] = ResolversParentTypes['books_aggregate'],
> = {
  aggregate?: Resolver<Maybe<ResolversTypes['books_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['books']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_aggregate_fields'] = ResolversParentTypes['books_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['books_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<Books_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['books_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['books_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['books_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['books_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['books_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['books_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['books_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['books_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['books_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_avg_fields'] = ResolversParentTypes['books_avg_fields'],
> = {
  activities_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  editions_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  import_platform_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  journals_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  lists_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompts_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  ratings_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reviews_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_max_fields'] = ResolversParentTypes['books_max_fields'],
> = {
  activities_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  book_category_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  book_status_id?: Resolver<Maybe<ResolversTypes['smallint']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  editions_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  headline?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  import_platform_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  journals_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  lists_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompts_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  ratings_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  release_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reviews_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  state?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  subtitle?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  title?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  users_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  users_read_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_min_fields'] = ResolversParentTypes['books_min_fields'],
> = {
  activities_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  book_category_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  book_status_id?: Resolver<Maybe<ResolversTypes['smallint']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  editions_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  headline?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  import_platform_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  journals_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  lists_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompts_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  ratings_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  release_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reviews_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  state?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  subtitle?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  title?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  users_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  users_read_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_stddev_fields'] = ResolversParentTypes['books_stddev_fields'],
> = {
  activities_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  editions_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  import_platform_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  journals_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  lists_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompts_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  ratings_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reviews_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_stddev_pop_fields'] = ResolversParentTypes['books_stddev_pop_fields'],
> = {
  activities_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  editions_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  import_platform_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  journals_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  lists_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompts_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  ratings_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reviews_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_stddev_samp_fields'] = ResolversParentTypes['books_stddev_samp_fields'],
> = {
  activities_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  editions_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  import_platform_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  journals_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  lists_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompts_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  ratings_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reviews_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_sum_fields'] = ResolversParentTypes['books_sum_fields'],
> = {
  activities_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  book_category_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  book_status_id?: Resolver<Maybe<ResolversTypes['smallint']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  editions_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  import_platform_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  journals_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  lists_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompts_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  ratings_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reviews_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  users_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  users_read_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_var_pop_fields'] = ResolversParentTypes['books_var_pop_fields'],
> = {
  activities_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  editions_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  import_platform_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  journals_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  lists_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompts_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  ratings_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reviews_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_var_samp_fields'] = ResolversParentTypes['books_var_samp_fields'],
> = {
  activities_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  editions_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  import_platform_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  journals_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  lists_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompts_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  ratings_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reviews_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Books_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['books_variance_fields'] = ResolversParentTypes['books_variance_fields'],
> = {
  activities_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  book_status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_audio_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_cover_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_ebook_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  default_physical_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  editions_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  featured_book_series_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  header_image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  import_platform_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  journals_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  lists_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  literary_type_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompts_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  ratings_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reviews_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  users_read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type CharactersResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['characters'] = ResolversParentTypes['characters'],
> = {
  biography?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  book_characters?: Resolver<
    Array<ResolversTypes['book_characters']>,
    ParentType,
    ContextType,
    Partial<CharactersBook_CharactersArgs>
  >;
  books_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  cached_tags?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<CharactersCached_TagsArgs>
  >;
  canonical?: Resolver<Maybe<ResolversTypes['characters']>, ParentType, ContextType>;
  canonical_books_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  contributions?: Resolver<
    Array<ResolversTypes['contributions']>,
    ParentType,
    ContextType,
    Partial<CharactersContributionsArgs>
  >;
  contributions_aggregate?: Resolver<
    ResolversTypes['contributions_aggregate'],
    ParentType,
    ContextType,
    Partial<CharactersContributions_AggregateArgs>
  >;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  gender_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  has_disability?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  is_lgbtq?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  is_poc?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  locked?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  object_type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  openlibrary_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  slug?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  state?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface CitextScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['citext'], any> {
  name: 'citext';
}

export type Collection_Import_ResultsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['collection_import_results'] = ResolversParentTypes['collection_import_results'],
> = {
  author?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_found_method?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  collection_import?: Resolver<ResolversTypes['collection_imports'], ParentType, ContextType>;
  collection_import_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  contents?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<Collection_Import_ResultsContentsArgs>
  >;
  external_id?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  report?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  state?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  title?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Collection_Import_Results_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['collection_import_results_mutation_response'] = ResolversParentTypes['collection_import_results_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['collection_import_results']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Collection_ImportsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['collection_imports'] = ResolversParentTypes['collection_imports'],
> = {
  collection_import_results?: Resolver<
    Array<ResolversTypes['collection_import_results']>,
    ParentType,
    ContextType,
    Partial<Collection_ImportsCollection_Import_ResultsArgs>
  >;
  completed_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  contents_key?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  current_book?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  error_message?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  failure_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  override_date_read?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  override_ratings?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  override_shelves?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  platform_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  processed_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  reimport_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  started_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  state?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  success_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  tag_resolution?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  total_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ContributionsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['contributions'] = ResolversParentTypes['contributions'],
> = {
  author?: Resolver<Maybe<ResolversTypes['authors']>, ParentType, ContextType>;
  author_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  contributable_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  contributable_type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  contribution?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_aggregate'] = ResolversParentTypes['contributions_aggregate'],
> = {
  aggregate?: Resolver<
    Maybe<ResolversTypes['contributions_aggregate_fields']>,
    ParentType,
    ContextType
  >;
  nodes?: Resolver<Array<ResolversTypes['contributions']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_aggregate_fields'] = ResolversParentTypes['contributions_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['contributions_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<Contributions_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['contributions_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['contributions_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['contributions_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['contributions_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['contributions_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['contributions_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<
    Maybe<ResolversTypes['contributions_var_pop_fields']>,
    ParentType,
    ContextType
  >;
  var_samp?: Resolver<
    Maybe<ResolversTypes['contributions_var_samp_fields']>,
    ParentType,
    ContextType
  >;
  variance?: Resolver<
    Maybe<ResolversTypes['contributions_variance_fields']>,
    ParentType,
    ContextType
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_avg_fields'] = ResolversParentTypes['contributions_avg_fields'],
> = {
  author_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  contributable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_max_fields'] = ResolversParentTypes['contributions_max_fields'],
> = {
  author_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  contributable_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  contributable_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  contribution?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_min_fields'] = ResolversParentTypes['contributions_min_fields'],
> = {
  author_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  contributable_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  contributable_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  contribution?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_stddev_fields'] = ResolversParentTypes['contributions_stddev_fields'],
> = {
  author_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  contributable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_stddev_pop_fields'] = ResolversParentTypes['contributions_stddev_pop_fields'],
> = {
  author_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  contributable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_stddev_samp_fields'] = ResolversParentTypes['contributions_stddev_samp_fields'],
> = {
  author_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  contributable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_sum_fields'] = ResolversParentTypes['contributions_sum_fields'],
> = {
  author_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  contributable_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_var_pop_fields'] = ResolversParentTypes['contributions_var_pop_fields'],
> = {
  author_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  contributable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_var_samp_fields'] = ResolversParentTypes['contributions_var_samp_fields'],
> = {
  author_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  contributable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Contributions_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['contributions_variance_fields'] = ResolversParentTypes['contributions_variance_fields'],
> = {
  author_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  contributable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type CountriesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['countries'] = ResolversParentTypes['countries'],
> = {
  code2?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  code3?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  editions?: Resolver<
    Array<ResolversTypes['editions']>,
    ParentType,
    ContextType,
    Partial<CountriesEditionsArgs>
  >;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  intermediate_region?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  intermediate_region_code?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  iso_3166?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  phone_code?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  region?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  region_code?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  sub_region?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  sub_region_code?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface DateScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['date'], any> {
  name: 'date';
}

export type EditionsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['editions'] = ResolversParentTypes['editions'],
> = {
  alternative_titles?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<EditionsAlternative_TitlesArgs>
  >;
  asin?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  audio_seconds?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  book?: Resolver<ResolversTypes['books'], ParentType, ContextType>;
  book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  book_mappings?: Resolver<
    Array<ResolversTypes['book_mappings']>,
    ParentType,
    ContextType,
    Partial<EditionsBook_MappingsArgs>
  >;
  cached_contributors?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<EditionsCached_ContributorsArgs>
  >;
  cached_image?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<EditionsCached_ImageArgs>
  >;
  cached_tags?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<EditionsCached_TagsArgs>
  >;
  compilation?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  contributions?: Resolver<
    Array<ResolversTypes['contributions']>,
    ParentType,
    ContextType,
    Partial<EditionsContributionsArgs>
  >;
  contributions_aggregate?: Resolver<
    ResolversTypes['contributions_aggregate'],
    ParentType,
    ContextType,
    Partial<EditionsContributions_AggregateArgs>
  >;
  country?: Resolver<Maybe<ResolversTypes['countries']>, ParentType, ContextType>;
  country_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  created_by_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  dto?: Resolver<ResolversTypes['json'], ParentType, ContextType, Partial<EditionsDtoArgs>>;
  dto_combined?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<EditionsDto_CombinedArgs>
  >;
  dto_external?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<EditionsDto_ExternalArgs>
  >;
  edition_format?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  edition_information?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  identifiers?: Resolver<
    Maybe<ResolversTypes['jsonb']>,
    ParentType,
    ContextType,
    Partial<EditionsIdentifiersArgs>
  >;
  image?: Resolver<Maybe<ResolversTypes['images']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  images?: Resolver<
    Array<ResolversTypes['images']>,
    ParentType,
    ContextType,
    Partial<EditionsImagesArgs>
  >;
  isbn_10?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  isbn_13?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  language?: Resolver<Maybe<ResolversTypes['languages']>, ParentType, ContextType>;
  language_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  list_books?: Resolver<
    Array<ResolversTypes['list_books']>,
    ParentType,
    ContextType,
    Partial<EditionsList_BooksArgs>
  >;
  list_books_aggregate?: Resolver<
    ResolversTypes['list_books_aggregate'],
    ParentType,
    ContextType,
    Partial<EditionsList_Books_AggregateArgs>
  >;
  lists_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  locked?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  normalized_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  object_type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  pages?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  physical_format?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  physical_information?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  publisher?: Resolver<Maybe<ResolversTypes['publishers']>, ParentType, ContextType>;
  publisher_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  reading_format?: Resolver<Maybe<ResolversTypes['reading_formats']>, ParentType, ContextType>;
  reading_format_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  release_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  release_year?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  score?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  source?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  state?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  subtitle?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  title?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  user_added?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  users_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  users_read_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Flag_StatusesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['flag_statuses'] = ResolversParentTypes['flag_statuses'],
> = {
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  status?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  user_flags?: Resolver<
    Array<ResolversTypes['user_flags']>,
    ParentType,
    ContextType,
    Partial<Flag_StatusesUser_FlagsArgs>
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface Float8ScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['float8'], any> {
  name: 'float8';
}

export type Followed_ListsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_lists'] = ResolversParentTypes['followed_lists'],
> = {
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  list?: Resolver<ResolversTypes['lists'], ParentType, ContextType>;
  list_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_PromptsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_prompts'] = ResolversParentTypes['followed_prompts'],
> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  order?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  prompt?: Resolver<ResolversTypes['prompts'], ParentType, ContextType>;
  prompt_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_Prompts_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_prompts_mutation_response'] = ResolversParentTypes['followed_prompts_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['followed_prompts']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_BooksResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books'] = ResolversParentTypes['followed_user_books'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  follower_user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_book?: Resolver<Maybe<ResolversTypes['user_books']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_aggregate'] = ResolversParentTypes['followed_user_books_aggregate'],
> = {
  aggregate?: Resolver<
    Maybe<ResolversTypes['followed_user_books_aggregate_fields']>,
    ParentType,
    ContextType
  >;
  nodes?: Resolver<Array<ResolversTypes['followed_user_books']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_aggregate_fields'] = ResolversParentTypes['followed_user_books_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['followed_user_books_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<Followed_User_Books_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['followed_user_books_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['followed_user_books_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<
    Maybe<ResolversTypes['followed_user_books_stddev_fields']>,
    ParentType,
    ContextType
  >;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['followed_user_books_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['followed_user_books_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['followed_user_books_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<
    Maybe<ResolversTypes['followed_user_books_var_pop_fields']>,
    ParentType,
    ContextType
  >;
  var_samp?: Resolver<
    Maybe<ResolversTypes['followed_user_books_var_samp_fields']>,
    ParentType,
    ContextType
  >;
  variance?: Resolver<
    Maybe<ResolversTypes['followed_user_books_variance_fields']>,
    ParentType,
    ContextType
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_avg_fields'] = ResolversParentTypes['followed_user_books_avg_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_max_fields'] = ResolversParentTypes['followed_user_books_max_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_min_fields'] = ResolversParentTypes['followed_user_books_min_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_stddev_fields'] = ResolversParentTypes['followed_user_books_stddev_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_stddev_pop_fields'] = ResolversParentTypes['followed_user_books_stddev_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_stddev_samp_fields'] = ResolversParentTypes['followed_user_books_stddev_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_sum_fields'] = ResolversParentTypes['followed_user_books_sum_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_var_pop_fields'] = ResolversParentTypes['followed_user_books_var_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_var_samp_fields'] = ResolversParentTypes['followed_user_books_var_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_User_Books_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_user_books_variance_fields'] = ResolversParentTypes['followed_user_books_variance_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  follower_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_UsersResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_users'] = ResolversParentTypes['followed_users'],
> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  followed_user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  followed_user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Followed_Users_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['followed_users_mutation_response'] = ResolversParentTypes['followed_users_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['followed_users']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_BooksResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books'] = ResolversParentTypes['following_user_books'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  following_user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_book?: Resolver<Maybe<ResolversTypes['user_books']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_aggregate'] = ResolversParentTypes['following_user_books_aggregate'],
> = {
  aggregate?: Resolver<
    Maybe<ResolversTypes['following_user_books_aggregate_fields']>,
    ParentType,
    ContextType
  >;
  nodes?: Resolver<Array<ResolversTypes['following_user_books']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_aggregate_fields'] = ResolversParentTypes['following_user_books_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['following_user_books_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<Following_User_Books_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['following_user_books_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['following_user_books_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<
    Maybe<ResolversTypes['following_user_books_stddev_fields']>,
    ParentType,
    ContextType
  >;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['following_user_books_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['following_user_books_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['following_user_books_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<
    Maybe<ResolversTypes['following_user_books_var_pop_fields']>,
    ParentType,
    ContextType
  >;
  var_samp?: Resolver<
    Maybe<ResolversTypes['following_user_books_var_samp_fields']>,
    ParentType,
    ContextType
  >;
  variance?: Resolver<
    Maybe<ResolversTypes['following_user_books_variance_fields']>,
    ParentType,
    ContextType
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_avg_fields'] = ResolversParentTypes['following_user_books_avg_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_max_fields'] = ResolversParentTypes['following_user_books_max_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_min_fields'] = ResolversParentTypes['following_user_books_min_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_stddev_fields'] = ResolversParentTypes['following_user_books_stddev_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_stddev_pop_fields'] = ResolversParentTypes['following_user_books_stddev_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_stddev_samp_fields'] = ResolversParentTypes['following_user_books_stddev_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_sum_fields'] = ResolversParentTypes['following_user_books_sum_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_var_pop_fields'] = ResolversParentTypes['following_user_books_var_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_var_samp_fields'] = ResolversParentTypes['following_user_books_var_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Following_User_Books_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['following_user_books_variance_fields'] = ResolversParentTypes['following_user_books_variance_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followed_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type GoalsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['goals'] = ResolversParentTypes['goals'],
> = {
  archived?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  completed_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  conditions?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<GoalsConditionsArgs>
  >;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  end_date?: Resolver<ResolversTypes['date'], ParentType, ContextType>;
  followers?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<GoalsFollowersArgs>
  >;
  goal?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  metric?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  progress?: Resolver<ResolversTypes['numeric'], ParentType, ContextType>;
  start_date?: Resolver<ResolversTypes['date'], ParentType, ContextType>;
  state?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Goals_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['goals_mutation_response'] = ResolversParentTypes['goals_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['goals']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ImagesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['images'] = ResolversParentTypes['images'],
> = {
  color?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  colors?: Resolver<
    Maybe<ResolversTypes['jsonb']>,
    ParentType,
    ContextType,
    Partial<ImagesColorsArgs>
  >;
  height?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  imageable_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  imageable_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  ratio?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  width?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface JsonScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['json'], any> {
  name: 'json';
}

export interface JsonbScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['jsonb'], any> {
  name: 'jsonb';
}

export type LanguagesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['languages'] = ResolversParentTypes['languages'],
> = {
  code2?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  code3?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  language?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type LikesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['likes'] = ResolversParentTypes['likes'],
> = {
  activity?: Resolver<Maybe<ResolversTypes['activities']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  followers?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<LikesFollowersArgs>
  >;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  likeable_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  likeable_type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  list?: Resolver<Maybe<ResolversTypes['lists']>, ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_book?: Resolver<Maybe<ResolversTypes['user_books']>, ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_BooksResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['list_books'] = ResolversParentTypes['list_books'],
> = {
  book?: Resolver<ResolversTypes['books'], ParentType, ContextType>;
  book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  date_added?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  imported?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  list?: Resolver<ResolversTypes['lists'], ParentType, ContextType>;
  list_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  merged_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reason?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  user_books?: Resolver<
    Array<ResolversTypes['user_books']>,
    ParentType,
    ContextType,
    Partial<List_BooksUser_BooksArgs>
  >;
  user_books_aggregate?: Resolver<
    ResolversTypes['user_books_aggregate'],
    ParentType,
    ContextType,
    Partial<List_BooksUser_Books_AggregateArgs>
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_aggregate'] = ResolversParentTypes['list_books_aggregate'],
> = {
  aggregate?: Resolver<
    Maybe<ResolversTypes['list_books_aggregate_fields']>,
    ParentType,
    ContextType
  >;
  nodes?: Resolver<Array<ResolversTypes['list_books']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_aggregate_fields'] = ResolversParentTypes['list_books_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['list_books_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<List_Books_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['list_books_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['list_books_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['list_books_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['list_books_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['list_books_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['list_books_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['list_books_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['list_books_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['list_books_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_avg_fields'] = ResolversParentTypes['list_books_avg_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_max_fields'] = ResolversParentTypes['list_books_max_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  date_added?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  merged_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reason?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_min_fields'] = ResolversParentTypes['list_books_min_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  date_added?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  merged_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reason?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_mutation_response'] = ResolversParentTypes['list_books_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['list_books']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_stddev_fields'] = ResolversParentTypes['list_books_stddev_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_stddev_pop_fields'] = ResolversParentTypes['list_books_stddev_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_stddev_samp_fields'] = ResolversParentTypes['list_books_stddev_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_sum_fields'] = ResolversParentTypes['list_books_sum_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_var_pop_fields'] = ResolversParentTypes['list_books_var_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_var_samp_fields'] = ResolversParentTypes['list_books_var_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type List_Books_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['list_books_variance_fields'] = ResolversParentTypes['list_books_variance_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  list_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  position?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type ListsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['lists'] = ResolversParentTypes['lists'],
> = {
  books_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  default_view?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  featured?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  featured_profile?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  followed_lists?: Resolver<
    Array<ResolversTypes['followed_lists']>,
    ParentType,
    ContextType,
    Partial<ListsFollowed_ListsArgs>
  >;
  followers?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<ListsFollowersArgs>
  >;
  followers_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  imported?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  likes?: Resolver<
    Array<ResolversTypes['likes']>,
    ParentType,
    ContextType,
    Partial<ListsLikesArgs>
  >;
  likes_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  list_books?: Resolver<
    Array<ResolversTypes['list_books']>,
    ParentType,
    ContextType,
    Partial<ListsList_BooksArgs>
  >;
  list_books_aggregate?: Resolver<
    ResolversTypes['list_books_aggregate'],
    ParentType,
    ContextType,
    Partial<ListsList_Books_AggregateArgs>
  >;
  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  object_type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  privacy_setting?: Resolver<ResolversTypes['privacy_settings'], ParentType, ContextType>;
  privacy_setting_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  public?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  ranked?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_aggregate'] = ResolversParentTypes['lists_aggregate'],
> = {
  aggregate?: Resolver<Maybe<ResolversTypes['lists_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['lists']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_aggregate_fields'] = ResolversParentTypes['lists_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['lists_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<Lists_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['lists_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['lists_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['lists_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['lists_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['lists_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['lists_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['lists_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['lists_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['lists_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_avg_fields'] = ResolversParentTypes['lists_avg_fields'],
> = {
  books_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followers_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_max_fields'] = ResolversParentTypes['lists_max_fields'],
> = {
  books_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  default_view?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  followers_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  object_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_min_fields'] = ResolversParentTypes['lists_min_fields'],
> = {
  books_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  default_view?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  followers_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  object_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_stddev_fields'] = ResolversParentTypes['lists_stddev_fields'],
> = {
  books_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followers_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_stddev_pop_fields'] = ResolversParentTypes['lists_stddev_pop_fields'],
> = {
  books_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followers_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_stddev_samp_fields'] = ResolversParentTypes['lists_stddev_samp_fields'],
> = {
  books_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followers_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_sum_fields'] = ResolversParentTypes['lists_sum_fields'],
> = {
  books_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  followers_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_var_pop_fields'] = ResolversParentTypes['lists_var_pop_fields'],
> = {
  books_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followers_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_var_samp_fields'] = ResolversParentTypes['lists_var_samp_fields'],
> = {
  books_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followers_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Lists_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['lists_variance_fields'] = ResolversParentTypes['lists_variance_fields'],
> = {
  books_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  followers_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Mutation_RootResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['mutation_root'] = ResolversParentTypes['mutation_root'],
> = {
  book_mapping_normalize?: Resolver<
    Maybe<ResolversTypes['BookMappingIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootBook_Mapping_NormalizeArgs, 'deep' | 'id'>
  >;
  book_normalize?: Resolver<
    Maybe<ResolversTypes['BookIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootBook_NormalizeArgs, 'id'>
  >;
  collection_import_result_reimport?: Resolver<
    Maybe<ResolversTypes['CollectionImportResultIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootCollection_Import_Result_ReimportArgs, 'id'>
  >;
  collection_import_retry?: Resolver<
    Maybe<ResolversTypes['CollectionImportIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootCollection_Import_RetryArgs, 'id'>
  >;
  delete_activities?: Resolver<
    Maybe<ResolversTypes['activities_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_ActivitiesArgs, 'where'>
  >;
  delete_activities_by_pk?: Resolver<
    Maybe<ResolversTypes['activities']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Activities_By_PkArgs, 'id'>
  >;
  delete_book_mapping?: Resolver<
    Maybe<ResolversTypes['BookMappingIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Book_MappingArgs, 'id'>
  >;
  delete_followed_list?: Resolver<
    Maybe<ResolversTypes['DeleteListType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Followed_ListArgs, 'list_id'>
  >;
  delete_followed_prompt?: Resolver<
    Maybe<ResolversTypes['DeleteFollowedPromptType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Followed_PromptArgs, 'prompt_id'>
  >;
  delete_followed_prompts?: Resolver<
    Maybe<ResolversTypes['followed_prompts_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Followed_PromptsArgs, 'where'>
  >;
  delete_followed_prompts_by_pk?: Resolver<
    Maybe<ResolversTypes['followed_prompts']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Followed_Prompts_By_PkArgs, 'id'>
  >;
  delete_followed_user?: Resolver<
    Maybe<ResolversTypes['FollowedUserType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Followed_UserArgs, 'user_id'>
  >;
  delete_followed_users?: Resolver<
    Maybe<ResolversTypes['followed_users_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Followed_UsersArgs, 'where'>
  >;
  delete_followed_users_by_pk?: Resolver<
    Maybe<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Followed_Users_By_PkArgs, 'id'>
  >;
  delete_goals?: Resolver<
    Maybe<ResolversTypes['goals_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_GoalsArgs, 'where'>
  >;
  delete_goals_by_pk?: Resolver<
    Maybe<ResolversTypes['goals']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Goals_By_PkArgs, 'id'>
  >;
  delete_like?: Resolver<
    Maybe<ResolversTypes['LikeDeleteType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_LikeArgs, 'likeable_id' | 'likeable_type'>
  >;
  delete_list?: Resolver<
    Maybe<ResolversTypes['ListDeleteType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_ListArgs, 'id'>
  >;
  delete_list_book?: Resolver<
    Maybe<ResolversTypes['ListBookDeleteType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_List_BookArgs, 'id'>
  >;
  delete_prompt_answer?: Resolver<
    Maybe<ResolversTypes['PromptAnswerIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Prompt_AnswerArgs, 'id'>
  >;
  delete_prompts?: Resolver<
    Maybe<ResolversTypes['prompts_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_PromptsArgs, 'where'>
  >;
  delete_prompts_by_pk?: Resolver<
    Maybe<ResolversTypes['prompts']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Prompts_By_PkArgs, 'id'>
  >;
  delete_reading_journal?: Resolver<
    Maybe<ResolversTypes['DeleteReadingJournalOutput']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Reading_JournalArgs, 'id'>
  >;
  delete_reading_journals_for_book?: Resolver<
    Maybe<ResolversTypes['DeleteReadingJournalsOutput']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_Reading_Journals_For_BookArgs, 'book_id'>
  >;
  delete_user_blocks?: Resolver<
    Maybe<ResolversTypes['user_blocks_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_User_BlocksArgs, 'where'>
  >;
  delete_user_blocks_by_pk?: Resolver<
    Maybe<ResolversTypes['user_blocks']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_User_Blocks_By_PkArgs, 'id'>
  >;
  delete_user_book?: Resolver<
    Maybe<ResolversTypes['UserBookDeleteType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_User_BookArgs, 'id'>
  >;
  delete_user_book_read?: Resolver<
    Maybe<ResolversTypes['UserBookReadIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootDelete_User_Book_ReadArgs, 'id'>
  >;
  edition_normalize?: Resolver<
    Maybe<ResolversTypes['EditionIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootEdition_NormalizeArgs, 'deep' | 'id'>
  >;
  edition_owned?: Resolver<
    Maybe<ResolversTypes['ListBookIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootEdition_OwnedArgs, 'id'>
  >;
  email_user_delete_confirmation?: Resolver<
    Maybe<ResolversTypes['SuccessType']>,
    ParentType,
    ContextType
  >;
  insert_author?: Resolver<
    Maybe<ResolversTypes['AuthorIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_AuthorArgs, 'object'>
  >;
  insert_block?: Resolver<
    Maybe<ResolversTypes['InsertBlockOutput']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_BlockArgs, 'blocked_user_id'>
  >;
  insert_book?: Resolver<
    Maybe<ResolversTypes['OptionalEditionIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_BookArgs, 'edition'>
  >;
  insert_book_mapping?: Resolver<
    Maybe<ResolversTypes['BookMappingIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_Book_MappingArgs, 'object'>
  >;
  insert_character?: Resolver<
    Maybe<ResolversTypes['CharacterIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_CharacterArgs, 'character'>
  >;
  insert_collection_import?: Resolver<
    Maybe<ResolversTypes['CollectionImportIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_Collection_ImportArgs, 'object'>
  >;
  insert_edition?: Resolver<
    Maybe<ResolversTypes['EditionIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_EditionArgs, 'book_id' | 'edition'>
  >;
  insert_followed_prompts?: Resolver<
    Maybe<ResolversTypes['followed_prompts_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_Followed_PromptsArgs, 'objects'>
  >;
  insert_followed_prompts_one?: Resolver<
    Maybe<ResolversTypes['followed_prompts']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_Followed_Prompts_OneArgs, 'object'>
  >;
  insert_followed_user?: Resolver<
    Maybe<ResolversTypes['FollowedUserType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_Followed_UserArgs, 'user_id'>
  >;
  insert_goal?: Resolver<
    Maybe<ResolversTypes['GoalIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_GoalArgs, 'object'>
  >;
  insert_image?: Resolver<
    Maybe<ResolversTypes['ImageIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_ImageArgs, 'image'>
  >;
  insert_list?: Resolver<
    Maybe<ResolversTypes['ListIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_ListArgs, 'object'>
  >;
  insert_list_book?: Resolver<
    Maybe<ResolversTypes['ListBookIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_List_BookArgs, 'object'>
  >;
  insert_notification_settings?: Resolver<
    Maybe<ResolversTypes['notification_settings_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_Notification_SettingsArgs, 'objects'>
  >;
  insert_notification_settings_one?: Resolver<
    Maybe<ResolversTypes['notification_settings']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_Notification_Settings_OneArgs, 'object'>
  >;
  insert_prompt?: Resolver<
    Maybe<ResolversTypes['PromptIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_PromptArgs, 'object'>
  >;
  insert_prompt_answer?: Resolver<
    Maybe<ResolversTypes['PromptAnswerIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_Prompt_AnswerArgs, 'object'>
  >;
  insert_publisher?: Resolver<
    Maybe<ResolversTypes['PublisherIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_PublisherArgs, 'publisher'>
  >;
  insert_reading_journal?: Resolver<
    Maybe<ResolversTypes['ReadingJournalOutput']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_Reading_JournalArgs, 'object'>
  >;
  insert_report?: Resolver<
    Maybe<ResolversTypes['ReportOutput']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_ReportArgs, 'report'>
  >;
  insert_serie?: Resolver<
    Maybe<ResolversTypes['SeriesIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_SerieArgs, 'object'>
  >;
  insert_user?: Resolver<
    Maybe<ResolversTypes['UserIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_UserArgs, 'user'>
  >;
  insert_user_blocks?: Resolver<
    Maybe<ResolversTypes['user_blocks_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_User_BlocksArgs, 'objects'>
  >;
  insert_user_blocks_one?: Resolver<
    Maybe<ResolversTypes['user_blocks']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_User_Blocks_OneArgs, 'object'>
  >;
  insert_user_book?: Resolver<
    Maybe<ResolversTypes['UserBookIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_User_BookArgs, 'object'>
  >;
  insert_user_book_read?: Resolver<
    Maybe<ResolversTypes['UserBookReadIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_User_Book_ReadArgs, 'user_book_id' | 'user_book_read'>
  >;
  insert_user_flags?: Resolver<
    Maybe<ResolversTypes['user_flags_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_User_FlagsArgs, 'objects'>
  >;
  insert_user_flags_one?: Resolver<
    Maybe<ResolversTypes['user_flags']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootInsert_User_Flags_OneArgs, 'object'>
  >;
  receipt_validate?: Resolver<
    Maybe<ResolversTypes['ValidateReceiptType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootReceipt_ValidateArgs, 'payment_system_id' | 'receipt'>
  >;
  update_author?: Resolver<
    Maybe<ResolversTypes['AuthorIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_AuthorArgs, 'author' | 'id'>
  >;
  update_book?: Resolver<
    Maybe<ResolversTypes['BookIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_BookArgs, 'book' | 'id'>
  >;
  update_character?: Resolver<
    Maybe<ResolversTypes['CharacterIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_CharacterArgs, 'character' | 'id'>
  >;
  update_collection_import_results?: Resolver<
    Maybe<ResolversTypes['collection_import_results_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Collection_Import_ResultsArgs, 'where'>
  >;
  update_collection_import_results_by_pk?: Resolver<
    Maybe<ResolversTypes['collection_import_results']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Collection_Import_Results_By_PkArgs, 'pk_columns'>
  >;
  update_collection_import_results_many?: Resolver<
    Maybe<Array<Maybe<ResolversTypes['collection_import_results_mutation_response']>>>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Collection_Import_Results_ManyArgs, 'updates'>
  >;
  update_edition?: Resolver<
    Maybe<ResolversTypes['EditionIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_EditionArgs, 'edition' | 'id'>
  >;
  update_followed_prompts?: Resolver<
    Maybe<ResolversTypes['followed_prompts_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Followed_PromptsArgs, 'where'>
  >;
  update_followed_prompts_by_pk?: Resolver<
    Maybe<ResolversTypes['followed_prompts']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Followed_Prompts_By_PkArgs, 'pk_columns'>
  >;
  update_followed_prompts_many?: Resolver<
    Maybe<Array<Maybe<ResolversTypes['followed_prompts_mutation_response']>>>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Followed_Prompts_ManyArgs, 'updates'>
  >;
  update_goal?: Resolver<
    Maybe<ResolversTypes['GoalIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_GoalArgs, 'id' | 'object'>
  >;
  update_goal_progress?: Resolver<
    Maybe<ResolversTypes['GoalIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Goal_ProgressArgs, 'id'>
  >;
  update_list?: Resolver<
    Maybe<ResolversTypes['ListIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_ListArgs, 'id' | 'object'>
  >;
  update_list_books?: Resolver<
    Maybe<ResolversTypes['list_books_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_List_BooksArgs, 'where'>
  >;
  update_list_books_by_pk?: Resolver<
    Maybe<ResolversTypes['list_books']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_List_Books_By_PkArgs, 'pk_columns'>
  >;
  update_list_books_many?: Resolver<
    Maybe<Array<Maybe<ResolversTypes['list_books_mutation_response']>>>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_List_Books_ManyArgs, 'updates'>
  >;
  update_newsletter?: Resolver<
    Maybe<ResolversTypes['NewsletterStatusType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_NewsletterArgs, 'subscribed'>
  >;
  update_notification_deliveries?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Notification_DeliveriesArgs, 'where'>
  >;
  update_notification_deliveries_by_pk?: Resolver<
    Maybe<ResolversTypes['notification_deliveries']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Notification_Deliveries_By_PkArgs, 'pk_columns'>
  >;
  update_notification_deliveries_many?: Resolver<
    Maybe<Array<Maybe<ResolversTypes['notification_deliveries_mutation_response']>>>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Notification_Deliveries_ManyArgs, 'updates'>
  >;
  update_notification_settings?: Resolver<
    Maybe<ResolversTypes['notification_settings_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Notification_SettingsArgs, 'where'>
  >;
  update_notification_settings_by_pk?: Resolver<
    Maybe<ResolversTypes['notification_settings']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Notification_Settings_By_PkArgs, 'pk_columns'>
  >;
  update_notification_settings_many?: Resolver<
    Maybe<Array<Maybe<ResolversTypes['notification_settings_mutation_response']>>>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Notification_Settings_ManyArgs, 'updates'>
  >;
  update_prompt?: Resolver<
    Maybe<ResolversTypes['PromptIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_PromptArgs, 'object'>
  >;
  update_prompt_answers?: Resolver<
    Maybe<ResolversTypes['prompt_answers_mutation_response']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Prompt_AnswersArgs, 'where'>
  >;
  update_prompt_answers_by_pk?: Resolver<
    Maybe<ResolversTypes['prompt_answers']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Prompt_Answers_By_PkArgs, 'pk_columns'>
  >;
  update_prompt_answers_many?: Resolver<
    Maybe<Array<Maybe<ResolversTypes['prompt_answers_mutation_response']>>>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Prompt_Answers_ManyArgs, 'updates'>
  >;
  update_publisher?: Resolver<
    Maybe<ResolversTypes['PublisherIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_PublisherArgs, 'id' | 'publisher'>
  >;
  update_reading_journal?: Resolver<
    Maybe<ResolversTypes['ReadingJournalOutput']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_Reading_JournalArgs, 'id' | 'object'>
  >;
  update_serie?: Resolver<
    Maybe<ResolversTypes['SeriesIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_SerieArgs, 'id' | 'series'>
  >;
  update_user?: Resolver<
    Maybe<ResolversTypes['UserIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_UserArgs, 'user'>
  >;
  update_user_book?: Resolver<
    Maybe<ResolversTypes['UserBookIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_User_BookArgs, 'id' | 'object'>
  >;
  update_user_book_read?: Resolver<
    Maybe<ResolversTypes['UserBookReadIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_User_Book_ReadArgs, 'id' | 'object'>
  >;
  update_user_privacy_setting?: Resolver<
    Maybe<ResolversTypes['UserIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpdate_User_Privacy_SettingArgs, 'privacy_setting_id'>
  >;
  upsert_book?: Resolver<
    Maybe<ResolversTypes['NewBookIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpsert_BookArgs, 'book'>
  >;
  upsert_followed_list?: Resolver<
    Maybe<ResolversTypes['FollowedListType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpsert_Followed_ListArgs, 'list_id'>
  >;
  upsert_followed_prompt?: Resolver<
    Maybe<ResolversTypes['FollowedPromptType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpsert_Followed_PromptArgs, 'prompt_id'>
  >;
  upsert_like?: Resolver<
    Maybe<ResolversTypes['LikeType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpsert_LikeArgs, 'likeable_id'>
  >;
  upsert_tags?: Resolver<
    Maybe<ResolversTypes['TagsType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpsert_TagsArgs, 'id' | 'tags' | 'type'>
  >;
  upsert_user_book_reads?: Resolver<
    Maybe<ResolversTypes['UserBooksReadUpsertType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUpsert_User_Book_ReadsArgs, 'datesRead' | 'user_book_id'>
  >;
  user_login?: Resolver<
    Maybe<ResolversTypes['UserIdType']>,
    ParentType,
    ContextType,
    RequireFields<Mutation_RootUser_LoginArgs, 'user'>
  >;
};

export type Notification_ChannelsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_channels'] = ResolversParentTypes['notification_channels'],
> = {
  channel?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_DeliveriesResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries'] = ResolversParentTypes['notification_deliveries'],
> = {
  channel?: Resolver<Maybe<ResolversTypes['notification_channels']>, ParentType, ContextType>;
  channel_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  notification?: Resolver<Maybe<ResolversTypes['notifications']>, ParentType, ContextType>;
  notification_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  read?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  read_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  sent_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_aggregate'] = ResolversParentTypes['notification_deliveries_aggregate'],
> = {
  aggregate?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_aggregate_fields']>,
    ParentType,
    ContextType
  >;
  nodes?: Resolver<Array<ResolversTypes['notification_deliveries']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_aggregate_fields'] = ResolversParentTypes['notification_deliveries_aggregate_fields'],
> = {
  avg?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_avg_fields']>,
    ParentType,
    ContextType
  >;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<Notification_Deliveries_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_max_fields']>,
    ParentType,
    ContextType
  >;
  min?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_min_fields']>,
    ParentType,
    ContextType
  >;
  stddev?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_stddev_fields']>,
    ParentType,
    ContextType
  >;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_sum_fields']>,
    ParentType,
    ContextType
  >;
  var_pop?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_var_pop_fields']>,
    ParentType,
    ContextType
  >;
  var_samp?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_var_samp_fields']>,
    ParentType,
    ContextType
  >;
  variance?: Resolver<
    Maybe<ResolversTypes['notification_deliveries_variance_fields']>,
    ParentType,
    ContextType
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_avg_fields'] = ResolversParentTypes['notification_deliveries_avg_fields'],
> = {
  channel_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  notification_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_max_fields'] = ResolversParentTypes['notification_deliveries_max_fields'],
> = {
  channel_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  notification_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  read_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  sent_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_min_fields'] = ResolversParentTypes['notification_deliveries_min_fields'],
> = {
  channel_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  notification_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  read_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  sent_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_mutation_response'] = ResolversParentTypes['notification_deliveries_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['notification_deliveries']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_stddev_fields'] = ResolversParentTypes['notification_deliveries_stddev_fields'],
> = {
  channel_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  notification_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_stddev_pop_fields'] = ResolversParentTypes['notification_deliveries_stddev_pop_fields'],
> = {
  channel_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  notification_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_stddev_samp_fields'] = ResolversParentTypes['notification_deliveries_stddev_samp_fields'],
> = {
  channel_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  notification_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_sum_fields'] = ResolversParentTypes['notification_deliveries_sum_fields'],
> = {
  channel_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  notification_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_var_pop_fields'] = ResolversParentTypes['notification_deliveries_var_pop_fields'],
> = {
  channel_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  notification_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_var_samp_fields'] = ResolversParentTypes['notification_deliveries_var_samp_fields'],
> = {
  channel_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  notification_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Deliveries_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_deliveries_variance_fields'] = ResolversParentTypes['notification_deliveries_variance_fields'],
> = {
  channel_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  notification_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_SettingsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_settings'] = ResolversParentTypes['notification_settings'],
> = {
  channel_ids?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<Notification_SettingsChannel_IdsArgs>
  >;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  notification_type_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_Settings_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_settings_mutation_response'] = ResolversParentTypes['notification_settings_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['notification_settings']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Notification_TypesResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['notification_types'] = ResolversParentTypes['notification_types'],
> = {
  active?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  default_channel_ids?: Resolver<
    ResolversTypes['json'],
    ParentType,
    ContextType,
    Partial<Notification_TypesDefault_Channel_IdsArgs>
  >;
  default_priority?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  notification_settings?: Resolver<
    Array<ResolversTypes['notification_settings']>,
    ParentType,
    ContextType,
    Partial<Notification_TypesNotification_SettingsArgs>
  >;
  uid?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type NotificationsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['notifications'] = ResolversParentTypes['notifications'],
> = {
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  description?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  link?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  link_text?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  notification_deliveries?: Resolver<
    Array<ResolversTypes['notification_deliveries']>,
    ParentType,
    ContextType,
    Partial<NotificationsNotification_DeliveriesArgs>
  >;
  notification_deliveries_aggregate?: Resolver<
    ResolversTypes['notification_deliveries_aggregate'],
    ParentType,
    ContextType,
    Partial<NotificationsNotification_Deliveries_AggregateArgs>
  >;
  notification_type_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  notifierUser?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  notifier_user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  priority?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  title?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  uid?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface NumericScalarConfig
  extends GraphQLScalarTypeConfig<ResolversTypes['numeric'], any> {
  name: 'numeric';
}

export type PlatformsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['platforms'] = ResolversParentTypes['platforms'],
> = {
  book_mappings?: Resolver<
    Array<ResolversTypes['book_mappings']>,
    ParentType,
    ContextType,
    Partial<PlatformsBook_MappingsArgs>
  >;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Privacy_SettingsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['privacy_settings'] = ResolversParentTypes['privacy_settings'],
> = {
  activities?: Resolver<
    Array<ResolversTypes['activities']>,
    ParentType,
    ContextType,
    Partial<Privacy_SettingsActivitiesArgs>
  >;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  lists?: Resolver<
    Array<ResolversTypes['lists']>,
    ParentType,
    ContextType,
    Partial<Privacy_SettingsListsArgs>
  >;
  lists_aggregate?: Resolver<
    ResolversTypes['lists_aggregate'],
    ParentType,
    ContextType,
    Partial<Privacy_SettingsLists_AggregateArgs>
  >;
  prompts?: Resolver<
    Array<ResolversTypes['prompts']>,
    ParentType,
    ContextType,
    Partial<Privacy_SettingsPromptsArgs>
  >;
  setting?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  user_books?: Resolver<
    Array<ResolversTypes['user_books']>,
    ParentType,
    ContextType,
    Partial<Privacy_SettingsUser_BooksArgs>
  >;
  user_books_aggregate?: Resolver<
    ResolversTypes['user_books_aggregate'],
    ParentType,
    ContextType,
    Partial<Privacy_SettingsUser_Books_AggregateArgs>
  >;
  users?: Resolver<
    Array<ResolversTypes['users']>,
    ParentType,
    ContextType,
    Partial<Privacy_SettingsUsersArgs>
  >;
  users_by_activity?: Resolver<
    Array<ResolversTypes['users']>,
    ParentType,
    ContextType,
    Partial<Privacy_SettingsUsers_By_ActivityArgs>
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_AnswersResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers'] = ResolversParentTypes['prompt_answers'],
> = {
  book?: Resolver<ResolversTypes['books'], ParentType, ContextType>;
  book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  merged_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompt?: Resolver<ResolversTypes['prompts'], ParentType, ContextType>;
  prompt_book?: Resolver<Maybe<ResolversTypes['prompt_books_summary']>, ParentType, ContextType>;
  prompt_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_aggregate'] = ResolversParentTypes['prompt_answers_aggregate'],
> = {
  aggregate?: Resolver<
    Maybe<ResolversTypes['prompt_answers_aggregate_fields']>,
    ParentType,
    ContextType
  >;
  nodes?: Resolver<Array<ResolversTypes['prompt_answers']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_aggregate_fields'] = ResolversParentTypes['prompt_answers_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['prompt_answers_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<Prompt_Answers_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['prompt_answers_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['prompt_answers_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['prompt_answers_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['prompt_answers_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['prompt_answers_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['prompt_answers_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<
    Maybe<ResolversTypes['prompt_answers_var_pop_fields']>,
    ParentType,
    ContextType
  >;
  var_samp?: Resolver<
    Maybe<ResolversTypes['prompt_answers_var_samp_fields']>,
    ParentType,
    ContextType
  >;
  variance?: Resolver<
    Maybe<ResolversTypes['prompt_answers_variance_fields']>,
    ParentType,
    ContextType
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_avg_fields'] = ResolversParentTypes['prompt_answers_avg_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_max_fields'] = ResolversParentTypes['prompt_answers_max_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  merged_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_min_fields'] = ResolversParentTypes['prompt_answers_min_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  merged_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_mutation_response'] = ResolversParentTypes['prompt_answers_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['prompt_answers']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_stddev_fields'] = ResolversParentTypes['prompt_answers_stddev_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_stddev_pop_fields'] = ResolversParentTypes['prompt_answers_stddev_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_stddev_samp_fields'] = ResolversParentTypes['prompt_answers_stddev_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_sum_fields'] = ResolversParentTypes['prompt_answers_sum_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_var_pop_fields'] = ResolversParentTypes['prompt_answers_var_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_var_samp_fields'] = ResolversParentTypes['prompt_answers_var_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Answers_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_answers_variance_fields'] = ResolversParentTypes['prompt_answers_variance_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompt_Books_SummaryResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompt_books_summary'] = ResolversParentTypes['prompt_books_summary'],
> = {
  answers_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  prompt?: Resolver<Maybe<ResolversTypes['prompts']>, ParentType, ContextType>;
  prompt_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type PromptsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['prompts'] = ResolversParentTypes['prompts'],
> = {
  answers_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  books_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  featured?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  followed_prompts?: Resolver<
    Array<ResolversTypes['followed_prompts']>,
    ParentType,
    ContextType,
    Partial<PromptsFollowed_PromptsArgs>
  >;
  followers?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<PromptsFollowersArgs>
  >;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  privacy_setting?: Resolver<ResolversTypes['privacy_settings'], ParentType, ContextType>;
  privacy_setting_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  prompt_answers?: Resolver<
    Array<ResolversTypes['prompt_answers']>,
    ParentType,
    ContextType,
    Partial<PromptsPrompt_AnswersArgs>
  >;
  prompt_answers_aggregate?: Resolver<
    ResolversTypes['prompt_answers_aggregate'],
    ParentType,
    ContextType,
    Partial<PromptsPrompt_Answers_AggregateArgs>
  >;
  prompt_books?: Resolver<
    Array<ResolversTypes['prompt_books_summary']>,
    ParentType,
    ContextType,
    Partial<PromptsPrompt_BooksArgs>
  >;
  question?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  slug?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  users_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Prompts_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['prompts_mutation_response'] = ResolversParentTypes['prompts_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['prompts']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type PublishersResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['publishers'] = ResolversParentTypes['publishers'],
> = {
  canonical_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  editions?: Resolver<
    Array<ResolversTypes['editions']>,
    ParentType,
    ContextType,
    Partial<PublishersEditionsArgs>
  >;
  editions_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  locked?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  parent_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  parent_publisher?: Resolver<Maybe<ResolversTypes['publishers']>, ParentType, ContextType>;
  slug?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  state?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Query_RootResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['query_root'] = ResolversParentTypes['query_root'],
> = {
  activities?: Resolver<
    Array<ResolversTypes['activities']>,
    ParentType,
    ContextType,
    Partial<Query_RootActivitiesArgs>
  >;
  activities_by_pk?: Resolver<
    Maybe<ResolversTypes['activities']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootActivities_By_PkArgs, 'id'>
  >;
  activity_feed?: Resolver<
    Array<ResolversTypes['activities']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootActivity_FeedArgs, 'args'>
  >;
  activity_foryou_feed?: Resolver<
    Array<ResolversTypes['activities']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootActivity_Foryou_FeedArgs, 'args'>
  >;
  authors?: Resolver<
    Array<ResolversTypes['authors']>,
    ParentType,
    ContextType,
    Partial<Query_RootAuthorsArgs>
  >;
  authors_by_pk?: Resolver<
    Maybe<ResolversTypes['authors']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootAuthors_By_PkArgs, 'id'>
  >;
  book_categories?: Resolver<
    Array<ResolversTypes['book_categories']>,
    ParentType,
    ContextType,
    Partial<Query_RootBook_CategoriesArgs>
  >;
  book_categories_by_pk?: Resolver<
    Maybe<ResolversTypes['book_categories']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootBook_Categories_By_PkArgs, 'id'>
  >;
  book_characters?: Resolver<
    Array<ResolversTypes['book_characters']>,
    ParentType,
    ContextType,
    Partial<Query_RootBook_CharactersArgs>
  >;
  book_characters_by_pk?: Resolver<
    Maybe<ResolversTypes['book_characters']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootBook_Characters_By_PkArgs, 'id'>
  >;
  book_collections?: Resolver<
    Array<ResolversTypes['book_collections']>,
    ParentType,
    ContextType,
    Partial<Query_RootBook_CollectionsArgs>
  >;
  book_collections_by_pk?: Resolver<
    Maybe<ResolversTypes['book_collections']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootBook_Collections_By_PkArgs, 'id'>
  >;
  book_mappings?: Resolver<
    Array<ResolversTypes['book_mappings']>,
    ParentType,
    ContextType,
    Partial<Query_RootBook_MappingsArgs>
  >;
  book_mappings_by_pk?: Resolver<
    Maybe<ResolversTypes['book_mappings']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootBook_Mappings_By_PkArgs, 'id'>
  >;
  book_series?: Resolver<
    Array<ResolversTypes['book_series']>,
    ParentType,
    ContextType,
    Partial<Query_RootBook_SeriesArgs>
  >;
  book_series_aggregate?: Resolver<
    ResolversTypes['book_series_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootBook_Series_AggregateArgs>
  >;
  book_series_by_pk?: Resolver<
    Maybe<ResolversTypes['book_series']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootBook_Series_By_PkArgs, 'id'>
  >;
  book_statuses?: Resolver<
    Array<ResolversTypes['book_statuses']>,
    ParentType,
    ContextType,
    Partial<Query_RootBook_StatusesArgs>
  >;
  book_statuses_by_pk?: Resolver<
    Maybe<ResolversTypes['book_statuses']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootBook_Statuses_By_PkArgs, 'id'>
  >;
  bookles?: Resolver<
    Array<ResolversTypes['bookles']>,
    ParentType,
    ContextType,
    Partial<Query_RootBooklesArgs>
  >;
  bookles_by_pk?: Resolver<
    Maybe<ResolversTypes['bookles']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootBookles_By_PkArgs, 'id'>
  >;
  books?: Resolver<
    Array<ResolversTypes['books']>,
    ParentType,
    ContextType,
    Partial<Query_RootBooksArgs>
  >;
  books_aggregate?: Resolver<
    ResolversTypes['books_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootBooks_AggregateArgs>
  >;
  books_by_pk?: Resolver<
    Maybe<ResolversTypes['books']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootBooks_By_PkArgs, 'id'>
  >;
  books_trending?: Resolver<
    Maybe<ResolversTypes['TrendingBookType']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootBooks_TrendingArgs, 'from' | 'limit' | 'offset' | 'to'>
  >;
  characters?: Resolver<
    Array<ResolversTypes['characters']>,
    ParentType,
    ContextType,
    Partial<Query_RootCharactersArgs>
  >;
  characters_by_pk?: Resolver<
    Maybe<ResolversTypes['characters']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootCharacters_By_PkArgs, 'id'>
  >;
  collection_import_results?: Resolver<
    Array<ResolversTypes['collection_import_results']>,
    ParentType,
    ContextType,
    Partial<Query_RootCollection_Import_ResultsArgs>
  >;
  collection_import_results_by_pk?: Resolver<
    Maybe<ResolversTypes['collection_import_results']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootCollection_Import_Results_By_PkArgs, 'id'>
  >;
  collection_imports?: Resolver<
    Array<ResolversTypes['collection_imports']>,
    ParentType,
    ContextType,
    Partial<Query_RootCollection_ImportsArgs>
  >;
  collection_imports_by_pk?: Resolver<
    Maybe<ResolversTypes['collection_imports']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootCollection_Imports_By_PkArgs, 'id'>
  >;
  contributions?: Resolver<
    Array<ResolversTypes['contributions']>,
    ParentType,
    ContextType,
    Partial<Query_RootContributionsArgs>
  >;
  contributions_aggregate?: Resolver<
    ResolversTypes['contributions_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootContributions_AggregateArgs>
  >;
  contributions_by_pk?: Resolver<
    Maybe<ResolversTypes['contributions']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootContributions_By_PkArgs, 'id'>
  >;
  countries?: Resolver<
    Array<ResolversTypes['countries']>,
    ParentType,
    ContextType,
    Partial<Query_RootCountriesArgs>
  >;
  countries_by_pk?: Resolver<
    Maybe<ResolversTypes['countries']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootCountries_By_PkArgs, 'id'>
  >;
  editions?: Resolver<
    Array<ResolversTypes['editions']>,
    ParentType,
    ContextType,
    Partial<Query_RootEditionsArgs>
  >;
  editions_by_pk?: Resolver<
    Maybe<ResolversTypes['editions']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootEditions_By_PkArgs, 'id'>
  >;
  flag_statuses?: Resolver<
    Array<ResolversTypes['flag_statuses']>,
    ParentType,
    ContextType,
    Partial<Query_RootFlag_StatusesArgs>
  >;
  flag_statuses_by_pk?: Resolver<
    Maybe<ResolversTypes['flag_statuses']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootFlag_Statuses_By_PkArgs, 'id'>
  >;
  followed_lists?: Resolver<
    Array<ResolversTypes['followed_lists']>,
    ParentType,
    ContextType,
    Partial<Query_RootFollowed_ListsArgs>
  >;
  followed_lists_by_pk?: Resolver<
    Maybe<ResolversTypes['followed_lists']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootFollowed_Lists_By_PkArgs, 'id'>
  >;
  followed_prompts?: Resolver<
    Array<ResolversTypes['followed_prompts']>,
    ParentType,
    ContextType,
    Partial<Query_RootFollowed_PromptsArgs>
  >;
  followed_prompts_by_pk?: Resolver<
    Maybe<ResolversTypes['followed_prompts']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootFollowed_Prompts_By_PkArgs, 'id'>
  >;
  followed_user_books?: Resolver<
    Array<ResolversTypes['followed_user_books']>,
    ParentType,
    ContextType,
    Partial<Query_RootFollowed_User_BooksArgs>
  >;
  followed_user_books_aggregate?: Resolver<
    ResolversTypes['followed_user_books_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootFollowed_User_Books_AggregateArgs>
  >;
  followed_users?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<Query_RootFollowed_UsersArgs>
  >;
  followed_users_by_pk?: Resolver<
    Maybe<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootFollowed_Users_By_PkArgs, 'id'>
  >;
  following_user_books?: Resolver<
    Array<ResolversTypes['following_user_books']>,
    ParentType,
    ContextType,
    Partial<Query_RootFollowing_User_BooksArgs>
  >;
  following_user_books_aggregate?: Resolver<
    ResolversTypes['following_user_books_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootFollowing_User_Books_AggregateArgs>
  >;
  goals?: Resolver<
    Array<ResolversTypes['goals']>,
    ParentType,
    ContextType,
    Partial<Query_RootGoalsArgs>
  >;
  goals_by_pk?: Resolver<
    Maybe<ResolversTypes['goals']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootGoals_By_PkArgs, 'id'>
  >;
  images?: Resolver<
    Array<ResolversTypes['images']>,
    ParentType,
    ContextType,
    Partial<Query_RootImagesArgs>
  >;
  images_by_pk?: Resolver<
    Maybe<ResolversTypes['images']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootImages_By_PkArgs, 'id'>
  >;
  languages?: Resolver<
    Array<ResolversTypes['languages']>,
    ParentType,
    ContextType,
    Partial<Query_RootLanguagesArgs>
  >;
  languages_by_pk?: Resolver<
    Maybe<ResolversTypes['languages']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootLanguages_By_PkArgs, 'id'>
  >;
  likes?: Resolver<
    Array<ResolversTypes['likes']>,
    ParentType,
    ContextType,
    Partial<Query_RootLikesArgs>
  >;
  likes_by_pk?: Resolver<
    Maybe<ResolversTypes['likes']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootLikes_By_PkArgs, 'id'>
  >;
  list_books?: Resolver<
    Array<ResolversTypes['list_books']>,
    ParentType,
    ContextType,
    Partial<Query_RootList_BooksArgs>
  >;
  list_books_aggregate?: Resolver<
    ResolversTypes['list_books_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootList_Books_AggregateArgs>
  >;
  list_books_by_pk?: Resolver<
    Maybe<ResolversTypes['list_books']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootList_Books_By_PkArgs, 'id'>
  >;
  lists?: Resolver<
    Array<ResolversTypes['lists']>,
    ParentType,
    ContextType,
    Partial<Query_RootListsArgs>
  >;
  lists_aggregate?: Resolver<
    ResolversTypes['lists_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootLists_AggregateArgs>
  >;
  lists_by_pk?: Resolver<
    Maybe<ResolversTypes['lists']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootLists_By_PkArgs, 'id'>
  >;
  me?: Resolver<Array<ResolversTypes['users']>, ParentType, ContextType, Partial<Query_RootMeArgs>>;
  newsletter?: Resolver<Maybe<ResolversTypes['NewsletterStatusType']>, ParentType, ContextType>;
  notification_channels?: Resolver<
    Array<ResolversTypes['notification_channels']>,
    ParentType,
    ContextType,
    Partial<Query_RootNotification_ChannelsArgs>
  >;
  notification_channels_by_pk?: Resolver<
    Maybe<ResolversTypes['notification_channels']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootNotification_Channels_By_PkArgs, 'id'>
  >;
  notification_deliveries?: Resolver<
    Array<ResolversTypes['notification_deliveries']>,
    ParentType,
    ContextType,
    Partial<Query_RootNotification_DeliveriesArgs>
  >;
  notification_deliveries_aggregate?: Resolver<
    ResolversTypes['notification_deliveries_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootNotification_Deliveries_AggregateArgs>
  >;
  notification_deliveries_by_pk?: Resolver<
    Maybe<ResolversTypes['notification_deliveries']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootNotification_Deliveries_By_PkArgs, 'id'>
  >;
  notification_settings?: Resolver<
    Array<ResolversTypes['notification_settings']>,
    ParentType,
    ContextType,
    Partial<Query_RootNotification_SettingsArgs>
  >;
  notification_settings_by_pk?: Resolver<
    Maybe<ResolversTypes['notification_settings']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootNotification_Settings_By_PkArgs, 'id'>
  >;
  notification_types?: Resolver<
    Array<ResolversTypes['notification_types']>,
    ParentType,
    ContextType,
    Partial<Query_RootNotification_TypesArgs>
  >;
  notification_types_by_pk?: Resolver<
    Maybe<ResolversTypes['notification_types']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootNotification_Types_By_PkArgs, 'id'>
  >;
  notifications?: Resolver<
    Array<ResolversTypes['notifications']>,
    ParentType,
    ContextType,
    Partial<Query_RootNotificationsArgs>
  >;
  notifications_by_pk?: Resolver<
    Maybe<ResolversTypes['notifications']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootNotifications_By_PkArgs, 'id'>
  >;
  platforms?: Resolver<
    Array<ResolversTypes['platforms']>,
    ParentType,
    ContextType,
    Partial<Query_RootPlatformsArgs>
  >;
  platforms_by_pk?: Resolver<
    Maybe<ResolversTypes['platforms']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootPlatforms_By_PkArgs, 'id'>
  >;
  privacy_settings?: Resolver<
    Array<ResolversTypes['privacy_settings']>,
    ParentType,
    ContextType,
    Partial<Query_RootPrivacy_SettingsArgs>
  >;
  privacy_settings_by_pk?: Resolver<
    Maybe<ResolversTypes['privacy_settings']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootPrivacy_Settings_By_PkArgs, 'id'>
  >;
  prompt_answers?: Resolver<
    Array<ResolversTypes['prompt_answers']>,
    ParentType,
    ContextType,
    Partial<Query_RootPrompt_AnswersArgs>
  >;
  prompt_answers_aggregate?: Resolver<
    ResolversTypes['prompt_answers_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootPrompt_Answers_AggregateArgs>
  >;
  prompt_answers_by_pk?: Resolver<
    Maybe<ResolversTypes['prompt_answers']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootPrompt_Answers_By_PkArgs, 'id'>
  >;
  prompt_books_summary?: Resolver<
    Array<ResolversTypes['prompt_books_summary']>,
    ParentType,
    ContextType,
    Partial<Query_RootPrompt_Books_SummaryArgs>
  >;
  prompts?: Resolver<
    Array<ResolversTypes['prompts']>,
    ParentType,
    ContextType,
    Partial<Query_RootPromptsArgs>
  >;
  prompts_by_pk?: Resolver<
    Maybe<ResolversTypes['prompts']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootPrompts_By_PkArgs, 'id'>
  >;
  publishers?: Resolver<
    Array<ResolversTypes['publishers']>,
    ParentType,
    ContextType,
    Partial<Query_RootPublishersArgs>
  >;
  publishers_by_pk?: Resolver<
    Maybe<ResolversTypes['publishers']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootPublishers_By_PkArgs, 'id'>
  >;
  reading_formats?: Resolver<
    Array<ResolversTypes['reading_formats']>,
    ParentType,
    ContextType,
    Partial<Query_RootReading_FormatsArgs>
  >;
  reading_formats_by_pk?: Resolver<
    Maybe<ResolversTypes['reading_formats']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootReading_Formats_By_PkArgs, 'id'>
  >;
  reading_journals?: Resolver<
    Array<ResolversTypes['reading_journals']>,
    ParentType,
    ContextType,
    Partial<Query_RootReading_JournalsArgs>
  >;
  reading_journals_by_pk?: Resolver<
    Maybe<ResolversTypes['reading_journals']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootReading_Journals_By_PkArgs, 'id'>
  >;
  reading_journals_summary?: Resolver<
    Array<ResolversTypes['reading_journals_summary']>,
    ParentType,
    ContextType,
    Partial<Query_RootReading_Journals_SummaryArgs>
  >;
  recommendations?: Resolver<
    Array<ResolversTypes['recommendations']>,
    ParentType,
    ContextType,
    Partial<Query_RootRecommendationsArgs>
  >;
  recommendations_by_pk?: Resolver<
    Maybe<ResolversTypes['recommendations']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootRecommendations_By_PkArgs, 'id'>
  >;
  referrals_for_user?: Resolver<
    Maybe<Array<Maybe<ResolversTypes['ReferralType']>>>,
    ParentType,
    ContextType,
    RequireFields<Query_RootReferrals_For_UserArgs, 'limit' | 'user_id'>
  >;
  search?: Resolver<
    Maybe<ResolversTypes['SearchOutput']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootSearchArgs, 'query'>
  >;
  series?: Resolver<
    Array<ResolversTypes['series']>,
    ParentType,
    ContextType,
    Partial<Query_RootSeriesArgs>
  >;
  series_by_pk?: Resolver<
    Maybe<ResolversTypes['series']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootSeries_By_PkArgs, 'id'>
  >;
  subscriptions?: Resolver<
    Maybe<ResolversTypes['SubscriptionsType']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootSubscriptionsArgs, 'default_payment_system_id'>
  >;
  tag_categories?: Resolver<
    Array<ResolversTypes['tag_categories']>,
    ParentType,
    ContextType,
    Partial<Query_RootTag_CategoriesArgs>
  >;
  tag_categories_by_pk?: Resolver<
    Maybe<ResolversTypes['tag_categories']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootTag_Categories_By_PkArgs, 'id'>
  >;
  taggable_counts?: Resolver<
    Array<ResolversTypes['taggable_counts']>,
    ParentType,
    ContextType,
    Partial<Query_RootTaggable_CountsArgs>
  >;
  taggable_counts_by_pk?: Resolver<
    Maybe<ResolversTypes['taggable_counts']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootTaggable_Counts_By_PkArgs, 'id'>
  >;
  taggings?: Resolver<
    Array<ResolversTypes['taggings']>,
    ParentType,
    ContextType,
    Partial<Query_RootTaggingsArgs>
  >;
  taggings_aggregate?: Resolver<
    ResolversTypes['taggings_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootTaggings_AggregateArgs>
  >;
  taggings_by_pk?: Resolver<
    Maybe<ResolversTypes['taggings']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootTaggings_By_PkArgs, 'id'>
  >;
  tags?: Resolver<
    Array<ResolversTypes['tags']>,
    ParentType,
    ContextType,
    Partial<Query_RootTagsArgs>
  >;
  tags_aggregate?: Resolver<
    ResolversTypes['tags_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootTags_AggregateArgs>
  >;
  tags_by_pk?: Resolver<
    Maybe<ResolversTypes['tags']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootTags_By_PkArgs, 'id'>
  >;
  user_blocks?: Resolver<
    Array<ResolversTypes['user_blocks']>,
    ParentType,
    ContextType,
    Partial<Query_RootUser_BlocksArgs>
  >;
  user_blocks_by_pk?: Resolver<
    Maybe<ResolversTypes['user_blocks']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootUser_Blocks_By_PkArgs, 'id'>
  >;
  user_book_reads?: Resolver<
    Array<ResolversTypes['user_book_reads']>,
    ParentType,
    ContextType,
    Partial<Query_RootUser_Book_ReadsArgs>
  >;
  user_book_reads_aggregate?: Resolver<
    ResolversTypes['user_book_reads_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootUser_Book_Reads_AggregateArgs>
  >;
  user_book_reads_by_pk?: Resolver<
    Maybe<ResolversTypes['user_book_reads']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootUser_Book_Reads_By_PkArgs, 'id'>
  >;
  user_book_statuses?: Resolver<
    Array<ResolversTypes['user_book_statuses']>,
    ParentType,
    ContextType,
    Partial<Query_RootUser_Book_StatusesArgs>
  >;
  user_book_statuses_aggregate?: Resolver<
    ResolversTypes['user_book_statuses_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootUser_Book_Statuses_AggregateArgs>
  >;
  user_book_statuses_by_pk?: Resolver<
    Maybe<ResolversTypes['user_book_statuses']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootUser_Book_Statuses_By_PkArgs, 'id'>
  >;
  user_books?: Resolver<
    Array<ResolversTypes['user_books']>,
    ParentType,
    ContextType,
    Partial<Query_RootUser_BooksArgs>
  >;
  user_books_aggregate?: Resolver<
    ResolversTypes['user_books_aggregate'],
    ParentType,
    ContextType,
    Partial<Query_RootUser_Books_AggregateArgs>
  >;
  user_books_by_pk?: Resolver<
    Maybe<ResolversTypes['user_books']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootUser_Books_By_PkArgs, 'id'>
  >;
  user_flags?: Resolver<
    Array<ResolversTypes['user_flags']>,
    ParentType,
    ContextType,
    Partial<Query_RootUser_FlagsArgs>
  >;
  user_flags_by_pk?: Resolver<
    Maybe<ResolversTypes['user_flags']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootUser_Flags_By_PkArgs, 'id'>
  >;
  user_referrals?: Resolver<
    Array<ResolversTypes['user_referrals']>,
    ParentType,
    ContextType,
    Partial<Query_RootUser_ReferralsArgs>
  >;
  user_referrals_by_pk?: Resolver<
    Maybe<ResolversTypes['user_referrals']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootUser_Referrals_By_PkArgs, 'id'>
  >;
  user_statuses?: Resolver<
    Array<ResolversTypes['user_statuses']>,
    ParentType,
    ContextType,
    Partial<Query_RootUser_StatusesArgs>
  >;
  user_statuses_by_pk?: Resolver<
    Maybe<ResolversTypes['user_statuses']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootUser_Statuses_By_PkArgs, 'id'>
  >;
  users?: Resolver<
    Array<ResolversTypes['users']>,
    ParentType,
    ContextType,
    Partial<Query_RootUsersArgs>
  >;
  users_aggregate_by_created_at_date?: Resolver<
    Array<ResolversTypes['users_aggregate_by_created_at_date']>,
    ParentType,
    ContextType,
    Partial<Query_RootUsers_Aggregate_By_Created_At_DateArgs>
  >;
  users_by_pk?: Resolver<
    Maybe<ResolversTypes['users']>,
    ParentType,
    ContextType,
    RequireFields<Query_RootUsers_By_PkArgs, 'id'>
  >;
};

export type Reading_FormatsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['reading_formats'] = ResolversParentTypes['reading_formats'],
> = {
  format?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Reading_JournalsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['reading_journals'] = ResolversParentTypes['reading_journals'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  entry?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  event?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  followers?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<Reading_JournalsFollowersArgs>
  >;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  likes?: Resolver<
    Array<ResolversTypes['likes']>,
    ParentType,
    ContextType,
    Partial<Reading_JournalsLikesArgs>
  >;
  likes_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  metadata?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<Reading_JournalsMetadataArgs>
  >;
  object_type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  privacy_setting_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  taggings?: Resolver<
    Array<ResolversTypes['taggings']>,
    ParentType,
    ContextType,
    Partial<Reading_JournalsTaggingsArgs>
  >;
  taggings_aggregate?: Resolver<
    ResolversTypes['taggings_aggregate'],
    ParentType,
    ContextType,
    Partial<Reading_JournalsTaggings_AggregateArgs>
  >;
  updated_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Reading_Journals_SummaryResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['reading_journals_summary'] = ResolversParentTypes['reading_journals_summary'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  followers?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<Reading_Journals_SummaryFollowersArgs>
  >;
  journals_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  last_updated_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  reading_journals?: Resolver<
    Array<ResolversTypes['reading_journals']>,
    ParentType,
    ContextType,
    Partial<Reading_Journals_SummaryReading_JournalsArgs>
  >;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type RecommendationsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['recommendations'] = ResolversParentTypes['recommendations'],
> = {
  context?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  item_book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  item_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  item_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  item_user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  score?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  subject_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  subject_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  subject_user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type SeriesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['series'] = ResolversParentTypes['series'],
> = {
  author?: Resolver<Maybe<ResolversTypes['authors']>, ParentType, ContextType>;
  author_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  book_series?: Resolver<
    Array<ResolversTypes['book_series']>,
    ParentType,
    ContextType,
    Partial<SeriesBook_SeriesArgs>
  >;
  book_series_aggregate?: Resolver<
    ResolversTypes['book_series_aggregate'],
    ParentType,
    ContextType,
    Partial<SeriesBook_Series_AggregateArgs>
  >;
  books_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  canonical?: Resolver<Maybe<ResolversTypes['series']>, ParentType, ContextType>;
  canonical_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  creator?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  identifiers?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<SeriesIdentifiersArgs>
  >;
  is_completed?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  locked?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  primary_books_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  slug?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  state?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface SmallintScalarConfig
  extends GraphQLScalarTypeConfig<ResolversTypes['smallint'], any> {
  name: 'smallint';
}

export type Subscription_RootResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['subscription_root'] = ResolversParentTypes['subscription_root'],
> = {
  activities?: SubscriptionResolver<
    Array<ResolversTypes['activities']>,
    'activities',
    ParentType,
    ContextType,
    Partial<Subscription_RootActivitiesArgs>
  >;
  activities_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['activities']>,
    'activities_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootActivities_By_PkArgs, 'id'>
  >;
  activities_stream?: SubscriptionResolver<
    Array<ResolversTypes['activities']>,
    'activities_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootActivities_StreamArgs, 'batch_size' | 'cursor'>
  >;
  activity_feed?: SubscriptionResolver<
    Array<ResolversTypes['activities']>,
    'activity_feed',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootActivity_FeedArgs, 'args'>
  >;
  activity_foryou_feed?: SubscriptionResolver<
    Array<ResolversTypes['activities']>,
    'activity_foryou_feed',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootActivity_Foryou_FeedArgs, 'args'>
  >;
  authors?: SubscriptionResolver<
    Array<ResolversTypes['authors']>,
    'authors',
    ParentType,
    ContextType,
    Partial<Subscription_RootAuthorsArgs>
  >;
  authors_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['authors']>,
    'authors_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootAuthors_By_PkArgs, 'id'>
  >;
  authors_stream?: SubscriptionResolver<
    Array<ResolversTypes['authors']>,
    'authors_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootAuthors_StreamArgs, 'batch_size' | 'cursor'>
  >;
  book_categories?: SubscriptionResolver<
    Array<ResolversTypes['book_categories']>,
    'book_categories',
    ParentType,
    ContextType,
    Partial<Subscription_RootBook_CategoriesArgs>
  >;
  book_categories_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['book_categories']>,
    'book_categories_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Categories_By_PkArgs, 'id'>
  >;
  book_categories_stream?: SubscriptionResolver<
    Array<ResolversTypes['book_categories']>,
    'book_categories_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Categories_StreamArgs, 'batch_size' | 'cursor'>
  >;
  book_characters?: SubscriptionResolver<
    Array<ResolversTypes['book_characters']>,
    'book_characters',
    ParentType,
    ContextType,
    Partial<Subscription_RootBook_CharactersArgs>
  >;
  book_characters_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['book_characters']>,
    'book_characters_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Characters_By_PkArgs, 'id'>
  >;
  book_characters_stream?: SubscriptionResolver<
    Array<ResolversTypes['book_characters']>,
    'book_characters_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Characters_StreamArgs, 'batch_size' | 'cursor'>
  >;
  book_collections?: SubscriptionResolver<
    Array<ResolversTypes['book_collections']>,
    'book_collections',
    ParentType,
    ContextType,
    Partial<Subscription_RootBook_CollectionsArgs>
  >;
  book_collections_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['book_collections']>,
    'book_collections_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Collections_By_PkArgs, 'id'>
  >;
  book_collections_stream?: SubscriptionResolver<
    Array<ResolversTypes['book_collections']>,
    'book_collections_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Collections_StreamArgs, 'batch_size' | 'cursor'>
  >;
  book_mappings?: SubscriptionResolver<
    Array<ResolversTypes['book_mappings']>,
    'book_mappings',
    ParentType,
    ContextType,
    Partial<Subscription_RootBook_MappingsArgs>
  >;
  book_mappings_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['book_mappings']>,
    'book_mappings_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Mappings_By_PkArgs, 'id'>
  >;
  book_mappings_stream?: SubscriptionResolver<
    Array<ResolversTypes['book_mappings']>,
    'book_mappings_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Mappings_StreamArgs, 'batch_size' | 'cursor'>
  >;
  book_series?: SubscriptionResolver<
    Array<ResolversTypes['book_series']>,
    'book_series',
    ParentType,
    ContextType,
    Partial<Subscription_RootBook_SeriesArgs>
  >;
  book_series_aggregate?: SubscriptionResolver<
    ResolversTypes['book_series_aggregate'],
    'book_series_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootBook_Series_AggregateArgs>
  >;
  book_series_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['book_series']>,
    'book_series_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Series_By_PkArgs, 'id'>
  >;
  book_series_stream?: SubscriptionResolver<
    Array<ResolversTypes['book_series']>,
    'book_series_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Series_StreamArgs, 'batch_size' | 'cursor'>
  >;
  book_statuses?: SubscriptionResolver<
    Array<ResolversTypes['book_statuses']>,
    'book_statuses',
    ParentType,
    ContextType,
    Partial<Subscription_RootBook_StatusesArgs>
  >;
  book_statuses_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['book_statuses']>,
    'book_statuses_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Statuses_By_PkArgs, 'id'>
  >;
  book_statuses_stream?: SubscriptionResolver<
    Array<ResolversTypes['book_statuses']>,
    'book_statuses_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBook_Statuses_StreamArgs, 'batch_size' | 'cursor'>
  >;
  bookles?: SubscriptionResolver<
    Array<ResolversTypes['bookles']>,
    'bookles',
    ParentType,
    ContextType,
    Partial<Subscription_RootBooklesArgs>
  >;
  bookles_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['bookles']>,
    'bookles_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBookles_By_PkArgs, 'id'>
  >;
  bookles_stream?: SubscriptionResolver<
    Array<ResolversTypes['bookles']>,
    'bookles_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBookles_StreamArgs, 'batch_size' | 'cursor'>
  >;
  books?: SubscriptionResolver<
    Array<ResolversTypes['books']>,
    'books',
    ParentType,
    ContextType,
    Partial<Subscription_RootBooksArgs>
  >;
  books_aggregate?: SubscriptionResolver<
    ResolversTypes['books_aggregate'],
    'books_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootBooks_AggregateArgs>
  >;
  books_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['books']>,
    'books_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBooks_By_PkArgs, 'id'>
  >;
  books_stream?: SubscriptionResolver<
    Array<ResolversTypes['books']>,
    'books_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootBooks_StreamArgs, 'batch_size' | 'cursor'>
  >;
  characters?: SubscriptionResolver<
    Array<ResolversTypes['characters']>,
    'characters',
    ParentType,
    ContextType,
    Partial<Subscription_RootCharactersArgs>
  >;
  characters_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['characters']>,
    'characters_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootCharacters_By_PkArgs, 'id'>
  >;
  characters_stream?: SubscriptionResolver<
    Array<ResolversTypes['characters']>,
    'characters_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootCharacters_StreamArgs, 'batch_size' | 'cursor'>
  >;
  collection_import_results?: SubscriptionResolver<
    Array<ResolversTypes['collection_import_results']>,
    'collection_import_results',
    ParentType,
    ContextType,
    Partial<Subscription_RootCollection_Import_ResultsArgs>
  >;
  collection_import_results_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['collection_import_results']>,
    'collection_import_results_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootCollection_Import_Results_By_PkArgs, 'id'>
  >;
  collection_import_results_stream?: SubscriptionResolver<
    Array<ResolversTypes['collection_import_results']>,
    'collection_import_results_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootCollection_Import_Results_StreamArgs, 'batch_size' | 'cursor'>
  >;
  collection_imports?: SubscriptionResolver<
    Array<ResolversTypes['collection_imports']>,
    'collection_imports',
    ParentType,
    ContextType,
    Partial<Subscription_RootCollection_ImportsArgs>
  >;
  collection_imports_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['collection_imports']>,
    'collection_imports_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootCollection_Imports_By_PkArgs, 'id'>
  >;
  collection_imports_stream?: SubscriptionResolver<
    Array<ResolversTypes['collection_imports']>,
    'collection_imports_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootCollection_Imports_StreamArgs, 'batch_size' | 'cursor'>
  >;
  contributions?: SubscriptionResolver<
    Array<ResolversTypes['contributions']>,
    'contributions',
    ParentType,
    ContextType,
    Partial<Subscription_RootContributionsArgs>
  >;
  contributions_aggregate?: SubscriptionResolver<
    ResolversTypes['contributions_aggregate'],
    'contributions_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootContributions_AggregateArgs>
  >;
  contributions_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['contributions']>,
    'contributions_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootContributions_By_PkArgs, 'id'>
  >;
  contributions_stream?: SubscriptionResolver<
    Array<ResolversTypes['contributions']>,
    'contributions_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootContributions_StreamArgs, 'batch_size' | 'cursor'>
  >;
  countries?: SubscriptionResolver<
    Array<ResolversTypes['countries']>,
    'countries',
    ParentType,
    ContextType,
    Partial<Subscription_RootCountriesArgs>
  >;
  countries_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['countries']>,
    'countries_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootCountries_By_PkArgs, 'id'>
  >;
  countries_stream?: SubscriptionResolver<
    Array<ResolversTypes['countries']>,
    'countries_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootCountries_StreamArgs, 'batch_size' | 'cursor'>
  >;
  editions?: SubscriptionResolver<
    Array<ResolversTypes['editions']>,
    'editions',
    ParentType,
    ContextType,
    Partial<Subscription_RootEditionsArgs>
  >;
  editions_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['editions']>,
    'editions_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootEditions_By_PkArgs, 'id'>
  >;
  editions_stream?: SubscriptionResolver<
    Array<ResolversTypes['editions']>,
    'editions_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootEditions_StreamArgs, 'batch_size' | 'cursor'>
  >;
  flag_statuses?: SubscriptionResolver<
    Array<ResolversTypes['flag_statuses']>,
    'flag_statuses',
    ParentType,
    ContextType,
    Partial<Subscription_RootFlag_StatusesArgs>
  >;
  flag_statuses_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['flag_statuses']>,
    'flag_statuses_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootFlag_Statuses_By_PkArgs, 'id'>
  >;
  flag_statuses_stream?: SubscriptionResolver<
    Array<ResolversTypes['flag_statuses']>,
    'flag_statuses_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootFlag_Statuses_StreamArgs, 'batch_size' | 'cursor'>
  >;
  followed_lists?: SubscriptionResolver<
    Array<ResolversTypes['followed_lists']>,
    'followed_lists',
    ParentType,
    ContextType,
    Partial<Subscription_RootFollowed_ListsArgs>
  >;
  followed_lists_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['followed_lists']>,
    'followed_lists_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootFollowed_Lists_By_PkArgs, 'id'>
  >;
  followed_lists_stream?: SubscriptionResolver<
    Array<ResolversTypes['followed_lists']>,
    'followed_lists_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootFollowed_Lists_StreamArgs, 'batch_size' | 'cursor'>
  >;
  followed_prompts?: SubscriptionResolver<
    Array<ResolversTypes['followed_prompts']>,
    'followed_prompts',
    ParentType,
    ContextType,
    Partial<Subscription_RootFollowed_PromptsArgs>
  >;
  followed_prompts_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['followed_prompts']>,
    'followed_prompts_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootFollowed_Prompts_By_PkArgs, 'id'>
  >;
  followed_prompts_stream?: SubscriptionResolver<
    Array<ResolversTypes['followed_prompts']>,
    'followed_prompts_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootFollowed_Prompts_StreamArgs, 'batch_size' | 'cursor'>
  >;
  followed_user_books?: SubscriptionResolver<
    Array<ResolversTypes['followed_user_books']>,
    'followed_user_books',
    ParentType,
    ContextType,
    Partial<Subscription_RootFollowed_User_BooksArgs>
  >;
  followed_user_books_aggregate?: SubscriptionResolver<
    ResolversTypes['followed_user_books_aggregate'],
    'followed_user_books_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootFollowed_User_Books_AggregateArgs>
  >;
  followed_user_books_stream?: SubscriptionResolver<
    Array<ResolversTypes['followed_user_books']>,
    'followed_user_books_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootFollowed_User_Books_StreamArgs, 'batch_size' | 'cursor'>
  >;
  followed_users?: SubscriptionResolver<
    Array<ResolversTypes['followed_users']>,
    'followed_users',
    ParentType,
    ContextType,
    Partial<Subscription_RootFollowed_UsersArgs>
  >;
  followed_users_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['followed_users']>,
    'followed_users_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootFollowed_Users_By_PkArgs, 'id'>
  >;
  followed_users_stream?: SubscriptionResolver<
    Array<ResolversTypes['followed_users']>,
    'followed_users_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootFollowed_Users_StreamArgs, 'batch_size' | 'cursor'>
  >;
  following_user_books?: SubscriptionResolver<
    Array<ResolversTypes['following_user_books']>,
    'following_user_books',
    ParentType,
    ContextType,
    Partial<Subscription_RootFollowing_User_BooksArgs>
  >;
  following_user_books_aggregate?: SubscriptionResolver<
    ResolversTypes['following_user_books_aggregate'],
    'following_user_books_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootFollowing_User_Books_AggregateArgs>
  >;
  following_user_books_stream?: SubscriptionResolver<
    Array<ResolversTypes['following_user_books']>,
    'following_user_books_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootFollowing_User_Books_StreamArgs, 'batch_size' | 'cursor'>
  >;
  goals?: SubscriptionResolver<
    Array<ResolversTypes['goals']>,
    'goals',
    ParentType,
    ContextType,
    Partial<Subscription_RootGoalsArgs>
  >;
  goals_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['goals']>,
    'goals_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootGoals_By_PkArgs, 'id'>
  >;
  goals_stream?: SubscriptionResolver<
    Array<ResolversTypes['goals']>,
    'goals_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootGoals_StreamArgs, 'batch_size' | 'cursor'>
  >;
  images?: SubscriptionResolver<
    Array<ResolversTypes['images']>,
    'images',
    ParentType,
    ContextType,
    Partial<Subscription_RootImagesArgs>
  >;
  images_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['images']>,
    'images_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootImages_By_PkArgs, 'id'>
  >;
  images_stream?: SubscriptionResolver<
    Array<ResolversTypes['images']>,
    'images_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootImages_StreamArgs, 'batch_size' | 'cursor'>
  >;
  languages?: SubscriptionResolver<
    Array<ResolversTypes['languages']>,
    'languages',
    ParentType,
    ContextType,
    Partial<Subscription_RootLanguagesArgs>
  >;
  languages_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['languages']>,
    'languages_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootLanguages_By_PkArgs, 'id'>
  >;
  languages_stream?: SubscriptionResolver<
    Array<ResolversTypes['languages']>,
    'languages_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootLanguages_StreamArgs, 'batch_size' | 'cursor'>
  >;
  likes?: SubscriptionResolver<
    Array<ResolversTypes['likes']>,
    'likes',
    ParentType,
    ContextType,
    Partial<Subscription_RootLikesArgs>
  >;
  likes_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['likes']>,
    'likes_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootLikes_By_PkArgs, 'id'>
  >;
  likes_stream?: SubscriptionResolver<
    Array<ResolversTypes['likes']>,
    'likes_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootLikes_StreamArgs, 'batch_size' | 'cursor'>
  >;
  list_books?: SubscriptionResolver<
    Array<ResolversTypes['list_books']>,
    'list_books',
    ParentType,
    ContextType,
    Partial<Subscription_RootList_BooksArgs>
  >;
  list_books_aggregate?: SubscriptionResolver<
    ResolversTypes['list_books_aggregate'],
    'list_books_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootList_Books_AggregateArgs>
  >;
  list_books_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['list_books']>,
    'list_books_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootList_Books_By_PkArgs, 'id'>
  >;
  list_books_stream?: SubscriptionResolver<
    Array<ResolversTypes['list_books']>,
    'list_books_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootList_Books_StreamArgs, 'batch_size' | 'cursor'>
  >;
  lists?: SubscriptionResolver<
    Array<ResolversTypes['lists']>,
    'lists',
    ParentType,
    ContextType,
    Partial<Subscription_RootListsArgs>
  >;
  lists_aggregate?: SubscriptionResolver<
    ResolversTypes['lists_aggregate'],
    'lists_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootLists_AggregateArgs>
  >;
  lists_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['lists']>,
    'lists_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootLists_By_PkArgs, 'id'>
  >;
  lists_stream?: SubscriptionResolver<
    Array<ResolversTypes['lists']>,
    'lists_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootLists_StreamArgs, 'batch_size' | 'cursor'>
  >;
  me?: SubscriptionResolver<
    Array<ResolversTypes['users']>,
    'me',
    ParentType,
    ContextType,
    Partial<Subscription_RootMeArgs>
  >;
  notification_channels?: SubscriptionResolver<
    Array<ResolversTypes['notification_channels']>,
    'notification_channels',
    ParentType,
    ContextType,
    Partial<Subscription_RootNotification_ChannelsArgs>
  >;
  notification_channels_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['notification_channels']>,
    'notification_channels_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootNotification_Channels_By_PkArgs, 'id'>
  >;
  notification_channels_stream?: SubscriptionResolver<
    Array<ResolversTypes['notification_channels']>,
    'notification_channels_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootNotification_Channels_StreamArgs, 'batch_size' | 'cursor'>
  >;
  notification_deliveries?: SubscriptionResolver<
    Array<ResolversTypes['notification_deliveries']>,
    'notification_deliveries',
    ParentType,
    ContextType,
    Partial<Subscription_RootNotification_DeliveriesArgs>
  >;
  notification_deliveries_aggregate?: SubscriptionResolver<
    ResolversTypes['notification_deliveries_aggregate'],
    'notification_deliveries_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootNotification_Deliveries_AggregateArgs>
  >;
  notification_deliveries_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['notification_deliveries']>,
    'notification_deliveries_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootNotification_Deliveries_By_PkArgs, 'id'>
  >;
  notification_deliveries_stream?: SubscriptionResolver<
    Array<ResolversTypes['notification_deliveries']>,
    'notification_deliveries_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootNotification_Deliveries_StreamArgs, 'batch_size' | 'cursor'>
  >;
  notification_settings?: SubscriptionResolver<
    Array<ResolversTypes['notification_settings']>,
    'notification_settings',
    ParentType,
    ContextType,
    Partial<Subscription_RootNotification_SettingsArgs>
  >;
  notification_settings_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['notification_settings']>,
    'notification_settings_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootNotification_Settings_By_PkArgs, 'id'>
  >;
  notification_settings_stream?: SubscriptionResolver<
    Array<ResolversTypes['notification_settings']>,
    'notification_settings_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootNotification_Settings_StreamArgs, 'batch_size' | 'cursor'>
  >;
  notification_types?: SubscriptionResolver<
    Array<ResolversTypes['notification_types']>,
    'notification_types',
    ParentType,
    ContextType,
    Partial<Subscription_RootNotification_TypesArgs>
  >;
  notification_types_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['notification_types']>,
    'notification_types_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootNotification_Types_By_PkArgs, 'id'>
  >;
  notification_types_stream?: SubscriptionResolver<
    Array<ResolversTypes['notification_types']>,
    'notification_types_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootNotification_Types_StreamArgs, 'batch_size' | 'cursor'>
  >;
  notifications?: SubscriptionResolver<
    Array<ResolversTypes['notifications']>,
    'notifications',
    ParentType,
    ContextType,
    Partial<Subscription_RootNotificationsArgs>
  >;
  notifications_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['notifications']>,
    'notifications_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootNotifications_By_PkArgs, 'id'>
  >;
  notifications_stream?: SubscriptionResolver<
    Array<ResolversTypes['notifications']>,
    'notifications_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootNotifications_StreamArgs, 'batch_size' | 'cursor'>
  >;
  platforms?: SubscriptionResolver<
    Array<ResolversTypes['platforms']>,
    'platforms',
    ParentType,
    ContextType,
    Partial<Subscription_RootPlatformsArgs>
  >;
  platforms_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['platforms']>,
    'platforms_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPlatforms_By_PkArgs, 'id'>
  >;
  platforms_stream?: SubscriptionResolver<
    Array<ResolversTypes['platforms']>,
    'platforms_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPlatforms_StreamArgs, 'batch_size' | 'cursor'>
  >;
  privacy_settings?: SubscriptionResolver<
    Array<ResolversTypes['privacy_settings']>,
    'privacy_settings',
    ParentType,
    ContextType,
    Partial<Subscription_RootPrivacy_SettingsArgs>
  >;
  privacy_settings_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['privacy_settings']>,
    'privacy_settings_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPrivacy_Settings_By_PkArgs, 'id'>
  >;
  privacy_settings_stream?: SubscriptionResolver<
    Array<ResolversTypes['privacy_settings']>,
    'privacy_settings_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPrivacy_Settings_StreamArgs, 'batch_size' | 'cursor'>
  >;
  prompt_answers?: SubscriptionResolver<
    Array<ResolversTypes['prompt_answers']>,
    'prompt_answers',
    ParentType,
    ContextType,
    Partial<Subscription_RootPrompt_AnswersArgs>
  >;
  prompt_answers_aggregate?: SubscriptionResolver<
    ResolversTypes['prompt_answers_aggregate'],
    'prompt_answers_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootPrompt_Answers_AggregateArgs>
  >;
  prompt_answers_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['prompt_answers']>,
    'prompt_answers_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPrompt_Answers_By_PkArgs, 'id'>
  >;
  prompt_answers_stream?: SubscriptionResolver<
    Array<ResolversTypes['prompt_answers']>,
    'prompt_answers_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPrompt_Answers_StreamArgs, 'batch_size' | 'cursor'>
  >;
  prompt_books_summary?: SubscriptionResolver<
    Array<ResolversTypes['prompt_books_summary']>,
    'prompt_books_summary',
    ParentType,
    ContextType,
    Partial<Subscription_RootPrompt_Books_SummaryArgs>
  >;
  prompt_books_summary_stream?: SubscriptionResolver<
    Array<ResolversTypes['prompt_books_summary']>,
    'prompt_books_summary_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPrompt_Books_Summary_StreamArgs, 'batch_size' | 'cursor'>
  >;
  prompts?: SubscriptionResolver<
    Array<ResolversTypes['prompts']>,
    'prompts',
    ParentType,
    ContextType,
    Partial<Subscription_RootPromptsArgs>
  >;
  prompts_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['prompts']>,
    'prompts_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPrompts_By_PkArgs, 'id'>
  >;
  prompts_stream?: SubscriptionResolver<
    Array<ResolversTypes['prompts']>,
    'prompts_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPrompts_StreamArgs, 'batch_size' | 'cursor'>
  >;
  publishers?: SubscriptionResolver<
    Array<ResolversTypes['publishers']>,
    'publishers',
    ParentType,
    ContextType,
    Partial<Subscription_RootPublishersArgs>
  >;
  publishers_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['publishers']>,
    'publishers_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPublishers_By_PkArgs, 'id'>
  >;
  publishers_stream?: SubscriptionResolver<
    Array<ResolversTypes['publishers']>,
    'publishers_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootPublishers_StreamArgs, 'batch_size' | 'cursor'>
  >;
  reading_formats?: SubscriptionResolver<
    Array<ResolversTypes['reading_formats']>,
    'reading_formats',
    ParentType,
    ContextType,
    Partial<Subscription_RootReading_FormatsArgs>
  >;
  reading_formats_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['reading_formats']>,
    'reading_formats_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootReading_Formats_By_PkArgs, 'id'>
  >;
  reading_formats_stream?: SubscriptionResolver<
    Array<ResolversTypes['reading_formats']>,
    'reading_formats_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootReading_Formats_StreamArgs, 'batch_size' | 'cursor'>
  >;
  reading_journals?: SubscriptionResolver<
    Array<ResolversTypes['reading_journals']>,
    'reading_journals',
    ParentType,
    ContextType,
    Partial<Subscription_RootReading_JournalsArgs>
  >;
  reading_journals_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['reading_journals']>,
    'reading_journals_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootReading_Journals_By_PkArgs, 'id'>
  >;
  reading_journals_stream?: SubscriptionResolver<
    Array<ResolversTypes['reading_journals']>,
    'reading_journals_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootReading_Journals_StreamArgs, 'batch_size' | 'cursor'>
  >;
  reading_journals_summary?: SubscriptionResolver<
    Array<ResolversTypes['reading_journals_summary']>,
    'reading_journals_summary',
    ParentType,
    ContextType,
    Partial<Subscription_RootReading_Journals_SummaryArgs>
  >;
  reading_journals_summary_stream?: SubscriptionResolver<
    Array<ResolversTypes['reading_journals_summary']>,
    'reading_journals_summary_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootReading_Journals_Summary_StreamArgs, 'batch_size' | 'cursor'>
  >;
  recommendations?: SubscriptionResolver<
    Array<ResolversTypes['recommendations']>,
    'recommendations',
    ParentType,
    ContextType,
    Partial<Subscription_RootRecommendationsArgs>
  >;
  recommendations_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['recommendations']>,
    'recommendations_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootRecommendations_By_PkArgs, 'id'>
  >;
  recommendations_stream?: SubscriptionResolver<
    Array<ResolversTypes['recommendations']>,
    'recommendations_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootRecommendations_StreamArgs, 'batch_size' | 'cursor'>
  >;
  series?: SubscriptionResolver<
    Array<ResolversTypes['series']>,
    'series',
    ParentType,
    ContextType,
    Partial<Subscription_RootSeriesArgs>
  >;
  series_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['series']>,
    'series_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootSeries_By_PkArgs, 'id'>
  >;
  series_stream?: SubscriptionResolver<
    Array<ResolversTypes['series']>,
    'series_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootSeries_StreamArgs, 'batch_size' | 'cursor'>
  >;
  tag_categories?: SubscriptionResolver<
    Array<ResolversTypes['tag_categories']>,
    'tag_categories',
    ParentType,
    ContextType,
    Partial<Subscription_RootTag_CategoriesArgs>
  >;
  tag_categories_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['tag_categories']>,
    'tag_categories_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootTag_Categories_By_PkArgs, 'id'>
  >;
  tag_categories_stream?: SubscriptionResolver<
    Array<ResolversTypes['tag_categories']>,
    'tag_categories_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootTag_Categories_StreamArgs, 'batch_size' | 'cursor'>
  >;
  taggable_counts?: SubscriptionResolver<
    Array<ResolversTypes['taggable_counts']>,
    'taggable_counts',
    ParentType,
    ContextType,
    Partial<Subscription_RootTaggable_CountsArgs>
  >;
  taggable_counts_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['taggable_counts']>,
    'taggable_counts_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootTaggable_Counts_By_PkArgs, 'id'>
  >;
  taggable_counts_stream?: SubscriptionResolver<
    Array<ResolversTypes['taggable_counts']>,
    'taggable_counts_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootTaggable_Counts_StreamArgs, 'batch_size' | 'cursor'>
  >;
  taggings?: SubscriptionResolver<
    Array<ResolversTypes['taggings']>,
    'taggings',
    ParentType,
    ContextType,
    Partial<Subscription_RootTaggingsArgs>
  >;
  taggings_aggregate?: SubscriptionResolver<
    ResolversTypes['taggings_aggregate'],
    'taggings_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootTaggings_AggregateArgs>
  >;
  taggings_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['taggings']>,
    'taggings_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootTaggings_By_PkArgs, 'id'>
  >;
  taggings_stream?: SubscriptionResolver<
    Array<ResolversTypes['taggings']>,
    'taggings_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootTaggings_StreamArgs, 'batch_size' | 'cursor'>
  >;
  tags?: SubscriptionResolver<
    Array<ResolversTypes['tags']>,
    'tags',
    ParentType,
    ContextType,
    Partial<Subscription_RootTagsArgs>
  >;
  tags_aggregate?: SubscriptionResolver<
    ResolversTypes['tags_aggregate'],
    'tags_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootTags_AggregateArgs>
  >;
  tags_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['tags']>,
    'tags_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootTags_By_PkArgs, 'id'>
  >;
  tags_stream?: SubscriptionResolver<
    Array<ResolversTypes['tags']>,
    'tags_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootTags_StreamArgs, 'batch_size' | 'cursor'>
  >;
  user_blocks?: SubscriptionResolver<
    Array<ResolversTypes['user_blocks']>,
    'user_blocks',
    ParentType,
    ContextType,
    Partial<Subscription_RootUser_BlocksArgs>
  >;
  user_blocks_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['user_blocks']>,
    'user_blocks_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Blocks_By_PkArgs, 'id'>
  >;
  user_blocks_stream?: SubscriptionResolver<
    Array<ResolversTypes['user_blocks']>,
    'user_blocks_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Blocks_StreamArgs, 'batch_size' | 'cursor'>
  >;
  user_book_reads?: SubscriptionResolver<
    Array<ResolversTypes['user_book_reads']>,
    'user_book_reads',
    ParentType,
    ContextType,
    Partial<Subscription_RootUser_Book_ReadsArgs>
  >;
  user_book_reads_aggregate?: SubscriptionResolver<
    ResolversTypes['user_book_reads_aggregate'],
    'user_book_reads_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootUser_Book_Reads_AggregateArgs>
  >;
  user_book_reads_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['user_book_reads']>,
    'user_book_reads_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Book_Reads_By_PkArgs, 'id'>
  >;
  user_book_reads_stream?: SubscriptionResolver<
    Array<ResolversTypes['user_book_reads']>,
    'user_book_reads_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Book_Reads_StreamArgs, 'batch_size' | 'cursor'>
  >;
  user_book_statuses?: SubscriptionResolver<
    Array<ResolversTypes['user_book_statuses']>,
    'user_book_statuses',
    ParentType,
    ContextType,
    Partial<Subscription_RootUser_Book_StatusesArgs>
  >;
  user_book_statuses_aggregate?: SubscriptionResolver<
    ResolversTypes['user_book_statuses_aggregate'],
    'user_book_statuses_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootUser_Book_Statuses_AggregateArgs>
  >;
  user_book_statuses_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['user_book_statuses']>,
    'user_book_statuses_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Book_Statuses_By_PkArgs, 'id'>
  >;
  user_book_statuses_stream?: SubscriptionResolver<
    Array<ResolversTypes['user_book_statuses']>,
    'user_book_statuses_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Book_Statuses_StreamArgs, 'batch_size' | 'cursor'>
  >;
  user_books?: SubscriptionResolver<
    Array<ResolversTypes['user_books']>,
    'user_books',
    ParentType,
    ContextType,
    Partial<Subscription_RootUser_BooksArgs>
  >;
  user_books_aggregate?: SubscriptionResolver<
    ResolversTypes['user_books_aggregate'],
    'user_books_aggregate',
    ParentType,
    ContextType,
    Partial<Subscription_RootUser_Books_AggregateArgs>
  >;
  user_books_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['user_books']>,
    'user_books_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Books_By_PkArgs, 'id'>
  >;
  user_books_stream?: SubscriptionResolver<
    Array<ResolversTypes['user_books']>,
    'user_books_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Books_StreamArgs, 'batch_size' | 'cursor'>
  >;
  user_flags?: SubscriptionResolver<
    Array<ResolversTypes['user_flags']>,
    'user_flags',
    ParentType,
    ContextType,
    Partial<Subscription_RootUser_FlagsArgs>
  >;
  user_flags_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['user_flags']>,
    'user_flags_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Flags_By_PkArgs, 'id'>
  >;
  user_flags_stream?: SubscriptionResolver<
    Array<ResolversTypes['user_flags']>,
    'user_flags_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Flags_StreamArgs, 'batch_size' | 'cursor'>
  >;
  user_referrals?: SubscriptionResolver<
    Array<ResolversTypes['user_referrals']>,
    'user_referrals',
    ParentType,
    ContextType,
    Partial<Subscription_RootUser_ReferralsArgs>
  >;
  user_referrals_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['user_referrals']>,
    'user_referrals_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Referrals_By_PkArgs, 'id'>
  >;
  user_referrals_stream?: SubscriptionResolver<
    Array<ResolversTypes['user_referrals']>,
    'user_referrals_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Referrals_StreamArgs, 'batch_size' | 'cursor'>
  >;
  user_statuses?: SubscriptionResolver<
    Array<ResolversTypes['user_statuses']>,
    'user_statuses',
    ParentType,
    ContextType,
    Partial<Subscription_RootUser_StatusesArgs>
  >;
  user_statuses_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['user_statuses']>,
    'user_statuses_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Statuses_By_PkArgs, 'id'>
  >;
  user_statuses_stream?: SubscriptionResolver<
    Array<ResolversTypes['user_statuses']>,
    'user_statuses_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUser_Statuses_StreamArgs, 'batch_size' | 'cursor'>
  >;
  users?: SubscriptionResolver<
    Array<ResolversTypes['users']>,
    'users',
    ParentType,
    ContextType,
    Partial<Subscription_RootUsersArgs>
  >;
  users_aggregate_by_created_at_date?: SubscriptionResolver<
    Array<ResolversTypes['users_aggregate_by_created_at_date']>,
    'users_aggregate_by_created_at_date',
    ParentType,
    ContextType,
    Partial<Subscription_RootUsers_Aggregate_By_Created_At_DateArgs>
  >;
  users_aggregate_by_created_at_date_stream?: SubscriptionResolver<
    Array<ResolversTypes['users_aggregate_by_created_at_date']>,
    'users_aggregate_by_created_at_date_stream',
    ParentType,
    ContextType,
    RequireFields<
      Subscription_RootUsers_Aggregate_By_Created_At_Date_StreamArgs,
      'batch_size' | 'cursor'
    >
  >;
  users_by_pk?: SubscriptionResolver<
    Maybe<ResolversTypes['users']>,
    'users_by_pk',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUsers_By_PkArgs, 'id'>
  >;
  users_stream?: SubscriptionResolver<
    Array<ResolversTypes['users']>,
    'users_stream',
    ParentType,
    ContextType,
    RequireFields<Subscription_RootUsers_StreamArgs, 'batch_size' | 'cursor'>
  >;
};

export type Tag_CategoriesResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tag_categories'] = ResolversParentTypes['tag_categories'],
> = {
  category?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  tags?: Resolver<
    Array<ResolversTypes['tags']>,
    ParentType,
    ContextType,
    Partial<Tag_CategoriesTagsArgs>
  >;
  tags_aggregate?: Resolver<
    ResolversTypes['tags_aggregate'],
    ParentType,
    ContextType,
    Partial<Tag_CategoriesTags_AggregateArgs>
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggable_CountsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggable_counts'] = ResolversParentTypes['taggable_counts'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  hardcover_tagged?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  spoiler_ratio?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  tag?: Resolver<Maybe<ResolversTypes['tags']>, ParentType, ContextType>;
  tag_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  taggable_id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  taggable_type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type TaggingsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['taggings'] = ResolversParentTypes['taggings'],
> = {
  book?: Resolver<Maybe<ResolversTypes['books']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  spoiler?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  tag?: Resolver<ResolversTypes['tags'], ParentType, ContextType>;
  tag_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  taggable_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_aggregate'] = ResolversParentTypes['taggings_aggregate'],
> = {
  aggregate?: Resolver<Maybe<ResolversTypes['taggings_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['taggings']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_aggregate_fields'] = ResolversParentTypes['taggings_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['taggings_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<Taggings_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['taggings_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['taggings_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['taggings_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['taggings_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['taggings_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['taggings_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['taggings_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['taggings_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['taggings_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_avg_fields'] = ResolversParentTypes['taggings_avg_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_max_fields'] = ResolversParentTypes['taggings_max_fields'],
> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  tag_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  taggable_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_min_fields'] = ResolversParentTypes['taggings_min_fields'],
> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  tag_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  taggable_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_stddev_fields'] = ResolversParentTypes['taggings_stddev_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_stddev_pop_fields'] = ResolversParentTypes['taggings_stddev_pop_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_stddev_samp_fields'] = ResolversParentTypes['taggings_stddev_samp_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_sum_fields'] = ResolversParentTypes['taggings_sum_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  tag_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_var_pop_fields'] = ResolversParentTypes['taggings_var_pop_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_var_samp_fields'] = ResolversParentTypes['taggings_var_samp_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Taggings_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['taggings_variance_fields'] = ResolversParentTypes['taggings_variance_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  taggable_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type TagsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['tags'] = ResolversParentTypes['tags'],
> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  slug?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  tag?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  tag_category?: Resolver<ResolversTypes['tag_categories'], ParentType, ContextType>;
  tag_category_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  taggings?: Resolver<
    Array<ResolversTypes['taggings']>,
    ParentType,
    ContextType,
    Partial<TagsTaggingsArgs>
  >;
  taggings_aggregate?: Resolver<
    ResolversTypes['taggings_aggregate'],
    ParentType,
    ContextType,
    Partial<TagsTaggings_AggregateArgs>
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_aggregate'] = ResolversParentTypes['tags_aggregate'],
> = {
  aggregate?: Resolver<Maybe<ResolversTypes['tags_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['tags']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_aggregate_fields'] = ResolversParentTypes['tags_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['tags_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<Tags_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['tags_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['tags_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['tags_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['tags_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['tags_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['tags_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['tags_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['tags_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['tags_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_avg_fields'] = ResolversParentTypes['tags_avg_fields'],
> = {
  count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_max_fields'] = ResolversParentTypes['tags_max_fields'],
> = {
  count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  tag?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  tag_category_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_min_fields'] = ResolversParentTypes['tags_min_fields'],
> = {
  count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  tag?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  tag_category_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_stddev_fields'] = ResolversParentTypes['tags_stddev_fields'],
> = {
  count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_stddev_pop_fields'] = ResolversParentTypes['tags_stddev_pop_fields'],
> = {
  count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_stddev_samp_fields'] = ResolversParentTypes['tags_stddev_samp_fields'],
> = {
  count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_sum_fields'] = ResolversParentTypes['tags_sum_fields'],
> = {
  count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  tag_category_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_var_pop_fields'] = ResolversParentTypes['tags_var_pop_fields'],
> = {
  count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_var_samp_fields'] = ResolversParentTypes['tags_var_samp_fields'],
> = {
  count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['tags_variance_fields'] = ResolversParentTypes['tags_variance_fields'],
> = {
  count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tag_category_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface TimestampScalarConfig
  extends GraphQLScalarTypeConfig<ResolversTypes['timestamp'], any> {
  name: 'timestamp';
}

export interface TimestamptzScalarConfig
  extends GraphQLScalarTypeConfig<ResolversTypes['timestamptz'], any> {
  name: 'timestamptz';
}

export type User_BlocksResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['user_blocks'] = ResolversParentTypes['user_blocks'],
> = {
  blocked_user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  blocked_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Blocks_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_blocks_mutation_response'] = ResolversParentTypes['user_blocks_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['user_blocks']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_ReadsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads'] = ResolversParentTypes['user_book_reads'],
> = {
  edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  finished_at?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  paused_at?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  started_at?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  user_book?: Resolver<Maybe<ResolversTypes['user_books']>, ParentType, ContextType>;
  user_book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_aggregate'] = ResolversParentTypes['user_book_reads_aggregate'],
> = {
  aggregate?: Resolver<
    Maybe<ResolversTypes['user_book_reads_aggregate_fields']>,
    ParentType,
    ContextType
  >;
  nodes?: Resolver<Array<ResolversTypes['user_book_reads']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_aggregate_fields'] = ResolversParentTypes['user_book_reads_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['user_book_reads_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<User_Book_Reads_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['user_book_reads_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['user_book_reads_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<
    Maybe<ResolversTypes['user_book_reads_stddev_fields']>,
    ParentType,
    ContextType
  >;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['user_book_reads_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['user_book_reads_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['user_book_reads_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<
    Maybe<ResolversTypes['user_book_reads_var_pop_fields']>,
    ParentType,
    ContextType
  >;
  var_samp?: Resolver<
    Maybe<ResolversTypes['user_book_reads_var_samp_fields']>,
    ParentType,
    ContextType
  >;
  variance?: Resolver<
    Maybe<ResolversTypes['user_book_reads_variance_fields']>,
    ParentType,
    ContextType
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_avg_fields'] = ResolversParentTypes['user_book_reads_avg_fields'],
> = {
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_max_fields'] = ResolversParentTypes['user_book_reads_max_fields'],
> = {
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  finished_at?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  paused_at?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  started_at?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_min_fields'] = ResolversParentTypes['user_book_reads_min_fields'],
> = {
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  finished_at?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  paused_at?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  started_at?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_stddev_fields'] = ResolversParentTypes['user_book_reads_stddev_fields'],
> = {
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_stddev_pop_fields'] = ResolversParentTypes['user_book_reads_stddev_pop_fields'],
> = {
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_stddev_samp_fields'] = ResolversParentTypes['user_book_reads_stddev_samp_fields'],
> = {
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_sum_fields'] = ResolversParentTypes['user_book_reads_sum_fields'],
> = {
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_var_pop_fields'] = ResolversParentTypes['user_book_reads_var_pop_fields'],
> = {
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_var_samp_fields'] = ResolversParentTypes['user_book_reads_var_samp_fields'],
> = {
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Reads_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_reads_variance_fields'] = ResolversParentTypes['user_book_reads_variance_fields'],
> = {
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_pages?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  progress_seconds?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_StatusesResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses'] = ResolversParentTypes['user_book_statuses'],
> = {
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  status?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  user_books?: Resolver<
    Array<ResolversTypes['user_books']>,
    ParentType,
    ContextType,
    Partial<User_Book_StatusesUser_BooksArgs>
  >;
  user_books_aggregate?: Resolver<
    ResolversTypes['user_books_aggregate'],
    ParentType,
    ContextType,
    Partial<User_Book_StatusesUser_Books_AggregateArgs>
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_aggregate'] = ResolversParentTypes['user_book_statuses_aggregate'],
> = {
  aggregate?: Resolver<
    Maybe<ResolversTypes['user_book_statuses_aggregate_fields']>,
    ParentType,
    ContextType
  >;
  nodes?: Resolver<Array<ResolversTypes['user_book_statuses']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_aggregate_fields'] = ResolversParentTypes['user_book_statuses_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['user_book_statuses_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<User_Book_Statuses_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['user_book_statuses_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['user_book_statuses_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<
    Maybe<ResolversTypes['user_book_statuses_stddev_fields']>,
    ParentType,
    ContextType
  >;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['user_book_statuses_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['user_book_statuses_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['user_book_statuses_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<
    Maybe<ResolversTypes['user_book_statuses_var_pop_fields']>,
    ParentType,
    ContextType
  >;
  var_samp?: Resolver<
    Maybe<ResolversTypes['user_book_statuses_var_samp_fields']>,
    ParentType,
    ContextType
  >;
  variance?: Resolver<
    Maybe<ResolversTypes['user_book_statuses_variance_fields']>,
    ParentType,
    ContextType
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_avg_fields'] = ResolversParentTypes['user_book_statuses_avg_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_max_fields'] = ResolversParentTypes['user_book_statuses_max_fields'],
> = {
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_min_fields'] = ResolversParentTypes['user_book_statuses_min_fields'],
> = {
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  slug?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_stddev_fields'] = ResolversParentTypes['user_book_statuses_stddev_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_stddev_pop_fields'] = ResolversParentTypes['user_book_statuses_stddev_pop_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_stddev_samp_fields'] = ResolversParentTypes['user_book_statuses_stddev_samp_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_sum_fields'] = ResolversParentTypes['user_book_statuses_sum_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_var_pop_fields'] = ResolversParentTypes['user_book_statuses_var_pop_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_var_samp_fields'] = ResolversParentTypes['user_book_statuses_var_samp_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Book_Statuses_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_book_statuses_variance_fields'] = ResolversParentTypes['user_book_statuses_variance_fields'],
> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_BooksResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['user_books'] = ResolversParentTypes['user_books'],
> = {
  book?: Resolver<ResolversTypes['books'], ParentType, ContextType>;
  book_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  date_added?: Resolver<ResolversTypes['date'], ParentType, ContextType>;
  edition?: Resolver<Maybe<ResolversTypes['editions']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  first_read_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  first_started_reading_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  followers?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<User_BooksFollowersArgs>
  >;
  has_review?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  imported?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  last_read_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  likes?: Resolver<
    Array<ResolversTypes['likes']>,
    ParentType,
    ContextType,
    Partial<User_BooksLikesArgs>
  >;
  likes_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  media_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  merged_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  object_type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  owned?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  privacy_setting?: Resolver<ResolversTypes['privacy_settings'], ParentType, ContextType>;
  privacy_setting_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  private_notes?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  read_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  reading_format?: Resolver<Maybe<ResolversTypes['reading_formats']>, ParentType, ContextType>;
  reading_format_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  reading_journal_summary?: Resolver<
    Maybe<ResolversTypes['reading_journals_summary']>,
    ParentType,
    ContextType
  >;
  reading_journals?: Resolver<
    Array<ResolversTypes['reading_journals']>,
    ParentType,
    ContextType,
    Partial<User_BooksReading_JournalsArgs>
  >;
  recommended_by?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  recommended_for?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  referrer?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  review?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  review_has_spoilers?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  review_html?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  review_length?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  review_migrated?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  review_object?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<User_BooksReview_ObjectArgs>
  >;
  review_raw?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  review_slate?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<User_BooksReview_SlateArgs>
  >;
  reviewed_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  sponsored_review?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  starred?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  status_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_book_reads?: Resolver<
    Array<ResolversTypes['user_book_reads']>,
    ParentType,
    ContextType,
    Partial<User_BooksUser_Book_ReadsArgs>
  >;
  user_book_reads_aggregate?: Resolver<
    ResolversTypes['user_book_reads_aggregate'],
    ParentType,
    ContextType,
    Partial<User_BooksUser_Book_Reads_AggregateArgs>
  >;
  user_book_status?: Resolver<ResolversTypes['user_book_statuses'], ParentType, ContextType>;
  user_books?: Resolver<
    Array<ResolversTypes['user_books']>,
    ParentType,
    ContextType,
    Partial<User_BooksUser_BooksArgs>
  >;
  user_books_aggregate?: Resolver<
    ResolversTypes['user_books_aggregate'],
    ParentType,
    ContextType,
    Partial<User_BooksUser_Books_AggregateArgs>
  >;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_AggregateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_aggregate'] = ResolversParentTypes['user_books_aggregate'],
> = {
  aggregate?: Resolver<
    Maybe<ResolversTypes['user_books_aggregate_fields']>,
    ParentType,
    ContextType
  >;
  nodes?: Resolver<Array<ResolversTypes['user_books']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Aggregate_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_aggregate_fields'] = ResolversParentTypes['user_books_aggregate_fields'],
> = {
  avg?: Resolver<Maybe<ResolversTypes['user_books_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<
    ResolversTypes['Int'],
    ParentType,
    ContextType,
    Partial<User_Books_Aggregate_FieldsCountArgs>
  >;
  max?: Resolver<Maybe<ResolversTypes['user_books_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['user_books_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['user_books_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<
    Maybe<ResolversTypes['user_books_stddev_pop_fields']>,
    ParentType,
    ContextType
  >;
  stddev_samp?: Resolver<
    Maybe<ResolversTypes['user_books_stddev_samp_fields']>,
    ParentType,
    ContextType
  >;
  sum?: Resolver<Maybe<ResolversTypes['user_books_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['user_books_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['user_books_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['user_books_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Avg_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_avg_fields'] = ResolversParentTypes['user_books_avg_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reading_format_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  review_length?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Max_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_max_fields'] = ResolversParentTypes['user_books_max_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  date_added?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  first_read_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  first_started_reading_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  last_read_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  media_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  merged_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  object_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  private_notes?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  read_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reading_format_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  recommended_by?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  recommended_for?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  review?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  review_html?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  review_length?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  review_raw?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  reviewed_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  status_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Min_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_min_fields'] = ResolversParentTypes['user_books_min_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  date_added?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  first_read_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  first_started_reading_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  last_read_date?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  media_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  merged_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  object_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  private_notes?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  read_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reading_format_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  recommended_by?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  recommended_for?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  review?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  review_html?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  review_length?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  review_raw?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  reviewed_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  status_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Stddev_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_stddev_fields'] = ResolversParentTypes['user_books_stddev_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reading_format_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  review_length?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Stddev_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_stddev_pop_fields'] = ResolversParentTypes['user_books_stddev_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reading_format_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  review_length?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Stddev_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_stddev_samp_fields'] = ResolversParentTypes['user_books_stddev_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reading_format_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  review_length?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Sum_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_sum_fields'] = ResolversParentTypes['user_books_sum_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['float8']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  read_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  reading_format_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  review_length?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  status_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Var_Pop_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_var_pop_fields'] = ResolversParentTypes['user_books_var_pop_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reading_format_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  review_length?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Var_Samp_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_var_samp_fields'] = ResolversParentTypes['user_books_var_samp_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reading_format_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  review_length?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Books_Variance_FieldsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_books_variance_fields'] = ResolversParentTypes['user_books_variance_fields'],
> = {
  book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  cached_match_score?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  likes_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_book_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  original_edition_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  owned_copies?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  privacy_setting_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  rating?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  read_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reading_format_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  referrer_user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  review_length?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  status_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_FlagsResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['user_flags'] = ResolversParentTypes['user_flags'],
> = {
  action_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  action_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  category?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  details?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  flag_status?: Resolver<ResolversTypes['flag_statuses'], ParentType, ContextType>;
  flag_status_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  reported_user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  user_reported?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_submitted?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Flags_Mutation_ResponseResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_flags_mutation_response'] = ResolversParentTypes['user_flags_mutation_response'],
> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['user_flags']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_ReferralsResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['user_referrals'] = ResolversParentTypes['user_referrals'],
> = {
  created_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  referrer?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  referrer_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  state?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamp'], ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_StatusesResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['user_statuses'] = ResolversParentTypes['user_statuses'],
> = {
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  status?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  users?: Resolver<
    Array<ResolversTypes['users']>,
    ParentType,
    ContextType,
    Partial<User_StatusesUsersArgs>
  >;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type UsersResolvers<
  ContextType = any,
  ParentType extends ResolversParentTypes['users'] = ResolversParentTypes['users'],
> = {
  access_level?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  account_privacy_setting_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  activities?: Resolver<
    Array<ResolversTypes['activities']>,
    ParentType,
    ContextType,
    Partial<UsersActivitiesArgs>
  >;
  activity_privacy_settings_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  admin?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  bio?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  birthdate?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  blocked_users?: Resolver<
    Array<ResolversTypes['user_blocks']>,
    ParentType,
    ContextType,
    Partial<UsersBlocked_UsersArgs>
  >;
  books_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  cached_cover?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<UsersCached_CoverArgs>
  >;
  cached_genres?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<UsersCached_GenresArgs>
  >;
  cached_image?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<UsersCached_ImageArgs>
  >;
  collection_imports?: Resolver<
    Array<ResolversTypes['collection_imports']>,
    ParentType,
    ContextType,
    Partial<UsersCollection_ImportsArgs>
  >;
  confirmation_sent_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  confirmed_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  current_sign_in_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  email?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  email_verified?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  flair?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  followed_by_users?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<UsersFollowed_By_UsersArgs>
  >;
  followed_lists?: Resolver<
    Array<ResolversTypes['followed_lists']>,
    ParentType,
    ContextType,
    Partial<UsersFollowed_ListsArgs>
  >;
  followed_prompts?: Resolver<
    Array<ResolversTypes['followed_prompts']>,
    ParentType,
    ContextType,
    Partial<UsersFollowed_PromptsArgs>
  >;
  followed_users?: Resolver<
    Array<ResolversTypes['followed_users']>,
    ParentType,
    ContextType,
    Partial<UsersFollowed_UsersArgs>
  >;
  followed_users_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  followers_count?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  goals?: Resolver<
    Array<ResolversTypes['goals']>,
    ParentType,
    ContextType,
    Partial<UsersGoalsArgs>
  >;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['images']>, ParentType, ContextType>;
  image_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  last_activity_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  last_sign_in_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  librarian_roles?: Resolver<
    ResolversTypes['jsonb'],
    ParentType,
    ContextType,
    Partial<UsersLibrarian_RolesArgs>
  >;
  link?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  lists?: Resolver<
    Array<ResolversTypes['lists']>,
    ParentType,
    ContextType,
    Partial<UsersListsArgs>
  >;
  lists_aggregate?: Resolver<
    ResolversTypes['lists_aggregate'],
    ParentType,
    ContextType,
    Partial<UsersLists_AggregateArgs>
  >;
  location?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  locked_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  match_updated_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  membership?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  membership_ends_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  notification_deliveries?: Resolver<
    Array<ResolversTypes['notification_deliveries']>,
    ParentType,
    ContextType,
    Partial<UsersNotification_DeliveriesArgs>
  >;
  notification_deliveries_aggregate?: Resolver<
    ResolversTypes['notification_deliveries_aggregate'],
    ParentType,
    ContextType,
    Partial<UsersNotification_Deliveries_AggregateArgs>
  >;
  object_type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  onboarded?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  payment_system_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  pro?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  prompt_answers?: Resolver<
    Array<ResolversTypes['prompt_answers']>,
    ParentType,
    ContextType,
    Partial<UsersPrompt_AnswersArgs>
  >;
  prompt_answers_aggregate?: Resolver<
    ResolversTypes['prompt_answers_aggregate'],
    ParentType,
    ContextType,
    Partial<UsersPrompt_Answers_AggregateArgs>
  >;
  prompts?: Resolver<
    Array<ResolversTypes['prompts']>,
    ParentType,
    ContextType,
    Partial<UsersPromptsArgs>
  >;
  pronoun_personal?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  pronoun_possessive?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  recommendations?: Resolver<
    Array<ResolversTypes['recommendations']>,
    ParentType,
    ContextType,
    Partial<UsersRecommendationsArgs>
  >;
  recommended?: Resolver<
    Array<ResolversTypes['recommendations']>,
    ParentType,
    ContextType,
    Partial<UsersRecommendedArgs>
  >;
  referrer_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  referrer_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  referrered_users?: Resolver<
    Array<ResolversTypes['user_books']>,
    ParentType,
    ContextType,
    Partial<UsersReferrered_UsersArgs>
  >;
  referrered_users_aggregate?: Resolver<
    ResolversTypes['user_books_aggregate'],
    ParentType,
    ContextType,
    Partial<UsersReferrered_Users_AggregateArgs>
  >;
  remember_created_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  reported_user_flags?: Resolver<
    Array<ResolversTypes['user_flags']>,
    ParentType,
    ContextType,
    Partial<UsersReported_User_FlagsArgs>
  >;
  reset_password_sent_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  sign_in_count?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  status_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  taggings?: Resolver<
    Array<ResolversTypes['taggings']>,
    ParentType,
    ContextType,
    Partial<UsersTaggingsArgs>
  >;
  taggings_aggregate?: Resolver<
    ResolversTypes['taggings_aggregate'],
    ParentType,
    ContextType,
    Partial<UsersTaggings_AggregateArgs>
  >;
  unconfirmed_email?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  user_books?: Resolver<
    Array<ResolversTypes['user_books']>,
    ParentType,
    ContextType,
    Partial<UsersUser_BooksArgs>
  >;
  user_books_aggregate?: Resolver<
    ResolversTypes['user_books_aggregate'],
    ParentType,
    ContextType,
    Partial<UsersUser_Books_AggregateArgs>
  >;
  user_flags?: Resolver<
    Array<ResolversTypes['user_flags']>,
    ParentType,
    ContextType,
    Partial<UsersUser_FlagsArgs>
  >;
  username?: Resolver<Maybe<ResolversTypes['citext']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Users_Aggregate_By_Created_At_DateResolvers<
  ContextType = any,
  ParentType extends
    ResolversParentTypes['users_aggregate_by_created_at_date'] = ResolversParentTypes['users_aggregate_by_created_at_date'],
> = {
  count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['date']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Resolvers<ContextType = any> = {
  AuthorIdType?: AuthorIdTypeResolvers<ContextType>;
  BasicTagType?: BasicTagTypeResolvers<ContextType>;
  BookIdType?: BookIdTypeResolvers<ContextType>;
  BookMappingIdType?: BookMappingIdTypeResolvers<ContextType>;
  CharacterIdType?: CharacterIdTypeResolvers<ContextType>;
  CollectionImportIdType?: CollectionImportIdTypeResolvers<ContextType>;
  CollectionImportResultIdType?: CollectionImportResultIdTypeResolvers<ContextType>;
  DeleteFollowedPromptType?: DeleteFollowedPromptTypeResolvers<ContextType>;
  DeleteListType?: DeleteListTypeResolvers<ContextType>;
  DeleteReadingJournalOutput?: DeleteReadingJournalOutputResolvers<ContextType>;
  DeleteReadingJournalsOutput?: DeleteReadingJournalsOutputResolvers<ContextType>;
  EditionIdType?: EditionIdTypeResolvers<ContextType>;
  FollowedListType?: FollowedListTypeResolvers<ContextType>;
  FollowedPromptType?: FollowedPromptTypeResolvers<ContextType>;
  FollowedUserType?: FollowedUserTypeResolvers<ContextType>;
  GoalIdType?: GoalIdTypeResolvers<ContextType>;
  ImageIdType?: ImageIdTypeResolvers<ContextType>;
  InsertBlockOutput?: InsertBlockOutputResolvers<ContextType>;
  LikeDeleteType?: LikeDeleteTypeResolvers<ContextType>;
  LikeType?: LikeTypeResolvers<ContextType>;
  ListBookDeleteType?: ListBookDeleteTypeResolvers<ContextType>;
  ListBookIdType?: ListBookIdTypeResolvers<ContextType>;
  ListDeleteType?: ListDeleteTypeResolvers<ContextType>;
  ListIdType?: ListIdTypeResolvers<ContextType>;
  NewBookIdType?: NewBookIdTypeResolvers<ContextType>;
  NewsletterStatusType?: NewsletterStatusTypeResolvers<ContextType>;
  OptionalEditionIdType?: OptionalEditionIdTypeResolvers<ContextType>;
  PromptAnswerIdType?: PromptAnswerIdTypeResolvers<ContextType>;
  PromptIdType?: PromptIdTypeResolvers<ContextType>;
  PublisherIdType?: PublisherIdTypeResolvers<ContextType>;
  ReadingJournalOutput?: ReadingJournalOutputResolvers<ContextType>;
  ReferralType?: ReferralTypeResolvers<ContextType>;
  ReportOutput?: ReportOutputResolvers<ContextType>;
  SearchOutput?: SearchOutputResolvers<ContextType>;
  SeriesIdType?: SeriesIdTypeResolvers<ContextType>;
  SubscriptionsType?: SubscriptionsTypeResolvers<ContextType>;
  SuccessType?: SuccessTypeResolvers<ContextType>;
  TagsType?: TagsTypeResolvers<ContextType>;
  TrendingBookType?: TrendingBookTypeResolvers<ContextType>;
  UserBookDeleteType?: UserBookDeleteTypeResolvers<ContextType>;
  UserBookIdType?: UserBookIdTypeResolvers<ContextType>;
  UserBookReadIdType?: UserBookReadIdTypeResolvers<ContextType>;
  UserBooksReadUpsertType?: UserBooksReadUpsertTypeResolvers<ContextType>;
  UserIdType?: UserIdTypeResolvers<ContextType>;
  ValidateReceiptType?: ValidateReceiptTypeResolvers<ContextType>;
  activities?: ActivitiesResolvers<ContextType>;
  activities_mutation_response?: Activities_Mutation_ResponseResolvers<ContextType>;
  authors?: AuthorsResolvers<ContextType>;
  bigint?: GraphQLScalarType;
  book_categories?: Book_CategoriesResolvers<ContextType>;
  book_characters?: Book_CharactersResolvers<ContextType>;
  book_collections?: Book_CollectionsResolvers<ContextType>;
  book_mappings?: Book_MappingsResolvers<ContextType>;
  book_series?: Book_SeriesResolvers<ContextType>;
  book_series_aggregate?: Book_Series_AggregateResolvers<ContextType>;
  book_series_aggregate_fields?: Book_Series_Aggregate_FieldsResolvers<ContextType>;
  book_series_avg_fields?: Book_Series_Avg_FieldsResolvers<ContextType>;
  book_series_max_fields?: Book_Series_Max_FieldsResolvers<ContextType>;
  book_series_min_fields?: Book_Series_Min_FieldsResolvers<ContextType>;
  book_series_stddev_fields?: Book_Series_Stddev_FieldsResolvers<ContextType>;
  book_series_stddev_pop_fields?: Book_Series_Stddev_Pop_FieldsResolvers<ContextType>;
  book_series_stddev_samp_fields?: Book_Series_Stddev_Samp_FieldsResolvers<ContextType>;
  book_series_sum_fields?: Book_Series_Sum_FieldsResolvers<ContextType>;
  book_series_var_pop_fields?: Book_Series_Var_Pop_FieldsResolvers<ContextType>;
  book_series_var_samp_fields?: Book_Series_Var_Samp_FieldsResolvers<ContextType>;
  book_series_variance_fields?: Book_Series_Variance_FieldsResolvers<ContextType>;
  book_statuses?: Book_StatusesResolvers<ContextType>;
  bookles?: BooklesResolvers<ContextType>;
  books?: BooksResolvers<ContextType>;
  books_aggregate?: Books_AggregateResolvers<ContextType>;
  books_aggregate_fields?: Books_Aggregate_FieldsResolvers<ContextType>;
  books_avg_fields?: Books_Avg_FieldsResolvers<ContextType>;
  books_max_fields?: Books_Max_FieldsResolvers<ContextType>;
  books_min_fields?: Books_Min_FieldsResolvers<ContextType>;
  books_stddev_fields?: Books_Stddev_FieldsResolvers<ContextType>;
  books_stddev_pop_fields?: Books_Stddev_Pop_FieldsResolvers<ContextType>;
  books_stddev_samp_fields?: Books_Stddev_Samp_FieldsResolvers<ContextType>;
  books_sum_fields?: Books_Sum_FieldsResolvers<ContextType>;
  books_var_pop_fields?: Books_Var_Pop_FieldsResolvers<ContextType>;
  books_var_samp_fields?: Books_Var_Samp_FieldsResolvers<ContextType>;
  books_variance_fields?: Books_Variance_FieldsResolvers<ContextType>;
  characters?: CharactersResolvers<ContextType>;
  citext?: GraphQLScalarType;
  collection_import_results?: Collection_Import_ResultsResolvers<ContextType>;
  collection_import_results_mutation_response?: Collection_Import_Results_Mutation_ResponseResolvers<ContextType>;
  collection_imports?: Collection_ImportsResolvers<ContextType>;
  contributions?: ContributionsResolvers<ContextType>;
  contributions_aggregate?: Contributions_AggregateResolvers<ContextType>;
  contributions_aggregate_fields?: Contributions_Aggregate_FieldsResolvers<ContextType>;
  contributions_avg_fields?: Contributions_Avg_FieldsResolvers<ContextType>;
  contributions_max_fields?: Contributions_Max_FieldsResolvers<ContextType>;
  contributions_min_fields?: Contributions_Min_FieldsResolvers<ContextType>;
  contributions_stddev_fields?: Contributions_Stddev_FieldsResolvers<ContextType>;
  contributions_stddev_pop_fields?: Contributions_Stddev_Pop_FieldsResolvers<ContextType>;
  contributions_stddev_samp_fields?: Contributions_Stddev_Samp_FieldsResolvers<ContextType>;
  contributions_sum_fields?: Contributions_Sum_FieldsResolvers<ContextType>;
  contributions_var_pop_fields?: Contributions_Var_Pop_FieldsResolvers<ContextType>;
  contributions_var_samp_fields?: Contributions_Var_Samp_FieldsResolvers<ContextType>;
  contributions_variance_fields?: Contributions_Variance_FieldsResolvers<ContextType>;
  countries?: CountriesResolvers<ContextType>;
  date?: GraphQLScalarType;
  editions?: EditionsResolvers<ContextType>;
  flag_statuses?: Flag_StatusesResolvers<ContextType>;
  float8?: GraphQLScalarType;
  followed_lists?: Followed_ListsResolvers<ContextType>;
  followed_prompts?: Followed_PromptsResolvers<ContextType>;
  followed_prompts_mutation_response?: Followed_Prompts_Mutation_ResponseResolvers<ContextType>;
  followed_user_books?: Followed_User_BooksResolvers<ContextType>;
  followed_user_books_aggregate?: Followed_User_Books_AggregateResolvers<ContextType>;
  followed_user_books_aggregate_fields?: Followed_User_Books_Aggregate_FieldsResolvers<ContextType>;
  followed_user_books_avg_fields?: Followed_User_Books_Avg_FieldsResolvers<ContextType>;
  followed_user_books_max_fields?: Followed_User_Books_Max_FieldsResolvers<ContextType>;
  followed_user_books_min_fields?: Followed_User_Books_Min_FieldsResolvers<ContextType>;
  followed_user_books_stddev_fields?: Followed_User_Books_Stddev_FieldsResolvers<ContextType>;
  followed_user_books_stddev_pop_fields?: Followed_User_Books_Stddev_Pop_FieldsResolvers<ContextType>;
  followed_user_books_stddev_samp_fields?: Followed_User_Books_Stddev_Samp_FieldsResolvers<ContextType>;
  followed_user_books_sum_fields?: Followed_User_Books_Sum_FieldsResolvers<ContextType>;
  followed_user_books_var_pop_fields?: Followed_User_Books_Var_Pop_FieldsResolvers<ContextType>;
  followed_user_books_var_samp_fields?: Followed_User_Books_Var_Samp_FieldsResolvers<ContextType>;
  followed_user_books_variance_fields?: Followed_User_Books_Variance_FieldsResolvers<ContextType>;
  followed_users?: Followed_UsersResolvers<ContextType>;
  followed_users_mutation_response?: Followed_Users_Mutation_ResponseResolvers<ContextType>;
  following_user_books?: Following_User_BooksResolvers<ContextType>;
  following_user_books_aggregate?: Following_User_Books_AggregateResolvers<ContextType>;
  following_user_books_aggregate_fields?: Following_User_Books_Aggregate_FieldsResolvers<ContextType>;
  following_user_books_avg_fields?: Following_User_Books_Avg_FieldsResolvers<ContextType>;
  following_user_books_max_fields?: Following_User_Books_Max_FieldsResolvers<ContextType>;
  following_user_books_min_fields?: Following_User_Books_Min_FieldsResolvers<ContextType>;
  following_user_books_stddev_fields?: Following_User_Books_Stddev_FieldsResolvers<ContextType>;
  following_user_books_stddev_pop_fields?: Following_User_Books_Stddev_Pop_FieldsResolvers<ContextType>;
  following_user_books_stddev_samp_fields?: Following_User_Books_Stddev_Samp_FieldsResolvers<ContextType>;
  following_user_books_sum_fields?: Following_User_Books_Sum_FieldsResolvers<ContextType>;
  following_user_books_var_pop_fields?: Following_User_Books_Var_Pop_FieldsResolvers<ContextType>;
  following_user_books_var_samp_fields?: Following_User_Books_Var_Samp_FieldsResolvers<ContextType>;
  following_user_books_variance_fields?: Following_User_Books_Variance_FieldsResolvers<ContextType>;
  goals?: GoalsResolvers<ContextType>;
  goals_mutation_response?: Goals_Mutation_ResponseResolvers<ContextType>;
  images?: ImagesResolvers<ContextType>;
  json?: GraphQLScalarType;
  jsonb?: GraphQLScalarType;
  languages?: LanguagesResolvers<ContextType>;
  likes?: LikesResolvers<ContextType>;
  list_books?: List_BooksResolvers<ContextType>;
  list_books_aggregate?: List_Books_AggregateResolvers<ContextType>;
  list_books_aggregate_fields?: List_Books_Aggregate_FieldsResolvers<ContextType>;
  list_books_avg_fields?: List_Books_Avg_FieldsResolvers<ContextType>;
  list_books_max_fields?: List_Books_Max_FieldsResolvers<ContextType>;
  list_books_min_fields?: List_Books_Min_FieldsResolvers<ContextType>;
  list_books_mutation_response?: List_Books_Mutation_ResponseResolvers<ContextType>;
  list_books_stddev_fields?: List_Books_Stddev_FieldsResolvers<ContextType>;
  list_books_stddev_pop_fields?: List_Books_Stddev_Pop_FieldsResolvers<ContextType>;
  list_books_stddev_samp_fields?: List_Books_Stddev_Samp_FieldsResolvers<ContextType>;
  list_books_sum_fields?: List_Books_Sum_FieldsResolvers<ContextType>;
  list_books_var_pop_fields?: List_Books_Var_Pop_FieldsResolvers<ContextType>;
  list_books_var_samp_fields?: List_Books_Var_Samp_FieldsResolvers<ContextType>;
  list_books_variance_fields?: List_Books_Variance_FieldsResolvers<ContextType>;
  lists?: ListsResolvers<ContextType>;
  lists_aggregate?: Lists_AggregateResolvers<ContextType>;
  lists_aggregate_fields?: Lists_Aggregate_FieldsResolvers<ContextType>;
  lists_avg_fields?: Lists_Avg_FieldsResolvers<ContextType>;
  lists_max_fields?: Lists_Max_FieldsResolvers<ContextType>;
  lists_min_fields?: Lists_Min_FieldsResolvers<ContextType>;
  lists_stddev_fields?: Lists_Stddev_FieldsResolvers<ContextType>;
  lists_stddev_pop_fields?: Lists_Stddev_Pop_FieldsResolvers<ContextType>;
  lists_stddev_samp_fields?: Lists_Stddev_Samp_FieldsResolvers<ContextType>;
  lists_sum_fields?: Lists_Sum_FieldsResolvers<ContextType>;
  lists_var_pop_fields?: Lists_Var_Pop_FieldsResolvers<ContextType>;
  lists_var_samp_fields?: Lists_Var_Samp_FieldsResolvers<ContextType>;
  lists_variance_fields?: Lists_Variance_FieldsResolvers<ContextType>;
  mutation_root?: Mutation_RootResolvers<ContextType>;
  notification_channels?: Notification_ChannelsResolvers<ContextType>;
  notification_deliveries?: Notification_DeliveriesResolvers<ContextType>;
  notification_deliveries_aggregate?: Notification_Deliveries_AggregateResolvers<ContextType>;
  notification_deliveries_aggregate_fields?: Notification_Deliveries_Aggregate_FieldsResolvers<ContextType>;
  notification_deliveries_avg_fields?: Notification_Deliveries_Avg_FieldsResolvers<ContextType>;
  notification_deliveries_max_fields?: Notification_Deliveries_Max_FieldsResolvers<ContextType>;
  notification_deliveries_min_fields?: Notification_Deliveries_Min_FieldsResolvers<ContextType>;
  notification_deliveries_mutation_response?: Notification_Deliveries_Mutation_ResponseResolvers<ContextType>;
  notification_deliveries_stddev_fields?: Notification_Deliveries_Stddev_FieldsResolvers<ContextType>;
  notification_deliveries_stddev_pop_fields?: Notification_Deliveries_Stddev_Pop_FieldsResolvers<ContextType>;
  notification_deliveries_stddev_samp_fields?: Notification_Deliveries_Stddev_Samp_FieldsResolvers<ContextType>;
  notification_deliveries_sum_fields?: Notification_Deliveries_Sum_FieldsResolvers<ContextType>;
  notification_deliveries_var_pop_fields?: Notification_Deliveries_Var_Pop_FieldsResolvers<ContextType>;
  notification_deliveries_var_samp_fields?: Notification_Deliveries_Var_Samp_FieldsResolvers<ContextType>;
  notification_deliveries_variance_fields?: Notification_Deliveries_Variance_FieldsResolvers<ContextType>;
  notification_settings?: Notification_SettingsResolvers<ContextType>;
  notification_settings_mutation_response?: Notification_Settings_Mutation_ResponseResolvers<ContextType>;
  notification_types?: Notification_TypesResolvers<ContextType>;
  notifications?: NotificationsResolvers<ContextType>;
  numeric?: GraphQLScalarType;
  platforms?: PlatformsResolvers<ContextType>;
  privacy_settings?: Privacy_SettingsResolvers<ContextType>;
  prompt_answers?: Prompt_AnswersResolvers<ContextType>;
  prompt_answers_aggregate?: Prompt_Answers_AggregateResolvers<ContextType>;
  prompt_answers_aggregate_fields?: Prompt_Answers_Aggregate_FieldsResolvers<ContextType>;
  prompt_answers_avg_fields?: Prompt_Answers_Avg_FieldsResolvers<ContextType>;
  prompt_answers_max_fields?: Prompt_Answers_Max_FieldsResolvers<ContextType>;
  prompt_answers_min_fields?: Prompt_Answers_Min_FieldsResolvers<ContextType>;
  prompt_answers_mutation_response?: Prompt_Answers_Mutation_ResponseResolvers<ContextType>;
  prompt_answers_stddev_fields?: Prompt_Answers_Stddev_FieldsResolvers<ContextType>;
  prompt_answers_stddev_pop_fields?: Prompt_Answers_Stddev_Pop_FieldsResolvers<ContextType>;
  prompt_answers_stddev_samp_fields?: Prompt_Answers_Stddev_Samp_FieldsResolvers<ContextType>;
  prompt_answers_sum_fields?: Prompt_Answers_Sum_FieldsResolvers<ContextType>;
  prompt_answers_var_pop_fields?: Prompt_Answers_Var_Pop_FieldsResolvers<ContextType>;
  prompt_answers_var_samp_fields?: Prompt_Answers_Var_Samp_FieldsResolvers<ContextType>;
  prompt_answers_variance_fields?: Prompt_Answers_Variance_FieldsResolvers<ContextType>;
  prompt_books_summary?: Prompt_Books_SummaryResolvers<ContextType>;
  prompts?: PromptsResolvers<ContextType>;
  prompts_mutation_response?: Prompts_Mutation_ResponseResolvers<ContextType>;
  publishers?: PublishersResolvers<ContextType>;
  query_root?: Query_RootResolvers<ContextType>;
  reading_formats?: Reading_FormatsResolvers<ContextType>;
  reading_journals?: Reading_JournalsResolvers<ContextType>;
  reading_journals_summary?: Reading_Journals_SummaryResolvers<ContextType>;
  recommendations?: RecommendationsResolvers<ContextType>;
  series?: SeriesResolvers<ContextType>;
  smallint?: GraphQLScalarType;
  subscription_root?: Subscription_RootResolvers<ContextType>;
  tag_categories?: Tag_CategoriesResolvers<ContextType>;
  taggable_counts?: Taggable_CountsResolvers<ContextType>;
  taggings?: TaggingsResolvers<ContextType>;
  taggings_aggregate?: Taggings_AggregateResolvers<ContextType>;
  taggings_aggregate_fields?: Taggings_Aggregate_FieldsResolvers<ContextType>;
  taggings_avg_fields?: Taggings_Avg_FieldsResolvers<ContextType>;
  taggings_max_fields?: Taggings_Max_FieldsResolvers<ContextType>;
  taggings_min_fields?: Taggings_Min_FieldsResolvers<ContextType>;
  taggings_stddev_fields?: Taggings_Stddev_FieldsResolvers<ContextType>;
  taggings_stddev_pop_fields?: Taggings_Stddev_Pop_FieldsResolvers<ContextType>;
  taggings_stddev_samp_fields?: Taggings_Stddev_Samp_FieldsResolvers<ContextType>;
  taggings_sum_fields?: Taggings_Sum_FieldsResolvers<ContextType>;
  taggings_var_pop_fields?: Taggings_Var_Pop_FieldsResolvers<ContextType>;
  taggings_var_samp_fields?: Taggings_Var_Samp_FieldsResolvers<ContextType>;
  taggings_variance_fields?: Taggings_Variance_FieldsResolvers<ContextType>;
  tags?: TagsResolvers<ContextType>;
  tags_aggregate?: Tags_AggregateResolvers<ContextType>;
  tags_aggregate_fields?: Tags_Aggregate_FieldsResolvers<ContextType>;
  tags_avg_fields?: Tags_Avg_FieldsResolvers<ContextType>;
  tags_max_fields?: Tags_Max_FieldsResolvers<ContextType>;
  tags_min_fields?: Tags_Min_FieldsResolvers<ContextType>;
  tags_stddev_fields?: Tags_Stddev_FieldsResolvers<ContextType>;
  tags_stddev_pop_fields?: Tags_Stddev_Pop_FieldsResolvers<ContextType>;
  tags_stddev_samp_fields?: Tags_Stddev_Samp_FieldsResolvers<ContextType>;
  tags_sum_fields?: Tags_Sum_FieldsResolvers<ContextType>;
  tags_var_pop_fields?: Tags_Var_Pop_FieldsResolvers<ContextType>;
  tags_var_samp_fields?: Tags_Var_Samp_FieldsResolvers<ContextType>;
  tags_variance_fields?: Tags_Variance_FieldsResolvers<ContextType>;
  timestamp?: GraphQLScalarType;
  timestamptz?: GraphQLScalarType;
  user_blocks?: User_BlocksResolvers<ContextType>;
  user_blocks_mutation_response?: User_Blocks_Mutation_ResponseResolvers<ContextType>;
  user_book_reads?: User_Book_ReadsResolvers<ContextType>;
  user_book_reads_aggregate?: User_Book_Reads_AggregateResolvers<ContextType>;
  user_book_reads_aggregate_fields?: User_Book_Reads_Aggregate_FieldsResolvers<ContextType>;
  user_book_reads_avg_fields?: User_Book_Reads_Avg_FieldsResolvers<ContextType>;
  user_book_reads_max_fields?: User_Book_Reads_Max_FieldsResolvers<ContextType>;
  user_book_reads_min_fields?: User_Book_Reads_Min_FieldsResolvers<ContextType>;
  user_book_reads_stddev_fields?: User_Book_Reads_Stddev_FieldsResolvers<ContextType>;
  user_book_reads_stddev_pop_fields?: User_Book_Reads_Stddev_Pop_FieldsResolvers<ContextType>;
  user_book_reads_stddev_samp_fields?: User_Book_Reads_Stddev_Samp_FieldsResolvers<ContextType>;
  user_book_reads_sum_fields?: User_Book_Reads_Sum_FieldsResolvers<ContextType>;
  user_book_reads_var_pop_fields?: User_Book_Reads_Var_Pop_FieldsResolvers<ContextType>;
  user_book_reads_var_samp_fields?: User_Book_Reads_Var_Samp_FieldsResolvers<ContextType>;
  user_book_reads_variance_fields?: User_Book_Reads_Variance_FieldsResolvers<ContextType>;
  user_book_statuses?: User_Book_StatusesResolvers<ContextType>;
  user_book_statuses_aggregate?: User_Book_Statuses_AggregateResolvers<ContextType>;
  user_book_statuses_aggregate_fields?: User_Book_Statuses_Aggregate_FieldsResolvers<ContextType>;
  user_book_statuses_avg_fields?: User_Book_Statuses_Avg_FieldsResolvers<ContextType>;
  user_book_statuses_max_fields?: User_Book_Statuses_Max_FieldsResolvers<ContextType>;
  user_book_statuses_min_fields?: User_Book_Statuses_Min_FieldsResolvers<ContextType>;
  user_book_statuses_stddev_fields?: User_Book_Statuses_Stddev_FieldsResolvers<ContextType>;
  user_book_statuses_stddev_pop_fields?: User_Book_Statuses_Stddev_Pop_FieldsResolvers<ContextType>;
  user_book_statuses_stddev_samp_fields?: User_Book_Statuses_Stddev_Samp_FieldsResolvers<ContextType>;
  user_book_statuses_sum_fields?: User_Book_Statuses_Sum_FieldsResolvers<ContextType>;
  user_book_statuses_var_pop_fields?: User_Book_Statuses_Var_Pop_FieldsResolvers<ContextType>;
  user_book_statuses_var_samp_fields?: User_Book_Statuses_Var_Samp_FieldsResolvers<ContextType>;
  user_book_statuses_variance_fields?: User_Book_Statuses_Variance_FieldsResolvers<ContextType>;
  user_books?: User_BooksResolvers<ContextType>;
  user_books_aggregate?: User_Books_AggregateResolvers<ContextType>;
  user_books_aggregate_fields?: User_Books_Aggregate_FieldsResolvers<ContextType>;
  user_books_avg_fields?: User_Books_Avg_FieldsResolvers<ContextType>;
  user_books_max_fields?: User_Books_Max_FieldsResolvers<ContextType>;
  user_books_min_fields?: User_Books_Min_FieldsResolvers<ContextType>;
  user_books_stddev_fields?: User_Books_Stddev_FieldsResolvers<ContextType>;
  user_books_stddev_pop_fields?: User_Books_Stddev_Pop_FieldsResolvers<ContextType>;
  user_books_stddev_samp_fields?: User_Books_Stddev_Samp_FieldsResolvers<ContextType>;
  user_books_sum_fields?: User_Books_Sum_FieldsResolvers<ContextType>;
  user_books_var_pop_fields?: User_Books_Var_Pop_FieldsResolvers<ContextType>;
  user_books_var_samp_fields?: User_Books_Var_Samp_FieldsResolvers<ContextType>;
  user_books_variance_fields?: User_Books_Variance_FieldsResolvers<ContextType>;
  user_flags?: User_FlagsResolvers<ContextType>;
  user_flags_mutation_response?: User_Flags_Mutation_ResponseResolvers<ContextType>;
  user_referrals?: User_ReferralsResolvers<ContextType>;
  user_statuses?: User_StatusesResolvers<ContextType>;
  users?: UsersResolvers<ContextType>;
  users_aggregate_by_created_at_date?: Users_Aggregate_By_Created_At_DateResolvers<ContextType>;
};

export type DirectiveResolvers<ContextType = any> = {
  cached?: CachedDirectiveResolver<any, any, ContextType>;
};
